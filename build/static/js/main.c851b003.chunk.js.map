{"version":3,"sources":["homepage.js","component/login/LoginCard.js","lib/dateFormat.js","component/login/RegisterCard.js","reportWebVitals.js","component/login/LoginOut.js","component/customer/CustomerSidebar.js","lib/statusTag.js","lib/flightData.js","component/flight/PurchaseModals/CustomerModal.js","component/flight/PurchaseModals/AgentModal.js","component/flight/SearchFlights.js","component/customer/PurchaseTicket.js","component/customer/SpendingChart.js","component/agent/AgentSidebar.js","component/agent/TopCustomerChart.js","component/agent/CommissionStatistics.js","component/staff/StaffSidebar.js","component/staff/EditAirport.js","component/staff/EditAirplane.js","component/global/GlobalSidebar.js","component/staff/CRUDElements/CreateForm.js","component/staff/CRUDElements/UpdateForm.js","component/staff/CRUDElements/DetailsForm.js","component/staff/FlightCRUD.js","component/staff/ViewAgents.js","component/staff/ViewReports.js","component/staff/TopDestinations.js","component/staff/RevenueComparsion.js","component/staff/ViewFrequent.js","component/staff/AddAgents.js","component/staff/GrantPermission.js","page/UserPage.js","index.js"],"names":["axios","defaults","withCredentials","Title","Typography","HomePage","useNavigate","style","textAlign","width","position","top","type","shape","size","to","ArrowRightOutlined","LoginCard","props","loginInfo","setInitializeType","setRegisterModalVisible","setNavigateBar","registerLoginValue","setRegisterLoginValue","setLoginModalVisible","navigate","Form","useForm","form","useState","activeTab","setActiveTab","usernameMessage","customer","agent","staff","display","marginLeft","marginRight","tabList","key","tab","onTabChange","resetFields","name","className","onFinish","values","url","method","data","userType","then","response","response_msg","status","console","log","infoMap","alias","current","airlineStaff","username","email","bookingAgent","replace","statusCode","setFields","errors","catch","message","error","onFinishedFailed","alert","Item","rules","required","prefix","UserOutlined","placeholder","dependencies","Password","LockOutlined","htmlType","onClick","timeout","dateFormat","RegisterCard","initializeType","Option","Select","prefixSelector","noStyle","value","autoCompleteResult","map","website","label","title","labelCol","xs","span","sm","wrapperCol","success","initialValues","residence","scrollToFirstError","validator","inititalizeType","callback","params","valid","validateTrigger","hasFeedback","rule","min","max","pattern","getFieldValue","_","Promise","reject","Error","resolve","tooltip","whitespace","format","addonBefore","TextArea","showCount","maxLength","offset","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","countDown","secondsToGo","modal","Modal","content","timer","setInterval","update","setTimeout","clearInterval","destroy","SubMenu","Menu","CustomerSidebar","updateSelection","defaultData","setActionType","setFlightResult","tagList","actionTypeMapping","useEffect","mode","defaultSelectedKeys","defaultOpenKeys","item","cookie","remove","height","borderRight","icon","CarryOutOutlined","SettingOutlined","statusColor","formatterTime","val","moment","globalInterfaceColumns","dataIndex","render","tags","color","toUpperCase","CustomerModal","customerModalVis","setCustomerModalVis","rowRecord","setRowRecord","showStatus","setStatus","purchaseInfo","setPurchaseInfo","FormItem","description","bodyStyle","padding","destroyOnClose","visible","footer","airlineName","flightNum","bookingAgentId","onCancel","airline","flight_id","disabled","itemtlayout","dataSource","renderItem","Meta","AgentModal","agentModalVis","setAgentModalVis","checkEmail","Input","Search","FlightsResultTable","actionType","columns","DatePicker","RangePicker","text","record","full","dataMap","dept","sourceAirportName","arri","destAirportName","dept_time","departureTime","arri_time","arrivalTime","price","remainingSeats","ticketId","ticket_id","customerEmail","filter","SearchFlights","flightsResult","actionTab","undefined","deptAirport","setDeptAirport","arriAirport","setArriAirport","deptDate","setDeptDate","deptDate2","setDeptDate2","searchResult","setSearchResult","searchAirport","options","handleSearch","handleChange","callBack","Group","showSearch","defaultActiveFirstOption","showArrow","filterOption","onSearch","onChange","notFoundContent","allowClear","SwapOutlined","tmp","paddingLeft","picker","sendObject","qs","stringify","sourceAirport","destAirport","startDate","Date","endDate","header","SpendingChart","spendingData","setSpendingData","subtract","setStart","setEnd","interval","start","end","length","setStartDate","setEndDate","chartConfig","appendPadding","angleField","colorField","radius","meta","formatter","v","toString","interactions","defaultValue","AgentSidebar","TopCustomerChart","setData","topK","setTopK","searchTickets","formattedData","ticketsFromAgent","totalCommission","tabBarExtraContent","xField","yField","seriesField","columnWidthRatio","fill","opacity","xAxis","autoHide","autoRotate","slice","uid","sum","CommissionStatistics","commissionData","setCommissionData","avgcommissionData","setAvgCommissionData","totalTickets","setTotalTickets","loadingHolder","Boolean","loadingHolderForAvg","loadingHolderForTickets","commissionFees","averageCommissionFees","ticketBooked","direction","dateString","loading","precision","StaffSidebar","SendOutlined","permissionDescription","includes","FundViewOutlined","EditAirport","marginTop","onFinishFailed","tableData","setTableData","getAirplanes","initialvalue","airplaneId","seats","align","id","GlobalSidebar","countDownAnony","formLayout","CreateForm","modalVisible","handleCreateModalVisible","onSubmit","handleCreate","formVals","setFormVals","disabledDate","endOf","optionsData","handleNext","a","validateFields","fieldsValue","showTime","UpdateForm","updateModalVisible","handleUpdateModalVisible","handleUpdate","optionDiaplayMapping","optionMapping","DetailsTable","detailModalVisible","handleDetailModalVisible","passengers","scroll","x","textWrap","ellipsis","fixed","FlightCRUD","createModalVisible","selectedRows","setSelectedRows","stepFormValues","setStepFormValues","radioValue","actionRef","useRef","defaultRef","fetchFlightData","query","fetchFilteredFlightData","handleDelete","airline_name","reload","flight_info","cancel","e","valueType","hideInSearch","EditOutlined","fontSize","onConfirm","confirm","okText","cancelText","danger","DeleteOutlined","getData","sort","pageIndex","records","total","request","rowKey","index","rowSelection","onchange","toolBarRender","PlusOutlined","FooterToolbar","extra","fontWeight","reloadAndRest","Object","keys","ViewAgents","past","setPast","topSalesData","sales","handleSearchSales","topCommissionData","commission","get","K","totalSales","handleSearchCommission","config","legend","barBackground","enable","addonAfter","hoverable","onReady","plot","chart","on","evt","ViewReports","setTotalSales","originalData","reduce","getSum","sampleData","num","renderLastYear","renderLastMonth","renderRange","TopDestinations","getDestinationData","renderLast3Month","RevenueComparison","getRevenueData","labelHeight","ViewFrequent","originData","modalVisiblibity","setModalVisibility","modalEmail","setModalEmail","tickets","tableSampleData","tableColumns","getCustomerData","onNumberChange","processData","ticketsTotal","handleClick","event","tableDataMap","takenFlights","processTableData","placement","QuestionCircleOutlined","AddAgents","post","responseMapping","emailValid","workingValid","CheckboxGroup","Checkbox","defaultCheckedList","GrantPermission","React","checkedList","setCheckedList","userName","permission","errorMapping","nameValid","permissionValid","list","Header","Layout","Content","Sider","Footer","UserPage","initializingTab","navigateBar","sidebar","setSidebar","collapsed","setCollapsed","loginModalVisible","infoModalVisible","setInfoModalVisible","registerModalVisible","sidebarList","global","userContent","menu","customerList","AgentList","staffList","firstName","lastName","join","zIndex","theme","selectedKeys","overlay","backgroundColor","minHeight","collapsible","onCollapse","margin","charAt","marginBottom","App","path","element","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c851b003.chunk.js","sourcesContent":["import {Button, Typography} from \"antd\";\nimport {ArrowRightOutlined} from \"@ant-design/icons\";\nimport {Link} from \"react-router-dom\"\nimport RcQueueAnim from \"rc-queue-anim\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\n\naxios.defaults.withCredentials = true;\n\n\nconst {Title} = Typography;\n\n\n\n\nexport default function HomePage() {\n\n    let navigate = useNavigate();\n\n\n    const handleClickDefault =()=>{\n        console.log(\"haha\");\n        const shit = cookie.load(\"JSESSIONID\");\n        console.log(shit);\n    }\n\n    // const handleClick = ()=>{\n\n    //     axios({\n    //         url:\"http://localhost:8080/login/token\",\n    //         method:\"POST\",\n    //     }).then(function(response){\n    //         if(response.data){\n    //             console.log(response.data);\n    //             const statusMessage = response.data;\n    //             let info = null;\n    //             if(response.data.status==true){\n    //                 const userType = response.data.userType;\n    //                 if(userType===\"staff\"){\n    //                      info = response.data.airlineStaff;\n                        \n    //                 }else if(userType===\"customer\"){\n    //                      info = response.data.customer;\n    //                 }else if(userType===\"agent\"){\n    //                      info = response.data.bookingAgent;\n    //                 }\n    //                 navigate(\"/\"+userType,{replace:true});\n    //             }\n    //             console.log(info);\n    //         }\n    //     })\n\n        \n    // }\n\n    return (\n        <div style={{textAlign: 'center', width: '100%', position: 'absolute', top: '40vh'}}>\n            <RcQueueAnim type=\"left\" >\n                <Title key=\"ele1\" style={{}}>A Light Weight Airline System</Title>\n                <Button key=\"ele2\" type=\"primary\" shape=\"circle\" size=\"large\"> \n                    <Link to=\"/global\" > \n                        <ArrowRightOutlined />\n                     </Link> \n                </Button>\n            </RcQueueAnim>\n        </div>\n    )\n}\n\n","import {Card, Form, Input, Button,message} from 'antd';\nimport React, {useState} from \"react\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.defaults.timeout = 1000;\naxios.defaults.withCredentials = true;\n\nexport default function LoginCard(props) {\n\n    const {loginInfo,setInitializeType,setRegisterModalVisible,registerLoginValue,setRegisterLoginValue,setNavigateBar,setLoginModalVisible} = props;\n    let navigate = useNavigate();\n\n    const [form] = Form.useForm();\n\n    const [activeTab, setActiveTab] = useState('customer');\n\n    const onTabChange = (key) => {\n        setActiveTab(key);\n        form.resetFields();\n    }\n\n\n    //字段验证成功，准备做登录校验\n    const onFinish = (values) => {\n        // loginRequest(values.username, md5(values.password), activeTab)\n        \n        axios({\n            url:\"http://localhost:8080/login\",\n            method:\"post\",\n            data:{userType:activeTab,...values}\n        }).then(function(response){\n            const response_msg = response.data;\n            if(response_msg.status===true){\n                //登录成功,后台session中有用户信息,用于免登录\n                //前端保存用户的权限和基本信息\n                console.log(response_msg);\n                // 从cookie中获取用户信息\n                if(activeTab===\"customer\"){\n                    const name = response_msg.customer.name;\n                    const infoMap = {alias:name,...response_msg.customer}\n                    loginInfo.current = infoMap;\n                }else if(activeTab===\"staff\"){\n                    const name = response_msg.airlineStaff.username;\n                    const infoMap = {alias:name,...response_msg.airlineStaff}\n                    loginInfo.current = infoMap;\n                }else if(activeTab===\"agent\"){\n                    const email = response_msg.bookingAgent.email;\n                    const infoMap = {alias:email,...response_msg.bookingAgent}\n                    loginInfo.current = infoMap;\n                }\n                setNavigateBar(activeTab);\n                setLoginModalVisible(false);\n                navigate(\"/\"+activeTab,{replace:true});\n                \n            }else{\n                //诊断失败原因\n                // console.log(response.data);\n                if(response_msg.statusCode===1){\n                    form.setFields([\n                        {\n                            name:activeTab===\"customer\"?\"email\":\"username\",\n                            errors:[ \"User Not Found! Please Register First!\"]\n                        }\n                    ])\n                }else if(response_msg.statusCode===2){\n                    form.setFields([\n                        {\n                            name:\"password\",\n                            errors:[\"Password Error!\"]\n                        }\n                    ])\n                }else if(response_msg.statusCode===3){\n                    form.setFields([\n                        {\n                            name:\"bookingAgentId\",\n                            errors:[\"BookingId Error!\"]\n                        }\n                    ])\n                }\n            }\n            \n        }).catch(function(response){\n            message.error(\"Server response time out!\");\n        })\n        // eslint-disable-next-line no-restricted-globals\n        // navigate(\"/\" + activeTab, {replace: true})\n    }\n\n    //说的是字段的值验证失败\n    const onFinishFailed=()=>{\n        alert(\"字段有误\");\n        console.log(\"haha\");\n    }\n\n\n\n    const tabList = [\n        {key: 'customer', tab: 'Customer'},\n        {key: 'agent', tab: 'Booking Agent'},\n        {key: 'staff', tab: 'Airline Staff'}\n    ]\n\n    const usernameMessage = {\n        customer: \"E-mail\",\n        agent: \"E-mail\",\n        staff: \"Username\"\n    }\n\n    return (\n        <Card\n            style={{width: '100%', display: 'block', marginLeft: 'auto', marginRight: 'auto'}}\n            tabList={tabList}\n            activeTab={activeTab}\n            // tabBarExtraContent={<a href=\"/\">Back</a>}\n            onTabChange={onTabChange}\n        >\n            <Form\n                form={form}\n                name=\"login\"\n                className=\"login-form\"\n                onFinish={onFinish}\n                // initialValues={registerLoginValue}\n                onFinishedFailed={onFinishFailed}\n            >\n\n            {\n                activeTab===\"staff\"&&(<Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your \" + usernameMessage[activeTab]\n                         },\n                         ]}\n                         >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={usernameMessage[activeTab]} />\n                </Form.Item>)}\n\n                {\n                activeTab!=\"staff\"&&(<Form.Item\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your email\"\n                         },\n                         { \n                             type:\"email\",\n                             message:\"This is not a valid email type\"\n                         }\n                         ]}\n                         >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={\"E-mail\"} />\n                </Form.Item>)}\n            \n                \n                <Form.Item\n                    name=\"password\"\n                    rules={[{required: true, message: \"Please input your password\"}]}\n                    dependencies={['password']}\n                    >\n                    <Input.Password\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\" />\n                </Form.Item>\n                {activeTab===\"agent\"&&(\n                <Form.Item\n                    name=\"agentId\"\n                    rules={[{required: true, message: \"Please input your booking agent Id\"}]}>\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={\"Agent Id\"} />\n                </Form.Item>)}\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Log in</Button>\n                    <Button type=\"primary\" className=\"register-form-button\" style={{marginLeft:\"270px\"}} onClick={()=>{\n                        // navigate(\"/register\"+activeTab)\n                        setRegisterModalVisible(true);\n                        setInitializeType(activeTab);\n                    }}>Register</Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    )\n}","export const dateFormat = \"DD/MM/YYYY\";","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {dateFormat} from \"../../lib/dateFormat\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport qs from \"qs\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Cascader,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Select,\r\n  Button,\r\n  AutoComplete,\r\n  DatePicker,\r\n  message\r\n} from 'antd';\r\n\r\nexport default function RegisterCard({initializeType,setRegisterModalVisible,setRegisterLoginValue,setNavigateBar}){\r\n  console.log(initializeType);\r\n    const { Option } = Select;\r\n    const navigate = useNavigate();\r\n    const residences = [\r\n      {\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        children: [\r\n          {\r\n            value: 'hangzhou',\r\n            label: 'Hangzhou',\r\n            children: [\r\n              {\r\n                value: 'xihu',\r\n                label: 'West Lake',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        children: [\r\n          {\r\n            value: 'nanjing',\r\n            label: 'Nanjing',\r\n            children: [\r\n              {\r\n                value: 'zhonghuamen',\r\n                label: 'Zhong Hua Men',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {\r\n          span: 24,\r\n        },\r\n        sm: {\r\n          span: 8,\r\n        },\r\n      },\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n        },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    \r\n      const [form] = Form.useForm();\r\n\r\n      const [airlineList,setAirlineList] = useState([]);\r\n    \r\n      const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n        axios({\r\n          method:'POST',\r\n          url:initializeType===\"customer\"?'http://localhost:8080/register/registerCustomer'\r\n          :initializeType===\"staff\"?'http://localhost:8080/register/registerAirlineStaff':\r\n          'http://localhost:8080/register/registerBookingAgent',\r\n          data:values\r\n        }).then(function(response){\r\n            if(response.data===\"success\"){\r\n              message.success(\"Register Completed!\");\r\n              // setRegisterLoginValue(values);\r\n              setNavigateBar(\"global\");\r\n              setRegisterModalVisible(false);\r\n              navigate(\"/global\",{replace:true});\r\n            }\r\n        })\r\n      };\r\n    \r\n      const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"86\">+86</Option>\r\n            <Option value=\"87\">+87</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n      const suffixSelector = (\r\n        <Form.Item name=\"suffix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"USD\">$</Option>\r\n            <Option value=\"CNY\">¥</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n      const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n    \r\n      const onWebsiteChange = (value) => {\r\n        if (!value) {\r\n          setAutoCompleteResult([]);\r\n        } else {\r\n          setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n        }\r\n      };\r\n    \r\n      const websiteOptions = autoCompleteResult.map((website) => ({\r\n        label: website,\r\n        value: website,\r\n      }));\r\n\r\n      const checkUserName = (rule,value,callback)=>{\r\n            axios({\r\n                method:'GET',\r\n                url:'http://localhost:8080/register/validateAirlineStaff',\r\n                params:{\"username\":value}\r\n            }).then(function(response){\r\n                console.log(response);\r\n                if(response.data.valid===false){\r\n                    callback(\"Staff already registered!\");\r\n                    console.log(\"草\");\r\n                }else{\r\n                    callback();\r\n                    console.log(\"haha\");\r\n                }\r\n            }).catch(function(error){\r\n                console.log(\"error\")\r\n            })\r\n      }\r\n\r\n      const checkEmail = (inititalizeType,value,callback)=>{\r\n        axios({\r\n            method:'GET',\r\n            url:(initializeType===\"agent\")?'http://localhost:8080/register/validateBookingAgent':\r\n            \"http://localhost:8080/register/validateCustomer\",\r\n            params:{\"email\":value}\r\n        }).then(function(response){\r\n            console.log(response);\r\n            if(response.data.valid===false){\r\n                if(initializeType===\"agent\"){\r\n                callback(\"Agent already registered!\");}\r\n                else{\r\n                    callback(\"Customer already registered!\")\r\n                }\r\n                console.log(\"草\");\r\n            }else{\r\n                callback();\r\n                console.log(\"haha\");\r\n            }\r\n        }).catch(function(error){\r\n            console.log(\"error\")\r\n        })\r\n      }\r\n\r\n      const getAirlineList = ()=>{\r\n        axios({\r\n          method:'GET',\r\n          url:\"http://localhost:8080/register/getAirlineList\"\r\n      }).then(function(response){\r\n        console.log(response.data);\r\n          setAirlineList(response.data);\r\n          console.log(\"data injection completed\")\r\n      }).catch(function(error){\r\n          console.log(\"error\")\r\n      })\r\n      }\r\n\r\n\r\n      return (\r\n          <Card  title=\"Please input your personal information to register\">\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name=\"register\"\r\n          onFinish={onFinish}\r\n          initialValues={{\r\n            residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n            prefix: '86',\r\n          }}\r\n          scrollToFirstError\r\n        > {initializeType!==\"staff\"&&(\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n              {\r\n                  validator:checkEmail\r\n              },\r\n              \r\n            ]}\r\n            validateTrigger='onBlur'\r\n            hasFeedback\r\n          >\r\n            <Input style={{width:'80%'}}/>\r\n          </Form.Item>)\r\n        }\r\n\r\n        { initializeType===\"staff\"&&(\r\n          <Form.Item\r\n          name= \"username\"\r\n          label= \"Username\"\r\n          validateTrigger='onBlur'\r\n          hasFeedback\r\n          rules={\r\n              [{\r\n                  required :true,\r\n                  message: 'Please input your username',\r\n              },\r\n              {\r\n                  validator:checkUserName\r\n              }\r\n              ]\r\n          }>\r\n            <Input style={{width:'80%'}}></Input>\r\n          </Form.Item>\r\n         ) }\r\n\r\n         { initializeType===\"customer\"&&(\r\n          <Form.Item\r\n          name= \"name\"\r\n          label= \"Name\"\r\n          rules={\r\n              [{\r\n                  required :true,\r\n                  message: 'Please input your name',\r\n              },\r\n              ]\r\n          }\r\n          hasFeedback>\r\n            <Input style={{width:'80%'}}></Input>\r\n          </Form.Item>\r\n         ) }\r\n    \r\n          <Form.Item\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!'\r\n                },\r\n                {\r\n                  min:6,\r\n                  message: \"The length of the password cannot be less than 6 characters!\"\r\n                },\r\n                {\r\n                max:20,\r\n                message: \"The length of the password cannot be more than 20 characters!\"},\r\n                {\r\n                pattern:/^[a-zA-Z]\\w+/,\r\n                message:'The password must start with alphabat'\r\n                },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('email') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('Email cannot be the same as the password!'));\r\n                },\r\n              }),\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password style={{width:'80%'}}/>\r\n          </Form.Item>\r\n    \r\n          <Form.Item\r\n            name=\"confirm\"\r\n            label=\"Confirm Password\"\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>\r\n    \r\n\r\n          {initializeType===\"staff\"&&(\r\n          <Form.Item\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            tooltip=\"What do you want others to call you?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:\"Please input your last name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input  style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>)\r\n          }\r\n\r\n          {initializeType===\"staff\"&&(\r\n          <Form.Item\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            tooltip=\"What do you want others to call you?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:\"Please input your last name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>)}\r\n  \r\n          {initializeType!==\"agent\"&&(\r\n          <Form.Item\r\n          name=\"birthday\"\r\n          label=\"Birth Day\"\r\n          tooltip=\"Click the calendar button to select a date\"\r\n          rules={[\r\n                {required: true,\r\n                message:\"Please input your birth day!\",\r\n               }\r\n          ]}>  \r\n          <DatePicker format={dateFormat} style={{width:200}} />\r\n            </Form.Item>)}\r\n\r\n            {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"phoneNumber\"\r\n            label=\"Phone Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your phone number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              addonBefore={prefixSelector}\r\n              style={{\r\n                width: '80%',\r\n              }}\r\n            />\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"staff\"&&(\r\n          <Form.Item\r\n            name=\"airlineName\"\r\n            label=\"Airline Name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input donation amount!',\r\n              },\r\n            ]}\r\n          >\r\n          {/* <Select onFocus={getAirlineList} placeholder=\"Please select a country\" style={{width:\"80%\"}}>\r\n            {airlineList.map((item)=>\r\n               (<Option value={item} key={item}>{item}</Option>)\r\n            )}\r\n          </Select> */}\r\n          <Input style={{\r\n                width: '80%',\r\n              }} ></Input>\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"buildingNumber\"\r\n            label=\"Building Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your building number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"street\"\r\n            label=\"Street Info\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your street info!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"city\"\r\n            label=\"City\"\r\n            tooltip=\"Could register with abbreviation\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your city!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"livingState\"\r\n            label=\"State\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your state info!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportNumber\"\r\n            label=\"Passport Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportExpiration\"\r\n            label=\"Passport Expiration Date\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport expiration date!',\r\n              },\r\n            ]}\r\n          >\r\n             <DatePicker format={dateFormat} style={{width:200}} />\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportCountry\"\r\n            label=\"Passport Country\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport country!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"agent\"&&(\r\n          <Form.Item\r\n            name=\"bookingAgentId\"\r\n            label=\"Agent Id\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your agent ID!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n\r\n\r\n          <Form.Item\r\n            name=\"intro\"\r\n            label=\"Intro\"\r\n          >\r\n            <Input.TextArea showCount maxLength={100}  style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>\r\n    \r\n          {/* <Form.Item\r\n            name=\"gender\"\r\n            label=\"Gender\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please select gender!',\r\n              },\r\n            ]}\r\n          >\r\n            <Select placeholder=\"select your gender\">\r\n              <Option value=\"male\">Male</Option>\r\n              <Option value=\"female\">Female</Option>\r\n              <Option value=\"other\">Other</Option>\r\n            </Select>\r\n          </Form.Item> */}\r\n    \r\n          {/* <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n            <Row gutter={8}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"captcha\"\r\n                  noStyle\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input the captcha you got!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Button>Get captcha</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item> */}\r\n    \r\n          {/* <Form.Item\r\n            name=\"agreement\"\r\n            valuePropName=\"checked\"\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n              },\r\n            ]}\r\n            {...tailFormItemLayout}\r\n          >\r\n            <Checkbox>\r\n              I have read the <a href=\"\">agreement</a>\r\n            </Checkbox>\r\n          </Form.Item>*/}\r\n          <Form.Item {...tailFormItemLayout}> \r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register\r\n            </Button>\r\n            <Button type=\"primary\" onClick={()=>{setRegisterModalVisible(false);}}>\r\n              Back\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        </Card>\r\n  );\r\n};\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Menu,Tooltip,Modal} from \"antd\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport cookie from 'react-cookies'\r\n\r\nexport default function countDown(loginInfo) {\r\n    let secondsToGo = 5;\r\n    let name = loginInfo.current.alias;\r\n    const modal = Modal.success({\r\n      title: `See you, ${name}`,\r\n      content: `Close in ${secondsToGo} second.`,\r\n    });\r\n    const timer = setInterval(() => {\r\n      secondsToGo -= 1;\r\n      modal.update({\r\n        content: `Close in ${secondsToGo} second.`,\r\n      });\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      modal.destroy();\r\n    }, secondsToGo * 1000);\r\n  }\r\n\r\n\r\n  export function countDownAnony() {\r\n    let secondsToGo = 5;\r\n    const modal = Modal.success({\r\n      title: `See you next time !`,\r\n      content: `Close in ${secondsToGo} second.`,\r\n    });\r\n    const timer = setInterval(() => {\r\n      secondsToGo -= 1;\r\n      modal.update({\r\n        content: `Close in ${secondsToGo} second.`,\r\n      });\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      modal.destroy();\r\n    }, secondsToGo * 1000);\r\n  }","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport cookie from 'react-cookies'\nimport countDown from \"../login/LoginOut\";\n\n\nconst {SubMenu} = Menu;\n\nexport default function CustomerSidebar({loginInfo,updateSelection,defaultData,setActionType,setFlightResult}) {\n    const tagList = {\n        \"1\": \"Search flights\",\n        \"2\": \"Purchase tickets\",\n        \"3\": \"My flights\",\n        \"4\": \"Track spending\",\n        \"5\": \"Logout\",\n    }\n    const navigate = useNavigate();\n\n    const actionTypeMapping={\n        \"1\":\"search\",\n        \"2\":\"purchase\",\n        \"3\":\"view\"\n    }\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // clear local account information\n            countDown(loginInfo);\n            loginInfo.current = null;\n            cookie.remove(\"JSESSIONID\");\n            navigate(\"/\", {replace: true});\n        }\n        else if(tagList[item.key] == \"Search flights\"){\n            updateSelection(tagList[item.key]);\n\n            setFlightResult(defaultData.current);\n        setActionType(actionTypeMapping[item.key]);}\n        else{\n        updateSelection(tagList[item.key]);\n\n            setFlightResult(null);\n        setActionType(actionTypeMapping[item.key]);}\n    }\n\n    useEffect(() => {\n        updateSelection(\"Search flights\");\n        setActionType(\"search\");\n\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Booking\">\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Mine\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"4\">{tagList['4']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"5\">{tagList['5']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","export const statusColor = {\n    \"upcoming\": \"blue\",\n    \"cancelled\":\"gray\",\n    \"checking in\": \"yellow\",\n    \"delayed\": \"red\",\n    \"on time\":\"green\",\n    \"full\":\"black\"\n}","import {Button, Space, Tag} from \"antd\";\nimport {statusColor} from \"./statusTag\";\nimport React from \"react\";\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport moment from \"moment\";\n\nconst formatterTime = (val) => {\n    return val ? moment(val).format(\"YYYY-MM-DD HH:mm:ss\"): ''\n}\n\n\nexport const ticketColumns = [\n    // title是列的名称\n    // dataIndex:是后续用于指定<Table>组件columns中的对应关系\n    // key就是用于区分所有的列\n    {\n        title: \"Ticket No.\",\n        dataIndex: \"ticket_id\",\n        key: \"ticket\"\n    },\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n];\n\n\nexport const staffViewFLightColumns = [\n    {\n        title: \"Flight Number\",\n        dataIndex:\"flight_id\",\n        key:\"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        hideInSearch:true,\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        hideInSearch:true,\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n    {\n        title: \"Action\",\n        key: 'action',\n        hideInSearch:true,\n        render: (text, record) => (\n            <Space size=\"middle\">\n            <Button>Details</Button>\n            <Button onClick={()=>{console.log(\"haha\");}} type={'primary'} size={'small'} >\n              <EditOutlined style={{fontSize: '15px'}} />\n            </Button>\n            <Button onClick={()=>{console.log(\"xixi\");}} type={'primary'} size={'small'} danger >\n              <DeleteOutlined style={{fontSize: '15px'}} />\n            </Button>\n          </Space>\n    \n        )\n    }\n]\n\nexport const customerInterfaceColumns = [\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n    {\n        title: \"Action\",\n        key: 'action',\n        render: (text, record) => (\n            <Space size={\"middle\"}>\n                <Button disabled={record.status==(\"finished\"||\"onBoarding\")} >Book {record.flight_id}</Button>\n            </Space>\n        )\n    }\n];\n\nexport const agentInterfaceColumns = [\n    {\n        title: \"User ID\",\n        dataIndex: 'uid',\n        key: 'uid',\n    },\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },  {\n        title: \"Action\",\n        key: 'action',\n        render: (text, record) => (\n            <Space size={\"middle\"}>\n                <Button disabled={record.status==(\"finished\"||\"onBoarding\")} >Book {record.flight_id}</Button>\n            </Space>\n        )\n    }\n]\n\nexport const globalInterfaceColumns = [\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\",\n        render: formatterTime\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\",\n        render: formatterTime\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n]\n\n\n","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message,List} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CustomerModal(props){\r\n\r\n    const {loginInfo,customerModalVis,setCustomerModalVis,rowRecord,setRowRecord} = props;\r\n    const [showStatus,setStatus] = useState(\"purchase\"); //用于控制显示购票成功的信息\r\n    // 展示随机生成的TicketId, 航班信息，购买时间\r\n    const [purchaseInfo,setPurchaseInfo] = useState({});\r\n\r\n    const formLayout = {\r\n        labelCol: { span: 7 },\r\n        wrapperCol: { span: 13 },\r\n      };\r\n    \r\n    const FormItem = Form.Item;\r\n    \r\n    const [form] = Form.useForm();\r\n\r\n    const data = [\r\n      {\r\n        title: 'Airline Name',\r\n        description: purchaseInfo[\"airlineName\"]\r\n      },\r\n      {\r\n        title: 'Flight No.',\r\n        description: purchaseInfo[\"flightNum\"]\r\n      },\r\n      {\r\n        title: 'Purchase Date',\r\n        description: purchaseInfo[\"purchaseDate\"]\r\n      },\r\n      {\r\n        title: 'Ticket ID',\r\n        description: purchaseInfo[\"ticketNum\"]\r\n      },\r\n    ];\r\n\r\n\r\n    const purchaseCustomer = ()=>{\r\n        console.log({\r\n            airlineName:form.getFieldValue(\"airlineName\"),\r\n            flightNum:form.getFieldValue('flightNum'),\r\n              email:loginInfo.current?loginInfo.current.email:\"12345@qq.com\",\r\n              bookingAgentId:null\r\n          });\r\n        axios({\r\n            url:\"http://localhost:8080/customer/purchaseTicket\",\r\n            method:\"POST\",\r\n            data:{\r\n              airlineName:form.getFieldValue(\"airlineName\"),\r\n              flightNum:form.getFieldValue('flightNum'),\r\n                email:loginInfo.current?loginInfo.current.email:\"12345@qq.com\",\r\n                bookingAgentId:null\r\n            }\r\n        }).then(function(response){\r\n            //购票成功, 展示数据\r\n            if(response.data){\r\n                setStatus(\"confirm\");\r\n                setPurchaseInfo(response.data);\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    const renderContent = () => {\r\n\r\n        if(showStatus === \"purchase\"){\r\n          return (\r\n            <>\r\n              <FormItem\r\n                name=\"flightNum\"\r\n                label=\"Flight Number\"\r\n                rules={[{ required: true, message: 'Please input flight number!' }]}\r\n              >\r\n                <Input disabled={true}  />\r\n              </FormItem>\r\n              <FormItem\r\n                name=\"airlineName\"\r\n                label=\"Airline Name\"\r\n                rules={[{ required: true, message: 'Please input airline name!' }]}\r\n              >\r\n                <Input disabled={true}  />\r\n              </FormItem>\r\n            </>\r\n          );\r\n\r\n        }else if(showStatus === \"confirm\"){\r\n          return (<>\r\n            <List \r\n              itemtlayout = {\"horizontal\"}\r\n              dataSource={data}\r\n              renderItem={item=>\r\n              (<List.Item\r\n                  >\r\n                  <List.Item.Meta\r\n                  title={item.title}\r\n                  description={item.description}>\r\n\r\n                  </List.Item.Meta>\r\n              </List.Item>)}>\r\n            </List>\r\n          </>)\r\n        }\r\n\r\n        \r\n      };\r\n    \r\n    const renderFooter = () => {\r\n        if(showStatus === \"purchase\"){\r\n        return (\r\n          <>\r\n            <Button onClick={() => setCustomerModalVis(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => purchaseCustomer()}>\r\n              Purchase\r\n            </Button>\r\n          </>\r\n        );}else if(showStatus===\"confirm\"){\r\n          return (<>\r\n            <Button type=\"primary\" onClick={()=>{setCustomerModalVis(false);setStatus(\"purchase\");}}>\r\n              Confirm\r\n            </Button>\r\n          </>)\r\n        }\r\n      };\r\n\r\n\r\n    return (<Modal width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title={showStatus===\"purchase\"?\"Purchase Ticket\":\"Purchasement Info\"}\r\n        visible={customerModalVis}\r\n        footer={renderFooter()}\r\n        onCancel={() => {setCustomerModalVis(false);setRowRecord(false);}}>\r\n         <Form\r\n          {...formLayout}\r\n          form={form}\r\n            initialValues={{\r\n                airlineName:rowRecord.airline,\r\n                flightNum:rowRecord.flight_id\r\n            }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n        \r\n    </Modal>)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n}","import React, { useState,useEffect } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message, List} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function AgentModal(props){\r\n\r\n    const {loginInfo,agentModalVis,setAgentModalVis,rowRecord,setRowRecord} = props;\r\n    const [showStatus,setStatus] = useState(\"purchase\"); //用于控制显示购票成功的信息\r\n    // 展示随机生成的TicketId, 被代理人的Email, 和赚取的Commission Fee.\r\n    const [purchaseInfo,setPurchaseInfo] = useState({});\r\n\r\n    const formLayout = {\r\n        labelCol: { span: 7 },\r\n        wrapperCol: { span: 13 },\r\n      };\r\n    \r\n    const FormItem = Form.Item;\r\n    \r\n    const [form] = Form.useForm();\r\n\r\n    const data = [\r\n      {\r\n        title: 'Airline Name',\r\n        description: purchaseInfo[\"airlineName\"]\r\n      },\r\n      {\r\n        title: 'Flight No.',\r\n        description: purchaseInfo[\"flightNum\"]\r\n      },\r\n      {\r\n        title: 'Customer on behalf',\r\n        description: purchaseInfo[\"email\"]\r\n      },\r\n      {\r\n        title: 'Commission Fee Earned',\r\n        description: purchaseInfo[\"commissionFee\"]\r\n      },\r\n      {\r\n        title: 'Purchase Date',\r\n        description: purchaseInfo[\"purchaseDate\"]\r\n      },\r\n      {\r\n        title: 'Ticket ID',\r\n        description: purchaseInfo[\"ticketNum\"]\r\n      },\r\n    ];\r\n\r\n    const purchaseAgent = ()=>{\r\n        axios({\r\n            url:\"http://localhost:8080/bookingAgent/purchaseTicket\",\r\n            method:\"POST\",\r\n            data:{\r\n              airlineName:form.getFieldValue(\"airlineName\"),\r\n              flightNum:form.getFieldValue('flightNum'),\r\n                email:form.getFieldValue(\"email\"),\r\n                bookingAgentId:loginInfo.current?loginInfo.current.bookingAgentId:13123123,\r\n            }\r\n        }).then(function(response){\r\n            //购票成功, 展示数据\r\n            if(response.data){\r\n                setStatus(\"confirm\");\r\n                setPurchaseInfo(response.data);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const checkEmail = (inititalizeType,value,callback)=>{\r\n      axios({\r\n          method:'GET',\r\n          url:\"http://localhost:8080/bookingAgent/validateCustomer\",\r\n          params:{\"email\":value}\r\n      }).then(function(response){\r\n          if(response.data.valid===false){\r\n            console.log(\"false\");\r\n              callback(\"Customer Email not found!\");\r\n          }else{\r\n              callback();\r\n          }\r\n      })\r\n    }\r\n\r\n    const renderContent = () => {\r\n\r\n        if(showStatus === \"purchase\"){\r\n          return (\r\n            <>\r\n              <FormItem\r\n                name=\"flightNum\"\r\n                label=\"Flight Number\"\r\n                rules={[{ required: true, message: 'Please input flight number!' }]}\r\n              >\r\n                <Input disabled={true} placeholder=\"请输入\" />\r\n              </FormItem>\r\n              <FormItem\r\n                name=\"airlineName\"\r\n                label=\"Airline Name\"\r\n                rules={[{ required: true, message: 'Please input airline name!' }]}\r\n              >\r\n                <Input disabled={true} placeholder=\"请输入\" />\r\n              </FormItem>\r\n              <FormItem\r\n              name=\"email\"\r\n              label=\"Customer Email\"\r\n              rules={[{\r\n                required:true, message:\"Please input the customer email that you want to purchase on behalf of\"\r\n              },{\r\n                    validator:checkEmail\r\n                },]}>\r\n                <Input placeholder=\"Please input customer email\"></Input>\r\n              </FormItem>\r\n            </>\r\n          );\r\n\r\n        }else if(showStatus === \"confirm\"){\r\n          return (<>\r\n            <List \r\n              itemtlayout = {\"horizontal\"}\r\n              dataSource={data}\r\n              renderItem={item=>\r\n              (<List.Item\r\n                  >\r\n                  <List.Item.Meta\r\n                  title={item.title}\r\n                  description={item.description}>\r\n\r\n                  </List.Item.Meta>\r\n              </List.Item>)}>\r\n            </List>\r\n          </>)\r\n        }\r\n\r\n        \r\n      };\r\n    \r\n    const renderFooter = () => {\r\n        if(showStatus === \"purchase\"){\r\n        return (\r\n          <>\r\n            <Button onClick={() => setAgentModalVis(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => purchaseAgent()}>\r\n              Purchase\r\n            </Button>\r\n          </>\r\n        );}else if(showStatus===\"confirm\"){\r\n          return (<>\r\n            <Button type=\"primary\" onClick={()=>{setAgentModalVis(false);setStatus(\"purchase\");}}>\r\n              Confirm\r\n            </Button>\r\n          </>)\r\n        }\r\n      };\r\n\r\n      console.log(rowRecord.airline);\r\n    return (<Modal width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title={showStatus===\"purchase\"?\"Purchase Ticket\":\"Purchasement Info\"}\r\n        visible={agentModalVis}\r\n        footer={renderFooter()}\r\n        onCancel={() => {setAgentModalVis(false);setRowRecord(false)}}>\r\n         <Form\r\n          {...formLayout}\r\n          form={form}\r\n            initialValues={{\r\n                airlineName:rowRecord.airline,\r\n                flightNum:rowRecord.flight_id\r\n            }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n        \r\n    </Modal>)\r\n\r\n\r\n\r\n\r\n}","import {Input, Space, DatePicker, Select, Card, Button, Divider, Tag, Table,Modal} from 'antd';\nimport React, {useState,useEffect} from \"react\";\nimport {SwapOutlined} from \"@ant-design/icons\";\nimport {statusColor} from \"../../lib/statusTag\";\nimport {dateFormat} from \"../../lib/dateFormat\";\nimport {globalInterfaceColumns, ticketColumns} from \"../../lib/flightData\";\nimport CustomerModal from \"./PurchaseModals/CustomerModal\";\nimport AgentModal from \"./PurchaseModals/AgentModal\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport qs from \"qs\";\nimport {v4 as uuidv4} from \"uuid\";\nimport cookie from 'react-cookies';\nimport {useNavigate} from \"react-router-dom\";\n\nconst {Search} = Input;\nconst {Option} = Select;\n\naxios.defaults.timeout = 2000;\n\n\nconst formatterTime = (val) => {\n    return val ? moment(val).format(\"YYYY-MM-DD HH:mm:ss\"): ''\n}\n\nexport function FlightsResultTable(props) \n{\n    const {data,userType,loginInfo,actionType,setRowRecord,setCustomerModalVis,setAgentModalVis} = props;\n    const {RangePicker} = DatePicker;\n\n\n    const agentInterfaceColumns = [\n        {\n            title:\"Ticket Id\",\n            dataIndex:\"ticket_id\",\n            key:\"ticket\"\n        },\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {   \n            title:\"Airline Name\",\n            dataIndex:\"airline\",\n            key:\"airline\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\",\n            render: formatterTime\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\",\n            render: formatterTime\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Customer Email\",\n            dataIndex: \"customerEmail\",\n            key: \"customerEmail\"\n        },\n        {\n            title: \"Remaining Seats\",\n            dataIndex: \"remainingSeats\",\n            key: \"seats\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        },  {\n            title: \"Action\",\n            key: 'action',\n            render: (text, record) => (\n                <Space size={\"middle\"}>\n                    <Button disabled={(record.status==(\"cancelled\"||\"checking in\"))||record.full===true} onClick={()=>{\n                        \n                        setAgentModalVis(true);\n                        setRowRecord(record);\n                        \n                        }} >Book {record.flight_id}</Button>\n                </Space>\n            )\n        }\n    ]\n\n    const customerInterfaceColumns = [\n        {\n            title:\"Ticket Id\",\n            dataIndex:\"ticket_id\",\n            key:\"ticket\"\n        },\n\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\",\n            render: formatterTime\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\",\n            render: formatterTime\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        },\n        {\n            title: \"Action\",\n            key: 'action',\n            render: (text, record) => (\n                <Space size={\"middle\"}>\n                    <Button disabled={record.status==(\"cancelled\"||\"checking in\")} \n                    onClick={()=>{\n                        \n                        setCustomerModalVis(true);\n                        setRowRecord(record);\n                        \n                        }}>Book {record.flight_id}</Button>\n                </Space>\n            )\n        }\n    ];\n\n    const defaultColumns = [\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {   \n            title:\"Airline Name\",\n            dataIndex:\"airline\",\n            key:\"airline\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\"\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\"\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        }\n    ]\n    \n\n    let columns = userType===\"customer\"? customerInterfaceColumns:userType===\"agent\"?agentInterfaceColumns:globalInterfaceColumns;\n    let dataMap = data;\n    if(actionType!==\"view\"){\n     dataMap = data.map(item=>{\n        return({key:[item.airlineName,item.flightNum],\n        flight_id:item.flightNum,\n        airline:item.airlineName,\n        dept:item.sourceAirportName,\n        arri:item.destAirportName,\n        dept_time:item.departureTime,\n        arri_time:item.arrivalTime,\n        price:item.price,\n        remainingSeats:item.remainingSeats,\n        status:[item.status]\n        })\n    })}else if(actionType===\"view\"){\n        console.log(data);\n         dataMap = data.map(item=>{\n            return({\n                key:item.ticketId,\n                ticket_id:item.ticketId,\n                flight_id:item.flightNum,\n                airline:item.airlineName,\n                dept:item.sourceAirportName,\n                arri:item.destAirportName,\n                dept_time:item.departureTime,\n                arri_time:item.arrivalTime,\n                price:item.price,\n                customerEmail:item.customerEmail,\n                status:[item.status]\n            })\n        })\n    }\n\n    if(actionType!==\"view\"){\n        columns = columns.filter((item)=>(item.title!=\"Ticket Id\")&&(item.title!==\"Customer Email\"));\n    }\n    //根据actionTab 过滤展示的列\n    if(actionType!==\"purchase\"){\n        columns = columns.filter((item)=>item.title!=\"Action\"&&(item.title!==\"Remaining Seats\"))\n    }\n\n    if(actionType===\"search\"){\n        columns = columns.filter((item)=>item.title!=\"User ID\");\n    }\n\n    return (\n        <Table columns={columns} dataSource={dataMap} size=\"middle\"/>\n    )\n}\n\nexport default function SearchFlights({loginInfo,userType,actionTab,setNavigateBar,flightsResult,setFlightResult,actionType}) {\n\n    const {RangePicker} = DatePicker;\n\n    const [deptAirport, setDeptAirport] = useState(undefined);\n    const [arriAirport, setArriAirport] = useState(undefined);\n    const [deptDate, setDeptDate] = useState(\"\"); //today\n    const [deptDate2,setDeptDate2] = useState(\"\");\n    const [searchResult, setSearchResult] = useState([]);\n    // const [flightsResult, setFlightResult] = useState(null);\n    const [flightID, setFlightID] = useState(undefined);\n    // 设置点击购买按钮后的数据\n    const [rowRecord,setRowRecord] = useState(undefined);\n\n    // 设置模态对话框用于提交购买信息\n    const [agentModalVis,setAgentModalVis] = useState(false);\n    const [customerModalVis,setCustomerModalVis] = useState(false);\n\n    const navigate = useNavigate();\n\n    const searchAirport=()=>{\n        axios({\n            url:\"http://localhost:8080/index/searchAirports\",\n            type:\"GET\",\n        }).then(function(response){\n            if(response.data){\n                setSearchResult(response.data);\n            }else{\n                console.log(\"No Results\");\n            }\n        })\n    };\n\n    const options = searchResult.map(item => <Option key={item}>{item}</Option>);\n\n    const handleSearch = (value) => {\n        if (value) {\n            setTimeout(searchAirport, 500);\n        } else {\n            setSearchResult([]);\n        }\n    }\n\n    //callback就是传入的回调函数，value就是一个参数为value的，调用了callback的函数\n    const handleChange = (callBack) => (value) => {\n        callBack(value);\n    }\n\n    const swapDeptArri = () => {\n        let tmp = deptAirport;\n        setDeptAirport(arriAirport);\n        setArriAirport(tmp);\n    }\n\n    const handleSearchFlights = () => {\n        // search flights\n        axios({\n            url:\"http://localhost:8080/index/searchFlights\",\n            method:\"POST\",\n            data: {sourceAirportName:deptAirport,\n                destAirportName:arriAirport,\n                departureTime:deptDate}\n        }).then(function(response){\n            // if(response.data[\"statusCode\"]==503){\n            //     loginInfo.current = null;\n            //     cookie.remove(\"JSESSIONID\");\n            //     setNavigateBar(\"global\");\n            //     navigate(\"/global\", {replace: true})\n            // }\n\n            if(response.data){\n                setFlightResult(response.data);\n            }else{\n                console.log(\"No Results\");\n            }\n        }).catch(function(response){\n            setFlightResult(null);\n            console.log(\"No Results!\");\n        })\n\n    }\n\n    const handleSearchPurchase = () => {\n        console.log(\"xixi\");\n        axios({\n            url:userType===\"customer\"?\"http://localhost:8080/customer/getAllAvailableFlights\":\"http://localhost:8080/bookingAgent/getAllAvailableFlights\",\n            method:\"POST\",\n            data: {\n                sourceAirportName:deptAirport,\n                destAirportName:arriAirport\n            }\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                setFlightResult(response.data);\n            }else{\n                console.log(\"No Results\");\n            }\n        })\n\n    }\n\n    // const handleExactSearch = () => {\n    //     setFlightResult(\"testing\");\n    // }\n\n\n    // 处理和ViewFlights相关的请求\n    const handleViewFlights = ()=>{\n        let sendObject = null;\n        console.log(\"xixi\");\n        if(deptDate===\"\"&&deptDate2===\"\"){\n            sendObject = qs.stringify({\n                sourceAirport:deptAirport,\n                destAirport:arriAirport,\n                email:loginInfo.current?loginInfo.current.email:\"abababababa@gmail.com\",\n            })\n        }else{\n            sendObject= qs.stringify({\n                sourceAirport:deptAirport,\n                destAirport:arriAirport,\n                email:loginInfo.current?loginInfo.current.email:\"abababababa@gmail.com\",\n                startDate:new Date(deptDate),\n                endDate:new Date(deptDate2)\n            })\n        }\n        axios({\n            url:userType===\"customer\"?\"http://localhost:8080/customer/getMyFlights\":\"http://localhost:8080/bookingAgent/getMyFlights\",\n            method:\"POST\",\n            header:{\n                \"Content-Type\":\"application/x-www-form-urlencoded;charset=UTF-8\"\n            },\n            data:sendObject\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                setFlightResult(response.data);\n            }else{\n            }\n        }).catch(function(response){\n            console.log(\"出错了\");\n        })\n    }\n\n    const defineCardTitle = ()=>{\n        if(actionType===\"view\"){\n\n            if(userType===\"customer\"){\n                return `Click Search for your fligh information, ${loginInfo.current?loginInfo.current.alias:\"username\"}!`\n            }else{\n                return `Click Search for the orders you created for customers!`\n            }\n        }else if(actionType===\"purchase\"){\n            \n            if(userType===\"customer\"){\n                return `Start planning your journey, ${loginInfo.current?loginInfo.current.alias:\"username\"}!`\n            }else{\n                return `Click Search for the avaliable flights!`\n            }\n        }else{\n            if(userType===\"customer\"){\n                return `Click Search to see upcoming flights, ${loginInfo.current?loginInfo.current.alias:\"username\"}!`\n            }else{\n                return 'Click Search to See upcoming flights!'\n            }\n        }\n    }\n\n    return (\n        <Card title={defineCardTitle()}>\n            <Input.Group>\n                <b>From:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"From\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Departure Airport\"}\n                    value={deptAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setDeptAirport)}\n                    notFoundContent={null}\n                    allowClear\n                >\n                    {options}\n                </Select>\n                <Button shape=\"circle\" icon={<SwapOutlined />} onClick={swapDeptArri} />\n                <b style={{paddingLeft: 10}}>To:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"To\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Arrival Airport\"}\n                    value={arriAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setArriAirport)}\n                    notFoundContent={null}\n                    allowClear\n                >\n                    {options}\n                </Select>\n                {actionType===\"view\"?<RangePicker onChange={()=>{handleChange(setDeptDate);handleChange(setDeptDate2)}} picker=\"day\" style={{width:200}} placeholder={[\"Begin With\",\"End With\"]}></RangePicker>:\n                <DatePicker format={dateFormat} onChange={handleChange(setDeptDate)} style={{width:200}} placeholder={\"Depate After\"} />}\n                \n                <span style={{padding: 10}}> </span>\n                <Button type=\"primary\" onClick={actionType===\"view\"?handleViewFlights:actionType===\"purchase\"?handleSearchPurchase:handleSearchFlights}>Search</Button>\n            </Input.Group>\n            \n        \n            <Divider />\n            {flightsResult ? <FlightsResultTable data={flightsResult} loginInfo={loginInfo} userType={userType} actionType={actionType} setRowRecord={setRowRecord} setAgentModalVis={setAgentModalVis} setCustomerModalVis={setCustomerModalVis}/> : null}\n            \n            {rowRecord? <AgentModal loginInfo={loginInfo} agentModalVis={agentModalVis} setAgentModalVis={setAgentModalVis} rowRecord={rowRecord} setRowRecord={setRowRecord}></AgentModal>:null}\n\n            {rowRecord? <CustomerModal loginInfo={loginInfo} customerModalVis={customerModalVis} setCustomerModalVis={setCustomerModalVis} rowRecord={rowRecord} setRowRecord={setRowRecord}></CustomerModal>:null}\n                \n            \n            {/* {flightResult&&defaultData?} */}\n\n        </Card>\n    )\n}","import {FlightsResultTable} from \"../flight/SearchFlights\";\nimport React, {useState} from \"react\";\nimport {Button, Card, DatePicker, Divider, Input, Select} from \"antd\";\nimport {SwapOutlined} from \"@ant-design/icons\";\nimport {dateFormat} from \"../../lib/dateFormat\";\n\nconst {Option} = Select;\n\nexport default function PurchaseTicket() {\n    // result body:\n    // [{most match: city if city, airport if airport},\n    // {cities if city, airports if airport}, ...,\n    // {airports if city, cities if airport}, {}]\n\n    const [deptAirport, setDeptAirport] = useState(undefined);\n    const [arriAirport, setArriAirport] = useState(undefined);\n    const [deptDate, setDeptDate] = useState(\"\"); //today\n    const [searchResult, setSearchResult] = useState([]);\n    const [flightsResult, setFlightResult] = useState(null);\n    const [flightID, setFlightID] = useState(undefined);\n\n    //for testing ONLY\n    const test = () => {setSearchResult([\"Shanghai\", \"Shangrao\", \"Bashang\", \"SHA\", \"PVG\", \"SQD\", \"ZQZ\"])};\n\n    const options = searchResult.map(item => <Option key={item}>{item}</Option>);\n\n    const handleSearch = (value) => {\n        if (value) {\n            setTimeout(test, 500);\n        } else {\n            setSearchResult([]);\n        }\n    }\n    const handleChange = (callBack) => (value) => {\n        callBack(value);\n    }\n\n    const swapDeptArri = () => {\n        let tmp = deptAirport;\n        setDeptAirport(arriAirport);\n        setArriAirport(tmp);\n    }\n\n    const handleSearchFlights = () => {\n        // search flights\n        setFlightResult(\"testing\");\n    }\n\n\n    return (\n        <Card title=\"Start planning your journey, Username!\">\n            <Input.Group>\n                <b>From:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"From\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Departure Airport\"}\n                    value={deptAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setDeptAirport)}\n                    notFoundContent={null}\n                >\n                    {options}\n                </Select>\n                <Button shape=\"circle\" icon={<SwapOutlined />} onClick={swapDeptArri} />\n                <b style={{paddingLeft: 10}}>To:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"To\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Arrival Airport\"}\n                    value={arriAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setArriAirport)}\n                    notFoundContent={null}\n                >\n                    {options}\n                </Select>\n                <DatePicker format={dateFormat} onChange={handleChange(setDeptDate)} style={{width:200}} />\n                <span style={{padding: 10}}> </span>\n                <Button type=\"primary\" onClick={handleSearchFlights}>Search</Button>\n            </Input.Group>\n        \n\n            <Divider />\n            {flightsResult ? <FlightsResultTable data={flightsResult} /> : null}\n        </Card>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Pie} from \"@ant-design/charts\";\nimport {Input, Space, DatePicker, Select, Card, Button, Divider, Tag, Table} from 'antd';\nimport {dateFormat} from \"../../lib/dateFormat\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nexport default function SpendingChart({loginInfo}) {\n\n    const [spendingData, setSpendingData] = useState([]);\n    const [startDate,setStart] = useState(moment().subtract(30, 'days'));\n    const [endDate,setEnd] = useState(moment());\n\n    useEffect(()=>{\n        axios({\n            url:\"http://localhost:8080/customer/trackSpending\",\n            method:\"POST\",\n            data:{startDate:startDate,\n                endDate:endDate,\n                email:loginInfo.current?loginInfo.current.email:\"User\"},\n        }).then(function(response){\n            if(response.data){\n            //  const parsedData = JSON.parse(response.data);\n            const dataMap = response.data.map((item)=>({type:item.interval,value:item.value}))\n            setSpendingData(dataMap);}\n        })\n    },[])\n\n    const setStartDate = (value)=>{\n        setStart(value);\n    }\n\n    const setEndDate = (value)=>{\n        setEnd(value);\n    }\n\n    const handleSubmit=()=>{\n        console.log(startDate);\n        console.log(endDate);\n\n        \n    }\n\n    const handleChange = (value,type)=>{\n        let start = 0;\n        let end = 0;\n        if(type==\"start\"){\n            start = value\n            end = endDate;}\n            else{\n                start = startDate;\n                end = value;}\n        axios({\n            url:\"http://localhost:8080/customer/trackSpending\",\n            method:\"POST\",\n            data:{startDate:start,\n                endDate:end,\n                email:\"12345@qq.com\"},\n        }).then(function(response){\n            if(response.data.length>0){\n                console.log(response.data);\n            const dataMap = response.data.map((item)=>({type:item.interval,value:item.value}))\n            setSpendingData(dataMap);\n            if(type==\"start\"){\n            setStartDate(start);}\n            else{\n            setEndDate(end);}}else{\n                setSpendingData([{item:\"9\",value:9999}])\n            }\n        })\n    }\n\n    const chartConfig = {\n        appendPadding: 10,\n        data: spendingData, // TODO: use props or ask for the server\n        angleField: 'value',\n        colorField: 'type',\n        radius: 0.9,\n        meta: {\n            type: {\n                alias: 'Month',\n            },\n            value: {\n                alias: 'Total Spending',\n                formatter: (v) => (\"$\" + v.toString()),\n            },\n        },\n        label: {\n            type: 'inner',\n            offset: '-30%',\n        },\n        interactions: [{ type: 'element-selected' }, { type: 'element-active' }]\n    }\n\n    return (\n        <Card title=\"See your amazing trips, Username!\">\n            <Input.Group>\n\n            <DatePicker format={dateFormat} placeholder={\"startDate\"} defaultValue={startDate} onChange={(value)=>{handleChange(value,\"start\");}} style={{width:200}} />\n            <b style={{padding: 190}}> </b>\n            <DatePicker format={dateFormat} placeholder={\"endDate\"} defaultValue={endDate} onChange={(value)=>{handleChange(value,\"end\")}} style={{width:200}} />\n            <b style={{padding: 160}}> </b>\n            </Input.Group>\n            <Pie {...chartConfig} />\n        </Card>\n    )\n}","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport cookie from 'react-cookies';\nimport countDown from \"../login/LoginOut\";\n\nconst {SubMenu} = Menu;\n\nexport default function AgentSidebar({loginInfo,updateSelection,defaultData,setActionType,setFlightResult}) {\n    const tagList = {\n        \"1\": \"Search flights\",\n        \"2\": \"Create order\",\n        \"3\": \"My customer orders\",\n        \"4\": \"Commission statistics\",\n        \"5\": \"Top customers\",\n        \"6\": \"Logout\"\n    }\n    const navigate = useNavigate();\n\n    const actionTypeMapping={\n        \"1\":\"search\",\n        \"2\":\"purchase\",\n        \"3\":\"view\"\n    }\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // clear local account information\n            countDown(loginInfo);\n            loginInfo.current = null;\n            cookie.remove(\"JSESSIONID\");\n            navigate(\"/\", {replace: true})\n        }\n        updateSelection(tagList[item.key]);\n            setFlightResult(null);\n        setActionType(actionTypeMapping[item.key]);\n\n    }\n\n    useEffect(() => {\n        updateSelection(\"Commission statistics\")\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['4']}\n            defaultOpenKeys={['sub2']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Booking\">\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Mine\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"4\">{tagList['4']}</Menu.Item>\n                <Menu.Item key=\"5\">{tagList['5']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"6\">{tagList['6']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","import React, {useState} from \"react\";\nimport {Column} from \"@ant-design/charts\";\nimport {Card, Divider, Typography,InputNumber} from \"antd\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport axios from \"axios\";\n\nconst {Title} = Typography;\n\nexport default function TopCustomerChart() {\n    const [customerTicketCount, setCustomerTicketCount] = useState(null);\n    const [customerCommission, setCustomerCommission] = useState(null);\n    const [activeTab,setActiveTab] = useState(\"tickets\");\n    const [data,setData]=useState([]);\n    const [topK,setTopK] = useState(5);\n\n    const tabList = [\n        {key: 'tickets', tab: 'Tickets Ranking'},\n        {key: 'commission', tab: 'Commission Ranking'},\n    ]\n\n    useEffect((()=>{\n        searchTickets();\n        // setData(testTicket);\n    }),[])\n\n\n    // for testing ONLY\n    const testTicket = [\n        {\n            uid: \"123\",\n            sum: 15,\n        },\n        {\n            uid: \"234\",\n            sum: 11,\n        },\n        {\n            uid: \"471\",\n            sum: 9,\n        },\n        {\n            uid: \"602\",\n            sum: 7,\n        },\n        {\n            uid: \"866\",\n            sum: 5,\n        },\n    ];\n    const testCommission = [\n        {\n            uid: \"123\",\n            sum: 9806.3,\n        },\n        {\n            uid: \"234\",\n            sum: 7503.5,\n        },\n        {\n            uid: \"471\",\n            sum: 6602.6,\n        },\n        {\n            uid: \"602\",\n            sum: 1025.2,\n        },\n        {\n            uid: \"866\",\n            sum: 897.8,\n        },\n    ]\n\n    const columnConfig = {\n        xField: 'email',\n        yField: \"sum\",\n        seriesField: '',\n        columnWidthRatio: 0.5,\n        label: {\n            position: 'middle',\n            style: {\n                fill: '#FFFFFF',\n                opacity: 0.8\n            }\n        },\n        xAxis: {\n            label: {\n                autoHide: true,\n                autoRotate: false,\n            }\n        },\n    }\n\n\n    const searchCommission = ()=>{\n        axios({\n            method:'GET',\n            url:\"http://localhost:8080/bookingAgent/getTopKCommission\",\n            params:{\"K\":topK}\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                const formattedData = response.data.map((item)=>({\"email\":item.email,\"sum\":item.totalCommission}))\n                setData(formattedData);\n            }\n        })\n    }\n\n    const searchTickets = ()=>{\n        axios({\n            method:'GET',\n            url:\"http://localhost:8080/bookingAgent/getTopKTickets\",\n            params:{\"K\":topK}\n        }).then(function(response){\n            if(response.data){\n                const formattedData = response.data.map((item)=>({\"email\":item.email,\"sum\":item.ticketsFromAgent}))\n                setData(formattedData);\n            }\n        })\n    }\n\n    const onTabChange = (key)=>{\n        setActiveTab(key);\n        if(key===\"tickets\"){\n            searchTickets();\n            // setData(testTicket)\n        }else{\n            searchCommission();\n            // setData(testCommission);\n        }\n    }\n\n    const onNumberChange=(value)=>{\n        //更新图标\n        setTopK(value);\n    }\n    \n\n    return (\n        <Card title=\"Customer Statistics\"\n              tabList={tabList}\n              activeTab={activeTab}\n        onTabChange={onTabChange}\n        tabBarExtraContent={<><span style={{marginRight:5}}>Top</span><InputNumber min={1} onChange={onNumberChange} defaultValue={5}></InputNumber><span style={{marginLeft:5}}>Agents</span></>}\n        >\n            <Column {...columnConfig}\n                    data={data.slice(0,topK)}\n                    meta={{uid: {alias: 'User ID'}, sum: {alias:activeTab===\"tickets\"?'Ticket Number':'Total Commission'}}} />\n        </Card>\n    )\n}","import {DatePicker, Statistic, Card, Space} from \"antd\";\nimport React, {useEffect, useState} from \"react\";\n//后续可通过moment()获取当前的时间\nimport moment from \"moment\";\nimport axios from \"axios\";\n\naxios.defaults.timeout = 1000;\nconst {RangePicker} = DatePicker;\n\nexport default function CommissionStatistics() {\n    const [commissionData, setCommissionData] = useState(null);\n    const [avgcommissionData,setAvgCommissionData] = useState(null);\n    const [totalTickets,setTotalTickets] = useState(null);\n\n    const handleDateRangeChange = (value,dateString) => {\n        console.log(value);\n        // console.log(dateString);\n        axios({\n            url:\"http://localhost:8080/bookingAgent/getCommissionInfo\",\n            method:\"GET\",\n            params:{\n                email:\"cathayEmp01@csair.com\",\n                startDate:new Date(value[0]),\n                endDate:new Date(value[1])\n            }\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                 setCommissionData(response.data.commissionFees);\n                 setAvgCommissionData(response.data.averageCommissionFees);\n                 setTotalTickets(response.data.ticketBooked);\n            }\n        }).catch(function(){\n            setCommissionData(99999);\n            setAvgCommissionData(90909);\n            setTotalTickets(12313213);\n        })\n     \n\n       \n    }\n\n    const loadingHolder = Boolean(commissionData);\n    const loadingHolderForAvg = Boolean(avgcommissionData);\n    const loadingHolderForTickets = Boolean(totalTickets);\n\n    useEffect(() => {\n        axios({\n            url:\"http://localhost:8080/bookingAgent/getCommissionInfo\",\n            method:\"GET\",\n            params:{\n                email:\"cathayEmp01@csair.com\",\n                startDate:new Date(moment().subtract(30, 'days')),\n                endDate:new Date(moment())\n            }\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                 setCommissionData(response.data.commissionFees);\n                 setAvgCommissionData(response.data.averageCommissionFees);\n                 setTotalTickets(response.data.ticketBooked);\n            }\n        })\n    }, []);\n\n    return (\n        <Card title=\"Checking Total Commission for Username\">\n            <Space direction=\"vertical\" size='large' style={{width: '100%'}}>\n                <RangePicker\n                    onChange={handleDateRangeChange}\n                    defaultValue={[moment().subtract(30, 'days'), moment()]}\n                />\n                <div style={{textAlign: 'center', width: '100%'}}>\n                    <Statistic\n                        title=\"Total Commission in (USD)\"\n                        value={commissionData}\n                        loading={!loadingHolder}\n                        precision={2}\n                        style={{width: '100%'}}\n                    />\n                    <Statistic\n                        title=\"Average Commission in (USD)\"\n                        value={avgcommissionData}\n                        loading={!loadingHolderForAvg}\n                        precision={2}\n                        style={{width: '100%'}}\n                    />\n                    <Statistic\n                        title=\"Total Tickets Booked On Behalf of the customer\"\n                        value={totalTickets}\n                        loading={!loadingHolderForTickets}\n                        style={{width: '100%'}}\n                    />\n                </div>\n            </Space>\n        </Card>\n    )\n\n}","import {CarryOutOutlined, FundViewOutlined, SendOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu,Tooltip,Modal} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport cookie from 'react-cookies'\nimport countDown from \"../login/LoginOut\";\n\nconst {SubMenu} = Menu;\n\nexport default function StaffSidebar({ loginInfo,updateSelection}) {\n    const tagList = {\n        // Flight Management\n        \"2\": \"Flight CRUD\",\n        \"4\": \"Add airplane\",\n        \"5\": \"Add airport\",\n        // Statistics\n        \"3\": \"View Agents\",\n        \"6\": \"Frequent customers\",\n        \"7\": \"Revenue Comparison\",\n        \"8\": \"Top destinations\",\n        \"9\": \"View Reports\",\n        // Operation\n        \"10\": \"Add booking agent\",\n        \"11\": \"Grant permission\",\n        \"12\": \"Logout\",\n\n    }\n    const navigate = useNavigate();\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // GoodBye Information to User\n            countDown(loginInfo);\n            \n            loginInfo.current = null;\n            cookie.remove(\"JSESSIONID\");\n            \n            navigate(\"/\", {replace: true})\n        }\n        updateSelection(tagList[item.key])\n    }\n\n    useEffect(() => {\n        updateSelection(\"View Reports\");\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['9']}\n            defaultOpenKeys={['sub2']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<SendOutlined />} title=\"Flight Management\">\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n                \n                <Menu.Item key=\"4\" >\n                {tagList['4']}\n                </Menu.Item>\n                <Menu.Item key=\"5\" disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?false:true:false}>\n                <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>{tagList['5']}\n                </Tooltip></Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<FundViewOutlined />} title=\"Statistics\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"6\">{tagList['6']}</Menu.Item>\n                <Menu.Item key=\"7\">{tagList['7']}</Menu.Item>\n                <Menu.Item key=\"8\">{tagList['8']}</Menu.Item>\n                <Menu.Item key=\"9\">{tagList['9']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"10\" disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?false:true:false}>\n                <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>{tagList['10']}\n                </Tooltip></Menu.Item>\n                <Menu.Item key=\"11\" disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?false:true:false}>\n                <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>{tagList['11']}\n                </Tooltip></Menu.Item>\n                <Menu.Item key=\"12\">{tagList['12']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","import React, {useState} from \"react\";\nimport {Input, Card, Button,Form,message} from \"antd\";\nimport qs from \"qs\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nexport default function EditAirport({loginInfo}) {\n\n    const onFinish =(values)=>{\n      console.log(values);\n      axios({\n        url:\"http://localhost:8080/airlineStaff/addNewAirport\",\n        method:\"post\",\n        data:values\n      }).then(function(response){\n        if(response.data===\"success\"){\n          message.success({\n            content: 'Insertion Completed',\n            className: 'custom-class',\n            style: {\n              marginTop: '40vh',\n            },\n          });\n        }else{\n          message.error({\n            content: 'You have already inserted this airport!',\n            className: 'custom-class',\n            style: {\n              marginTop: '40vh',\n            },\n          });\n        }\n      })\n    }\n\n    const onFinishFailed = ()=>{\n      console.log(\"xixi\");\n    }\n\n    const onReset = ()=>{\n      form.resetFields();\n    }\n\n    const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n\n    const [form] = Form.useForm();\n    return (\n        <Card title=\"Airport Information Management\">\n           <Form\n           form={form}\n            name=\"airport form\"\n            className=\"airport_form\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            scrollToFirstError>\n           \n            <Form.Item\n            name=\"airportName\"\n            label=\"Airport Name\"\n            rules={[\n                {\n                  required:true,\n                message:\"Airport Name should not be empty!\"\n                }\n            ]}\n            validateTrigger='onBlur'\n            hasFeedback>\n\n                <Input ></Input>\n            </Form.Item>\n\n            <Form.Item\n            name=\"airportCity\"\n            label=\"Airport City\"\n            validateTrigger='onBlur'\n            rules={\n              [\n                {\n                  required:true,\n                message:\"Airport City should not be empty!\"}\n            ]}\n            hasFeedback>\n\n                <Input></Input>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}> \n            <Button type=\"primary\" htmlType=\"submit\">\n              Add\n            </Button>\n            <Button type=\"primary\" onClick={onReset}>\n              Reset\n            </Button>\n          </Form.Item>\n          </Form>\n\n\n        </Card>\n    )\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,InputNumber,message,Space,Table} from \"antd\";\r\nimport qs from \"qs\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\n\r\nexport default function EditAirport({loginInfo}) {\r\n\r\n    const [tableData,setTableData] = useState([]);\r\n\r\n    const tableColumns=[\r\n      {\r\n        title:\"Airplane Id\",\r\n        dataIndex:\"id\",\r\n        key:\"airplane_id\",\r\n        width:200\r\n      },\r\n      {\r\n        title:\"Airline Name\",\r\n        dataIndex:\"airline\",\r\n        key:\"airline_name\",\r\n        width:200\r\n      },\r\n      {\r\n        title:\"Seat Number\",\r\n        dataIndex:\"seats\",\r\n        key:\"seats\",\r\n        width:200\r\n      },\r\n    ]\r\n\r\n    const getAirplanes = ()=>{\r\n      axios({\r\n        url:\"http://localhost:8080/airlineStaff/getAllAirplanes\",\r\n        method:\"GET\",\r\n        params:{\r\n          airlineName:loginInfo.current?loginInfo.current.airlineName:\"\"\r\n        }\r\n      }).then(function(response){\r\n        if(response.data){\r\n          console.log(response.data);\r\n          // console.log(JSON.parse(response.data));\r\n          setTableData(response.data);\r\n        }\r\n      })\r\n    }\r\n\r\n    useEffect(()=>{\r\n      getAirplanes();\r\n    },[\"airport\"])\r\n\r\n    const onFinish =(values)=>{\r\n      console.log(values);\r\n      axios({\r\n        url:\"http://localhost:8080/airlineStaff/addNewAirplane\",\r\n        method:\"post\",\r\n        data:{airline:loginInfo.current?loginInfo.current.airlineName:undefined,\r\n              id:values.airplaneId,\r\n              seats:values.seats\r\n              }\r\n      }).then(function(response){\r\n        if(response.data===\"success\"){\r\n          message.success({\r\n            content: 'Insertion Completed',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '40vh',\r\n            },\r\n          });\r\n          getAirplanes();\r\n        }else{\r\n          message.error({\r\n            content: 'You have already inserted this airplane information!',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '40vh',\r\n            },\r\n          });\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n    const onFinishFailed = ()=>{\r\n        console.log(\"验证失败\");\r\n    }\r\n\r\n    const onReset = ()=>{\r\n      form.resetFields();\r\n    }\r\n\r\n    const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 0,\r\n          },\r\n        },\r\n      };\r\n\r\n\r\n      const initialvalue = {\r\n        airlineName:loginInfo.current?loginInfo.current.airlineName:undefined,\r\n        airplaneId:undefined,\r\n        seats:200\r\n      }\r\n\r\n    const [form] = Form.useForm();\r\n    return (\r\n      <Space align=\"center\" size={100}>\r\n      {loginInfo.current?loginInfo.current.permissionDescription?loginInfo.current.permissionDescription.includes(\"Admin\")?\r\n        <Card style={{marginLeft:50}} title=\"Add airplane\">\r\n           <Form\r\n           form={form}\r\n            name=\"airplane\"\r\n            className=\"airplane-form\"\r\n            onFinish={onFinish}\r\n            onFinishedFailed={onFinishFailed}\r\n            initialValues={initialvalue}>\r\n           \r\n            <Form.Item\r\n            name=\"airlineName\"\r\n            label=\"Airline Name\"\r\n            rules={[\r\n                {required:true,\r\n                message:\"Aiport Name should not be empty!\"}\r\n            ]}>\r\n\r\n                <Input disabled={true} ></Input>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n            name=\"airplaneId\"\r\n            label=\"Airplane Id\"\r\n            rules={[\r\n                {required:true,\r\n                message:\"Aiport Id should not be empty!\"}\r\n            ]}>\r\n\r\n                <Input></Input>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n            name=\"seats\"\r\n            label=\"Seat Number\"\r\n            >\r\n\r\n                <InputNumber  ></InputNumber>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}> \r\n\r\n              <Button type=\"primary\" htmlType=\"submit\" >\r\n                Add\r\n              </Button>\r\n\r\n              <Button type=\"primary\" onClick={onReset} style={{marginLeft:50}}>\r\n                Reset\r\n              </Button>\r\n          </Form.Item>\r\n          </Form>\r\n\r\n        </Card>: \r\n        \r\n        \r\n        <Card style={{marginLeft:50}} title=\"Add airplane\">\r\n            You don't have permission to add airplanes.\r\n        </Card>:null:null}\r\n        <Card title=\"All the airplane for your airline company\"><Table width={300} columns={tableColumns} dataSource={tableData} size=\"middle\"/></Card>\r\n        </Space>\r\n    )\r\n}","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {Menu,Avatar} from \"antd\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport cookie from 'react-cookies'\r\nimport { countDownAnony } from \"../login/LoginOut\";\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nexport default function GlobalSidebar({updateSelection}){\r\n    const tagList = {\r\n        \"1\": \"Search flights\",\r\n        \"2\": \"Exit the System\",\r\n    }\r\n    const navigate = useNavigate();\r\n\r\n    const handleSidebarClick = (item) => {\r\n        if (tagList[item.key] == \"Exit the System\") {\r\n            // Say goodbye!\r\n            countDownAnony();\r\n            //Todo\r\n            cookie.remove(\"JSESSIONID\");\r\n            navigate(\"/\", {replace: true})\r\n        }\r\n        updateSelection(tagList[item.key])\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateSelection(\"Search flights\")\r\n    }, [])\r\n\r\n    return (\r\n        <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1']}\r\n            onClick={handleSidebarClick}\r\n            style={{height: '100%', borderRight: 0}}\r\n        >\r\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Operation\">\r\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\r\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\r\n            </SubMenu>\r\n        </Menu>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nconst formLayout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 13 },\r\n  };\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function CreateForm(props){\r\n    const{modalVisible,onCancel,onSubmit,handleCreateModalVisible,handleCreate} = props;\r\n    const[formVals,setFormVals] = useState({}); //用于批量添加，暂时用不到\r\n\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const disabledDate = (current) => {\r\n      // Can not select days before today and today\r\n      return current && current < moment().endOf('day');\r\n    }\r\n\r\n    const options = [\"upcoming\",\"cancelled\",\r\n    \"checking in\",\r\n    \"delayed\",\r\n    \"on time\"];\r\n    const optionsData = options.map((item)=><Option key={item}>{item}</Option>)\r\n\r\n    \r\n\r\n    const handleNext = async () => {\r\n        const fieldsValue = await form.validateFields();\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/validateNewAirplane\",\r\n          method:\"POST\",\r\n          data:{\r\n            id:fieldsValue.airplaneId,\r\n            airline:fieldsValue.airlineName\r\n          }\r\n        }).then(function(response){\r\n          if(response.data===\"success\"){\r\n            setFormVals({ ...formVals, ...fieldsValue});\r\n            handleCreate({ ...formVals, ...fieldsValue});\r\n          }else{\r\n            message.error({\r\n              content: 'This airline name and airplane id is not found in the database!',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n          }\r\n        })\r\n        \r\n      };\r\n\r\n    const renderContent = () => {\r\n        return (\r\n          < >\r\n            <FormItem\r\n              name=\"flightNum\"\r\n              label=\"Flight Number\"\r\n              rules={[{ required: true, message: 'Please input flight number!' }]}\r\n            >\r\n              <Input placeholder=\"e.g. MU672\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"airlineName\"\r\n              label=\"Airline Name\"\r\n              rules={[{ required: true, message: 'Please input airline name' }]}\r\n            >\r\n              <Input placeholder=\"e.g. Cathay Pacific\" />\r\n            </FormItem>\r\n    \r\n            <FormItem\r\n              name=\"sourceAirportName\"\r\n              label=\"Departure Airport\"\r\n              rules={[{ required: true, message: 'Please Input Departure Airport' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (value && getFieldValue('destAirportName') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The arrivalAirport should not be the same as the departure Airport!'));\r\n                },\r\n              }),]}\r\n            >\r\n              <Input placeholder=\"e.g. PVG\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"departureTime\"\r\n              label=\"Departure Time\"\r\n              rules={[{ required: true, message: 'Please input Departure Time' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  console.log(\"xixi\");\r\n                  if (moment(value)<moment(getFieldValue(\"arrivalTime\"))) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('You cannot set the departure time to be later than arrival time!'));\r\n                },}),\r\n\r\n              ]}\r\n              >\r\n              <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n               disabledDate={disabledDate}\r\n               showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }\r\n              \r\n              }></DatePicker>\r\n            </FormItem>\r\n\r\n\r\n            <FormItem\r\n              name=\"destAirportName\"\r\n              label=\"Arrival Airport\"\r\n              rules={[{ required: true, message: 'Please Input Arrival Airport' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (value && getFieldValue('sourceAirportName') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The arrival airport should not be the same as the departure airport!'));\r\n                },\r\n              }),]}\r\n            >\r\n              <Input placeholder=\"e.g. SZX\" />\r\n            </FormItem>\r\n\r\n\r\n            <FormItem\r\n              name=\"arrivalTime\"\r\n              label=\"Arrival Time\"\r\n              rules={[{ required: true, message: 'Please input Arrival Time' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (moment(value)>moment(getFieldValue(\"departureTime\"))) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('You cannot set the arrival time to be earlier than  the departure time!'));\r\n                },\r\n              }),]}\r\n              >\r\n              <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n               disabledDate={disabledDate}\r\n               showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}></DatePicker>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"price\"\r\n              label=\"price\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please indicate the price of this flight!\"\r\n              }]}>\r\n              <InputNumber min={1} max={999999999} precision={2} style={{width:130}}></InputNumber>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"status\"\r\n              label=\"status\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please select the status of this flight!\"\r\n              }]}>\r\n              <Select >{optionsData}</Select>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"airplaneId\"\r\n              label=\"Airplane Id\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please select the airplane id for this flight!\"\r\n              }]}>\r\n              <Input placeholder=\"e.g. A380\"></Input>\r\n            </FormItem>\r\n\r\n\r\n          </>\r\n        );\r\n      };\r\n\r\n      const renderFooter = () => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleCreateModalVisible(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => handleNext()}>\r\n              Submit\r\n            </Button>\r\n          </>\r\n        );\r\n      };\r\n\r\n    return (\r\n        <Modal\r\n      destroyOnClose\r\n      title=\"Add Flight\"\r\n      visible={modalVisible}\r\n      onCancel={() => onCancel()}\r\n      footer={renderFooter()}\r\n      \r\n    >\r\n      {/* {props.children} */}\r\n\r\n      <Form\r\n          {...formLayout}\r\n          form={form}\r\n          name=\"flight\"\r\n          className=\"flight-form\"\r\n        >{renderContent()}\r\n        </Form>\r\n\r\n    </Modal>\r\n    )\r\n\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { ConsoleSqlOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst {Option} = Select;\r\n\r\nconst formLayout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 13 },\r\n  };\r\n\r\nexport default function UpdateForm(props){\r\n    const {onCancel,onSubmit,updateModalVisible,handleUpdateModalVisible,values,handleUpdate}=props;\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const disabledDate = (current) => {\r\n      // Can not select days before today and today\r\n      return current && current < moment().endOf('day');\r\n    }\r\n\r\n    const [formVals,setFormVals] = useState({\r\n        ...props.values,\r\n    });\r\n\r\n\r\n    const optionList = [\"cancelled\",\"checking in\",\"delayed\",\"on time\",\"full\"]\r\n\r\n    const optionDiaplayMapping = {\r\n      \"cancelled\":\"Cancelled\",\r\n      \"checking in\":\"Checking In\",\r\n      \"delayed\":\"Delayed\",\r\n      \"on time\":\"On Time\",\r\n      \"full\":\"Full/Not Avaliable For Purchase\"\r\n    }\r\n\r\n    const optionMapping = optionList.map((item)=>(<Option key={item} value={item}>{optionDiaplayMapping[item]}</Option>))\r\n\r\n    const handleNext = async () => {\r\n        const fieldsValue = await form.validateFields();\r\n        setFormVals({ ...formVals, ...fieldsValue});\r\n        handleUpdate({ ...formVals, ...fieldsValue});\r\n      };\r\n\r\n      const renderContent = () => {\r\n        return (\r\n          <>\r\n            <FormItem\r\n              name=\"flightNum\"\r\n              label=\"Flight Number\"\r\n              rules={[{ required: true, message: 'Please input flight number!' }]}\r\n            >\r\n              <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"airlineName\"\r\n              label=\"Airline Name\"\r\n              rules={[{ required: true, message: 'Please input airline name!' }]}\r\n            >\r\n              <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>\r\n    \r\n            {(<FormItem\r\n              name=\"sourceAirportName\"\r\n              label=\"Departure Airport\"\r\n              \r\n              rules={[{ required: true, message: 'Please Input Departure Airport' }]}\r\n            >\r\n              <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>)}\r\n            {/* {(<FormItem\r\n            name=\"departureTime\"\r\n            label=\"Departure Time\"\r\n            rules={[{ required: true, message: 'Please input Departure Time' }]}\r\n            >\r\n            <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n              //  disabledDate={disabledDate}\r\n               showTime={{format:\"YYYY-MM-DD HH:mm:ss\"}}></DatePicker>\r\n            </FormItem>)} */}\r\n\r\n            <FormItem\r\n            name=\"destAirportName\"\r\n            label=\"Arrival Airport\"\r\n            \r\n            rules={[{ required: true, message: 'Please input  Arrival Airport' }]}\r\n            >\r\n            <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>\r\n\r\n            {/* <FormItem\r\n            name=\"arrivalTime\"\r\n            label=\"Arrival Time\"\r\n            rules={[{ required: true, message: 'Please input Departure Time' }]}\r\n            >\r\n            <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n              //  disabledDate={disabledDate}\r\n               showTime={{format:\"YYYY-MM-DD HH:mm:ss\"}}></DatePicker>\r\n            </FormItem> */}\r\n\r\n            <FormItem\r\n            name=\"price\"\r\n            label=\"price\"\r\n            \r\n            rules={[{ required: true, message: 'Please input the price' }]}\r\n            >\r\n            <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>\r\n            <FormItem\r\n            name=\"status\"\r\n            label=\"status\"\r\n            rules={[{ required: true, message: 'Please select the status' }]}\r\n            >\r\n            <Select>\r\n              {optionMapping}\r\n            </Select>\r\n            </FormItem>\r\n          </>\r\n        );\r\n      };\r\n    \r\n      const renderFooter = () => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleUpdateModalVisible(false, values)}>取消</Button>\r\n            <Button type=\"primary\" onClick={() => handleNext()}>\r\n              提交\r\n            </Button>\r\n          </>\r\n        );\r\n      };\r\n  \r\n    return (\r\n    <Modal\r\n        width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title=\"Update Flight\"\r\n        visible={updateModalVisible}\r\n        footer={renderFooter()}\r\n        onCancel={() => handleUpdateModalVisible()}\r\n      >\r\n  \r\n        <Form\r\n          {...formLayout}\r\n          form={form}\r\n          initialValues={{\r\n            flightNum: formVals.flightNum,\r\n            airlineName: formVals.airlineName,\r\n            sourceAirportName: formVals.sourceAirportName,\r\n            // departureTime:formVals.dept_time,\r\n            destAirportName: formVals.destAirportName,\r\n            // arrivalTime:formVals.arri_time,\r\n            price:formVals.price,\r\n            status:formVals.status\r\n          }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n      </Modal>)\r\n}","import React, { useState } from 'react';\r\nimport { Table, Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport default function DetailsTable(props){\r\n    const {detailModalVisible,onCancel,handleDetailModalVisible,values} = props;\r\n\r\n    console.log(values);\r\n    \r\n    // const dataSource = [{\r\n    //     email:\"asda\",\r\n    //     name:\"Jack\",\r\n    //     building_num:\"No.10\",\r\n    //     street:\"Baker Street\",\r\n    //     city:\"NYC\",\r\n    //     state:\"USA\",\r\n    //     phone:\"1231231234\",\r\n    //     passportNumber:\"E1231414\",\r\n    //     passportExpiration:\"2029-10-21\",\r\n    //     passportCountry:\"China\",\r\n    //     birthday:\"1999-02-02\"\r\n    // }]\r\n\r\n    const dataSource = values.passengers;\r\n\r\n    const columns=[\r\n        {\r\n            title:\"Email\",\r\n            dataIndex:\"email\",\r\n            key:\"email\",\r\n            textWrap:\"word-break\",\r\n            width:150,\r\n            ellipsis:true,\r\n            fixed:\"left\"\r\n        },{\r\n            title:\"Name\",\r\n            dataIndex:\"name\",\r\n            key:\"name\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            \r\n        },\r\n        {\r\n            title:\"Building Number\",\r\n            dataIndex:\"buildingNumber\",\r\n            key:\"building\"\r\n        },\r\n        {\r\n            title:\"Street\",\r\n            dataIndex:\"street\",\r\n            key:\"street\"\r\n        },\r\n        {\r\n            title:\"City\",\r\n            dataIndex:\"city\",\r\n            key:\"city\"\r\n        },{\r\n            title:\"State\",\r\n            dataIndex:\"livingState\",\r\n            key:\"state\"\r\n        },{\r\n            title:\"Phone No.\",\r\n            dataIndex:\"phoneNumber\",\r\n            key:\"phone\",\r\n            textWrap:\"word-break\",\r\n            width:150,\r\n            ellipsis:true,\r\n        },{\r\n            title:\"Passport No.\",\r\n            dataIndex:\"passportNumber\",\r\n            key:\"passportnum\"\r\n        },{\r\n            title:\"Passport Exp.\",\r\n            dataIndex:\"passportExpiration\",\r\n            key:\"passportexp\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },{\r\n            title:\"Passport Country\",\r\n            dataIndex:\"passportCountry\",\r\n            key:\"passportCountry\"\r\n        },{\r\n            title:\"Birthday\",\r\n            dataIndex:\"birthday\",\r\n            key:\"birthday\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    return (\r\n    <>\r\n    <Modal \r\n    destroyOnClose\r\n      title=\"Customer Details\"\r\n      visible={detailModalVisible}\r\n      onCancel={() => onCancel()}\r\n      width={1300}\r\n      footer={[]}\r\n      >\r\n    <Table scroll={{x:1300}} columns={columns} dataSource={dataSource}>\r\n\r\n    </Table></Modal></>\r\n    )\r\n}","import React,{useEffect,useState,useRef} from \"react\";\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\nimport axios from \"axios\";\r\nimport {dateFormat} from \"../../lib/dateFormat\";\r\nimport \"antd/dist/antd.css\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport ProTable from '@ant-design/pro-table';\r\nimport { PageContainer, FooterToolbar } from '@ant-design/pro-layout';\r\nimport {PlusOutlined,DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport {Button, Space, Tag,Popconfirm, message,Tooltip} from \"antd\";\r\nimport { statusColor } from \"../../lib/statusTag\";\r\nimport CreateForm from \"./CRUDElements/CreateForm\";\r\nimport UpdateForm from \"./CRUDElements/UpdateForm\";\r\nimport DetailsTable from \"./CRUDElements/DetailsForm\";\r\n\r\nexport default function FlightCRUD({loginInfo}){\r\n\r\n    //控制添加Modal的可视\r\n    const [createModalVisible,handleCreateModalVisible] = useState(false);\r\n    //控制更新Modal的可视，由于需要数据回显，故和createModal分开写\r\n    const [updateModalVisible,handleUpdateModalVisible] = useState(false);\r\n    const [detailModalVisible,handleDetailModalVisible] = useState(false);\r\n    const [selectedRows,setSelectedRows] = useState([]);\r\n    //设置回显的数据\r\n    const [stepFormValues, setStepFormValues] = useState({});\r\n    //用于判断是否能够多选\r\n    const [radioValue, setRadioValue] = useState('read');\r\n    //从后台api获取的数据\r\n    const [apiData, setApiData] = useState([]);\r\n    //全局变量，在整个生命周期都有效\r\n    const actionRef = useRef();\r\n    //全局变量，用于控制是否加载默认数据\r\n    const defaultRef = useRef(true);\r\n\r\n    console.log(loginInfo);//默认\r\n\r\n    // const defaultLoginInfo = {\r\n    //   permission:[\"Admin\",\"Operator\"]\r\n    // }\r\n    \r\n    //异步方法提交数据, 注意这里返回一个异步函数\r\n    const fetchFlightData = async (query)=>{\r\n        return axios({\r\n          url:\"http://localhost:8080/airlineStaff/findAllFlightsForAirline\",\r\n          method:\"GET\",\r\n          params:{\r\n            airlineName:loginInfo.current?loginInfo.current.airlineName:\"Spring Airlines\"\r\n          }\r\n        }).then(function(response){\r\n          if(response.data){\r\n            console.log(response.data);\r\n            // const parsedData = JSON.parse(response.data);\r\n              defaultRef.current = false;\r\n              return {\"data\":{...response.data},\"success\":true};\r\n          }else{\r\n             return {\"data\":{},\"success\":false};\r\n          }\r\n        }).catch(function(){\r\n          console.log(\"返回默认数据\")\r\n          return {\"data\":dataSource,\"success\":true};\r\n        })  \r\n       \r\n    }\r\n\r\n    const fetchFilteredFlightData = async (query)=>{\r\n      console.log(query);\r\n      return axios({\r\n        url:\"http://localhost:8080/airlineStaff/findAllFilteredFlights\",\r\n        method:\"POST\",\r\n        data:query\r\n      }).then(function(response){\r\n        if(response.data){\r\n          \r\n            return {\"data\":{...response.data},\"success\":true};\r\n        }else{\r\n           return {\"data\":{},\"success\":false};\r\n        }\r\n      }).catch(function(){\r\n        console.log(\"返回默认数据\")\r\n        return {\"data\":dataSource,\"success\":true};\r\n      })  \r\n     \r\n  }\r\n\r\n    const dataSource = {\r\n      \"records\":[\r\n        {\r\n          flightNum: \"MU12243234\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"on time\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        {\r\n          flightNum: \"MU1224\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"on time\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        {\r\n          flightNum: \"MU234\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"on time\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        \r\n      ],\"total\":12,\"success\":true};\r\n\r\n\r\n    const handleDelete= (flight_id,airline_name)=>{\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/deleteFlight\",\r\n          method:\"POST\",\r\n          data:qs.stringify({\r\n            flightNum:flight_id,\r\n            airlineName:airline_name\r\n          })\r\n        }).then(function(response){\r\n          if(response.data){\r\n            actionRef.current.reload();\r\n\r\n        message.success(\"Click on Yes\");\r\n          }\r\n        }).catch(function(response){\r\n          message.success(\"Delete Failed\");\r\n        });\r\n        \r\n    }\r\n\r\n    const handleUpdate = (flight_info)=>{\r\n        console.log(flight_info);\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/updateStatus\",\r\n          method:\"POST\",\r\n          data:{\r\n            flightNum:flight_info.flightNum,\r\n            airlineName:flight_info.airlineName,\r\n            status:flight_info.status,\r\n          }\r\n\r\n        }).then(function(response){\r\n          if(response.data===\"success\"){\r\n            handleUpdateModalVisible(false);\r\n            message.success(\"Update Succeed!\");\r\n          }\r\n        }).catch(function(response){\r\n          message.error(\"Server not responding!\")\r\n        })\r\n    }\r\n\r\n    const handleUpdateMany =()=>{\r\n      \r\n    }\r\n\r\n    //用于提交数据之后\r\n    const handleCreate = (values)=>{\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/addNewFlight\",\r\n          method:\"post\",\r\n          data:{...values,\r\n            departureTime:new Date(moment(values.departureTime)),\r\n            arrivalTime:new Date(moment(values.arrivalTime))}\r\n        }).then(function(response){\r\n          if(response.data===\"success\"){\r\n            message.success({\r\n              content: 'Insertion Completed',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n            handleCreateModalVisible(false);\r\n            actionRef.current.reload();\r\n          }else{\r\n            message.error({\r\n              content: 'You have already inserted this airplane information!',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n          }\r\n        })\r\n        \r\n    }\r\n\r\n    const handleDetails =()=>{\r\n        console.log(\"show info\");\r\n    }\r\n\r\n    const confirm = (e,record)=>{\r\n        handleDelete(record.flightNum,record.airlineName);\r\n    }\r\n\r\n    const cancel = (e)=>{\r\n        console.log(e);\r\n        message.error(\"Click on No\");\r\n\r\n    }\r\n\r\n\r\n    // 表格列配置项\r\n    const columns = [\r\n        {\r\n            title: \"Flight Number\",\r\n            dataIndex:\"flightNum\",\r\n            key:\"flightNum\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            fixed:\"left\",\r\n            \r\n        },\r\n        {\r\n            title: \"Airline Name\",\r\n            dataIndex:\"airlineName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key:\"airlineName\"\r\n        },\r\n        {\r\n            title: \"Dept. Airport\",\r\n            dataIndex: \"sourceAirportName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key: \"sourceAirportName\"\r\n        },\r\n        {\r\n            title: \"Arri. Airport\",\r\n            dataIndex: \"destAirportName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key: \"destAirportName\"\r\n        },\r\n        {\r\n            title: \"Dept. Time\",\r\n            dataIndex: \"departureTime\",\r\n            valueType:\"dateTime\",\r\n            // textWrap:\"word-break\",\r\n            width:150,\r\n            ellipsis:true,\r\n            key: \"departureTime\"\r\n        },\r\n        {\r\n            title: \"Arri. Time\",\r\n            dataIndex: \"arrivalTime\",\r\n            valueType:\"dateTime\",\r\n            key: \"arrivalTime\",\r\n            width:150,\r\n            // textWrap:\"word-break\",\r\n       \r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            dataIndex: \"price\",\r\n            hideInSearch:true,\r\n            key: \"price\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Airplane ID\",\r\n            dataIndex: \"airplaneId\",\r\n            hideInSearch:true,\r\n            key: \"airplaneId\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Status\",\r\n            dataIndex: \"status\",\r\n            hideInSearch:true,\r\n            key: \"status\",\r\n            render: tags => (\r\n                <>\r\n                    {\r\n                        <Tag color={statusColor[tags]} key={tags}>\r\n                            {tags.toUpperCase()}\r\n                        </Tag>\r\n                    }\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            key: 'action',\r\n            hideInSearch:true,\r\n            fixed:\"right\",\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                \r\n                <Button onClick={()=>{\r\n                  handleDetailModalVisible(true);\r\n                  setStepFormValues(record);\r\n                }}>Details</Button>\r\n                 <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Operator\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>\r\n                <Button disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Operator\")?false:true:false} onClick={()=>{\r\n                    handleUpdateModalVisible(true);\r\n                    setStepFormValues(record);\r\n                }} type={'primary'} size={'small'} >\r\n                  <EditOutlined style={{fontSize: '15px'}} />\r\n                </Button></Tooltip>\r\n                <Popconfirm\r\n                     title=\"Are you sure to delete this row?\"\r\n                    onConfirm={(e)=>{confirm(e,record);}}\r\n                    onCancel={cancel}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                >\r\n                 <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Operator\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>\r\n                <Button disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Operator\")?false:true:false} onClick={()=>{\r\n                }} type={'primary'} size={'small'} danger >\r\n                  <DeleteOutlined style={{fontSize: '15px'}} />\r\n                </Button></Tooltip></Popconfirm>\r\n              </Space>\r\n        \r\n            )\r\n        }\r\n    ]\r\n\r\n    // 获取数据 \r\n    const getData = async (params,sort,filter) => {\r\n        // 组装查询参数，比如这里用 pageIndex 代替了 current\r\n        if(defaultRef.current==true){\r\n              console.log(\"调用getData\");\r\n            const query = {\r\n                ...params,\r\n                pageIndex: params.current\r\n            };\r\n            delete query.current;\r\n\r\n            // 发起请求\r\n            console.log(\"发起请求\")\r\n            const {data,success} = await fetchFlightData(query); //这里需要返回一个异步函数\r\n            \r\n            // 格式化返回数据\r\n            return {\r\n                data: data.records,\r\n                success,\r\n                total: data.total,\r\n            };\r\n        }else{\r\n          console.log(defaultRef);\r\n            console.log(\"调用getFilteredData\");\r\n            const query = {\r\n                ...params,\r\n                pageIndex: params.current\r\n            };\r\n            delete query.current;\r\n    \r\n            // 发起请求\r\n            console.log(\"发起请求\");\r\n            console.log(params);\r\n            const {data,success} = await fetchFilteredFlightData(query); //这里需要返回一个异步函数\r\n            \r\n            // 格式化返回数据\r\n            return {\r\n                data: data.records,\r\n                success,\r\n                total: data.total,\r\n            };\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <ProTable\r\n            columns={columns}\r\n            actionRef={actionRef}\r\n            request={getData}\r\n            rowKey={(record,index)=>index}\r\n            scroll={{\"y\":300,x:1300}}\r\n            form={{span:8}}\r\n            size={\"middle\"}\r\n            rowSelection={{\r\n                onchange:(_,selectedRows)=>setSelectedRows(selectedRows),\r\n            }}\r\n            toolBarRender={() => [\r\n              <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>\r\n            <Button key=\"3\" type=\"primary\" disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?false:true:false} onClick={()=>{\r\n                handleCreateModalVisible(true);\r\n\r\n            }}>\r\n                <PlusOutlined />\r\n                Add Flight\r\n            </Button></Tooltip>,\r\n        ]}\r\n        />\r\n\r\n        {selectedRows?.length > 0 && (\r\n        <FooterToolbar\r\n          extra={\r\n            <div>\r\n               <a style={{ fontWeight: 600 }}>{selectedRows.length}</a> items choosed &nbsp;&nbsp;\r\n            </div>\r\n          }\r\n        >\r\n          { radioValue === 'read' && (<Button\r\n            danger\r\n            type=\"primary\"\r\n            onClick={async () => {\r\n              await handleDelete(selectedRows);\r\n              setSelectedRows([]);\r\n              // @ts-ignore\r\n              actionRef.current?.reloadAndRest();\r\n            }}\r\n          >\r\n            批量删除\r\n          </Button>)}\r\n          { radioValue === 'upload'&&(<Button\r\n            type=\"primary\"\r\n            onClick={async () => {\r\n              await handleUpdateMany(selectedRows);\r\n              setSelectedRows([]);\r\n            }}\r\n          >\r\n            批量新增\r\n          </Button>)}\r\n        </FooterToolbar>\r\n      )}\r\n        \r\n\r\n      <CreateForm onSubmit={async (value) => {\r\n            // 发送请求到后端\r\n            const success = await handleUpdate(value);\r\n            if (success) {\r\n              //请求成功推出Modal页面\r\n              handleUpdateModalVisible(false);\r\n              //重置表单数据\r\n              setStepFormValues({});\r\n              //重新刷新子页面\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          onCancel={() => handleCreateModalVisible(false)} \r\n          modalVisible={createModalVisible}\r\n          handleCreateModalVisible={handleCreateModalVisible}\r\n          handleCreate={handleCreate}\r\n          className={\"createForm\"}>\r\n        {/* <ProTable\r\n          onSubmit={async (value) => {\r\n            const success = await handleCreate(value);\r\n            if (success) {\r\n              handleCreateModalVisible(false);\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          rowKey={[\"flight_id\",\"airline\"]}\r\n          type=\"form\"\r\n          columns={columns}\r\n          rowSelection={{}}\r\n        /> */}\r\n      </CreateForm>\r\n         \r\n      {stepFormValues && Object.keys(stepFormValues).length ? (\r\n        <UpdateForm\r\n        className=\"updateForm\"\r\n          onSubmit={async (value) => {\r\n            // 发送请求到后端\r\n            const success = await handleUpdate(value);\r\n            if (success) {\r\n              //请求成功推出Modal页面\r\n              handleUpdateModalVisible(false);\r\n              //重置表单数据\r\n              setStepFormValues({});\r\n              //重新刷新子页面\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          //取消update操作\r\n          onCancel={() => {\r\n              // 推出Modal\r\n            handleUpdateModalVisible(false);\r\n            //重置表单内容\r\n            setStepFormValues({});\r\n          }}\r\n          handleUpdateModalVisible={handleUpdateModalVisible}\r\n          updateModalVisible={updateModalVisible}\r\n          values={stepFormValues}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : null}\r\n\r\n      {stepFormValues && Object.keys(stepFormValues).length ? (\r\n        <DetailsTable className={\"DetailForm\"}\r\n          handleDetailModalVisible={handleDetailModalVisible}\r\n          detailModalVisible={detailModalVisible}\r\n          onCancel={() => {\r\n              // 推出Modal\r\n            handleDetailModalVisible(false);\r\n            //重置表单内容\r\n            setStepFormValues({});\r\n          }}\r\n          values={stepFormValues}\r\n        ></DetailsTable>):null}\r\n      \r\n    </div>\r\n        \r\n\r\n\r\n\r\n    );\r\n};\r\n","import {Card, Form, Input, Button,Table,InputNumber,Space,Spin,message} from 'antd';\r\nimport {Bar} from \"@ant-design/charts\";\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\n// 设置最大等待时间\r\naxios.defaults.timeout = 1000;\r\n\r\nexport default function ViewAgents({setNavigateBar}){\r\n\r\n    // sales 和 commission\r\n    const [activeTab,setActiveTab] = useState(\"sales\");\r\n    const [past,setPast] = useState(\"year\");\r\n    const [topK,setTopK] = useState(5);\r\n    const [data,setData]=useState(null);\r\n\r\n    const fixed = 5;\r\n    const topSalesData =[\r\n        {\r\n            type:\"22@23.com\",\r\n            sales:34\r\n        },\r\n        {\r\n            type:\"22@25.com\",\r\n            sales:38\r\n        },\r\n        {\r\n            type:\"aa@23.com\",\r\n            sales:30\r\n        },\r\n        {\r\n            type:\"s2a@43.com\",\r\n            sales:12\r\n        },\r\n        {\r\n            type:\"12@23.com\",\r\n            sales:56\r\n        }\r\n    ]\r\n\r\n    useEffect(()=>{\r\n        handleSearchSales(topK)\r\n    },[])\r\n\r\n    const topCommissionData=[\r\n        {\r\n            type:\"22@23.com\",\r\n            commission:340\r\n        },\r\n        {\r\n            type:\"22@25.com\",\r\n            commission:380\r\n        },\r\n        {\r\n            type:\"aa@23.com\",\r\n            commission:100\r\n        },\r\n        {\r\n            type:\"s2a@43.com\",\r\n            commission:120\r\n        },\r\n        {\r\n            type:\"12@23.com\",\r\n            commission:560\r\n        }\r\n    ];\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Ranking'},\r\n        {key: 'commission', tab: 'Commission Ranking'},\r\n    ]\r\n\r\n    const handleSearchSales=(value)=>{\r\n        \r\n        axios.get(\"http://localhost:8080/airlineStaff/getTopK\",{\r\n            params:{\r\n                type:\"sales\",\r\n                K:value,\r\n                past:past\r\n            },\r\n            timeout:1000\r\n        }).then(function(response){\r\n            if(response.data){\r\n                const dataMap = response.data.map((item)=>({type:item.email,sales:item.totalSales}));\r\n                setData(dataMap);\r\n            }\r\n        }).catch(function(response){\r\n            message.error(\"请求超时,加载默认数据\");\r\n            setData(topSalesData);  \r\n        })\r\n    }\r\n\r\n    const handleSearchCommission=(value)=>{\r\n\r\n        axios.get(\"http://localhost:8080/airlineStaff/getTopK\",{\r\n            params:{\r\n                type:\"commission\",\r\n                K:value,\r\n                past:past\r\n            }\r\n        }).then(function(response){\r\n            if(response.data){\r\n                const dataMap = response.data.map((item)=>({type:item.email,commission:item.commissionFees}));\r\n                setData(dataMap);\r\n            }\r\n        }).catch(function(response){\r\n            setData(topCommissionData);\r\n        })\r\n\r\n    }\r\n\r\n    const onTabChange = (key)=>{\r\n        setActiveTab(key);\r\n    \r\n        if(key===\"sales\"){\r\n            // setData(topSalesData);\r\n            setData(null);\r\n            handleSearchSales(topK);\r\n        }else{\r\n            // setData(topCommissionData);\r\n            setData(null);\r\n            handleSearchCommission(topK);\r\n        }\r\n    }\r\n\r\n    const onNumberChange=(value)=>{\r\n        //更新图标\r\n        setTopK(value);\r\n        if(value>topK){\r\n        if(activeTab===\"sales\"){\r\n            handleSearchSales(value);\r\n        }else if(activeTab===\"commission\"){\r\n            handleSearchCommission(value);\r\n        }}\r\n    }\r\n\r\n\r\n    var config = {\r\n        data: data?data.slice(0,topK):null,\r\n        xField: activeTab===\"sales\"?'sales':\"commission\",\r\n        yField: 'type',\r\n        legend: { position: 'top-left' },\r\n        barBackground: { style: { fill: 'rgba(0,0,0,0.1)' } },\r\n        interactions: [\r\n          {\r\n            type: 'active-region',\r\n            enable: false,\r\n          },\r\n        ],\r\n      };\r\n     \r\n\r\n    return (\r\n    <Card tabList={tabList}\r\n        activeTab={activeTab}\r\n        onTabChange={onTabChange}\r\n        tabBarExtraContent={<>\r\n        {activeTab===\"sales\"&&(<Space ><Button type={\"primary\"} onClick={()=>{setPast(\"month\")}}>Past Month</Button>\r\n        <Button  type={\"primary\"} onClick={()=>{setPast(\"year\")}}>Past Year</Button></Space>)}\r\n        <Space><span style={{marginRight:5,marginLeft:10}}>Top</span><InputNumber addonBefore=\"+\" addonAfter=\"$\" min={1} onChange={onNumberChange} defaultValue={fixed}></InputNumber><span style={{marginLeft:5}}>Agents</span></Space>\r\n        </>}\r\n        hoverable={true}>\r\n\r\n        {!data&&(<Spin size=\"large\"></Spin>)}\r\n        {data&&(<Bar \r\n        {...config}\r\n        sort \r\n        onReady={(plot)=>{\r\n                plot.chart.on(\"element:click\",(evt)=>{\r\n                });\r\n            }}\r\n        />)}\r\n\r\n\r\n\r\n    </Card>)\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space,message,Statistic} from 'antd';\r\nimport { Column } from '@ant-design/charts';\r\nimport React, {useState,useEffect,useRef} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport moment from \"moment\";\r\nimport cookie from 'react-cookies';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function ViewReports({loginInfo,setNavigateBar}){\r\n    const [data,setData]=useState([]);\r\n    const [totalSales,setTotalSales] = useState(undefined);\r\n    const past = useRef(\"year\");\r\n\r\n    const originalData = useRef([]);\r\n\r\n    const loadingHolder= Boolean(totalSales);\r\n    const navigate = useNavigate();\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{\r\n      // setData(sampleData);\r\n      getData(\"Spring Airlines\",null,null);\r\n    },[]);\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Report'},\r\n    ]\r\n\r\n\r\n    const getData = (airlineName,startDate,endDate)=>{\r\n      console.log(startDate);\r\n      console.log(endDate);\r\n      axios.get(\"http://localhost:8080/airlineStaff/viewReports\",\r\n      {\r\n        params:{\r\n          airlineName:loginInfo.current?loginInfo.current.airlineName:\"Spring Airlines\",\r\n          startDate:startDate?new Date(startDate):null,\r\n          endDate:endDate?new Date(endDate):null\r\n        }\r\n      }).then(function(response){\r\n          if(response.data[\"statusCode\"]==503){\r\n            console.log(\"跳出\");\r\n            loginInfo.current = null;\r\n                message.destroy();\r\n                message.error(\"Session Expired!\");\r\n                cookie.remove(\"JSESSIONID\");\r\n                setNavigateBar(\"global\");\r\n                navigate(\"/global\", {replace: true})\r\n          }else{\r\n          message.destroy();\r\n          message.success(\"Data loaded!\");\r\n          const dataMap = response.data.map((item)=>({type:item.interval,sales:item.value}))\r\n          const totalSales = dataMap.reduce(getSum,0);//这个零是初始化为零开始累加的意思\r\n          originalData.current = dataMap;\r\n          setData(dataMap);\r\n          setTotalSales(totalSales);}\r\n          \r\n\r\n      }).catch(function(){\r\n          message.error(\"Time out\");\r\n          originalData.current = sampleData;\r\n          setData(sampleData);\r\n      })\r\n    }\r\n\r\n    const getSum = (total,num)=>{\r\n      return total+num.sales;\r\n    }\r\n\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '家具家电',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '粮油副食',\r\n          sales: 52,\r\n        },\r\n        {\r\n          type: '生鲜水果',\r\n          sales: 61,\r\n        },\r\n        {\r\n          type: '美容洗护',\r\n          sales: 145,\r\n        },\r\n        {\r\n          type: '母婴用品',\r\n          sales: 48,\r\n        },\r\n        {\r\n          type: '进口食品',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '食品饮料',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '家庭清洁',\r\n          sales: 38,\r\n        },\r\n      ];\r\n      var config = {\r\n        data: data,\r\n        xField: 'type',\r\n        yField: 'sales',\r\n        label: {\r\n          position: 'middle',\r\n          style: {\r\n            fill: '#FFFFFF',\r\n            opacity: 0.6,\r\n          },\r\n        },\r\n        xAxis: {\r\n          label: {\r\n            autoHide: true,\r\n            autoRotate: false,\r\n          },\r\n        },\r\n        meta: {\r\n          type: { alias: '类别' },\r\n          sales: { alias: '销售额' },\r\n        },\r\n      };\r\n\r\n\r\n      const renderLastYear = ()=>{\r\n        const dataMap = originalData.current;\r\n        const totalSales = dataMap.reduce(getSum,0);//这个零是初始化为零开始累加的意思\r\n          setData(dataMap);\r\n          setTotalSales(totalSales);  \r\n               \r\n        }\r\n\r\n      const renderLastMonth = ()=>{\r\n        const dataMap = originalData.current.slice(-1);\r\n        setData(dataMap);\r\n        setTotalSales(dataMap.sales);\r\n      }\r\n\r\n      const renderRange = (value)=>{\r\n          if(value!=null){\r\n          getData(\"\",value[0],value[1]);}\r\n\r\n      }\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button>\r\n            <RangePicker picker=\"month\" onChange={renderRange}></RangePicker></Space>\r\n        )\r\n      }\r\n\r\n\r\n\r\n      return (\r\n      <Card title=\"Here is the sales report for the airline you work in.\"\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}\r\n      >\r\n      <Statistic title={\"Total Number of sold tickets over the last \"+past.current}\r\n                        value={totalSales}\r\n                        // loading={!loadingHolder}\r\n                        precision={2}\r\n                        style={{width: '100%'}}></Statistic>\r\n      <Column {...config} /></Card>);\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space,message} from 'antd';\r\nimport { Column } from '@ant-design/charts';\r\nimport React, {useState,useEffect,useRef} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nexport default function TopDestinations(){\r\n    const [data,setData]=useState([]);\r\n    const [startDate,setStartDate]=useState(undefined);\r\n    const [endDate,setEndDate] = useState(undefined);\r\n    const past = useRef(\"year\");\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{\r\n      getDestinationData(\"year\");\r\n    },[]);\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Report'},\r\n    ]\r\n\r\n    const getDestinationData = (past)=>{\r\n      axios.get(\"http://localhost:8080/airlineStaff/topDestinations\",\r\n      {\r\n        params:{\r\n          past:past,\r\n        }\r\n      }).then(function(response){\r\n          message.success(\"数据加载成功\");\r\n          console.log(response.data);\r\n          const dataMap = response.data.map((item)=>({type:item.type,value:item.value}))\r\n          console.log(dataMap);\r\n          setData(dataMap);\r\n\r\n      }).catch(function(){\r\n          message.error(\"访问超时，使用默认数据\");\r\n          setData(sampleData);\r\n      })\r\n    }\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '家具家电',\r\n          value: 38,\r\n        },\r\n        {\r\n          type: '粮油副食',\r\n          value: 52,\r\n        },\r\n        {\r\n          type: '生鲜水果',\r\n          value: 61,\r\n        },\r\n        {\r\n          type: '美容洗护',\r\n          value: 145,\r\n        },\r\n        {\r\n          type: '母婴用品',\r\n          value: 48,\r\n        },\r\n        {\r\n          type: '进口食品',\r\n          value: 38,\r\n        },\r\n        {\r\n          type: '食品饮料',\r\n          value: 38,\r\n        },\r\n        {\r\n          type: '家庭清洁',\r\n          value: 38,\r\n        },\r\n      ];\r\n      var config = {\r\n        data: data,\r\n        xField: 'type',\r\n        yField: 'value',\r\n        label: {\r\n          position: 'middle',\r\n          style: {\r\n            fill: '#FFFFFF',\r\n            opacity: 0.6,\r\n          },\r\n        },\r\n        xAxis: {\r\n          label: {\r\n            autoHide: true,\r\n            autoRotate: false,\r\n          },\r\n        },\r\n        meta: {\r\n          type: { alias: '类别' },\r\n          sales: { alias: '销售额' },\r\n        },\r\n      };\r\n\r\n\r\n      const renderLastYear = ()=>{\r\n        past.current = \"year\";\r\n        getDestinationData(\"year\");\r\n      }\r\n\r\n      const renderLast3Month = ()=>{\r\n        past.current = \"3 months\";\r\n        getDestinationData(\"month\");\r\n\r\n      }\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLast3Month} type={\"primary\"}>Last 3 Months</Button>\r\n           </Space>\r\n        )\r\n      }\r\n\r\n\r\n\r\n      return (\r\n      <Card title={\"Top Destinations in the last\"+ past.current}\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}\r\n      >\r\n      <Column {...config} /></Card>);\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space,Statistic,message,Spin} from 'antd';\r\nimport { Pie } from '@ant-design/charts';\r\nimport React, {useState,useEffect,useRef} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\naxios.defaults.timeout = 1000;\r\n\r\nexport default function RevenueComparison(){\r\n\r\n    const [data,setData]=useState(null);\r\n    const [startDate,setStartDate]=useState(undefined);\r\n    const [endDate,setEndDate] = useState(undefined);\r\n    const [totalSales,setTotalSales] = useState(undefined);\r\n    const past = useRef(\"year\");\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{\r\n      getRevenueData(\"year\",\"Spring Airlines\");\r\n    },[]);\r\n\r\n    const getRevenueData = (value,airlineName)=>{\r\n      axios.get(\"http://localhost:8080/airlineStaff/revenueComparison\",\r\n      {\r\n        params:{\r\n          past:value,\r\n          airlineName:\"Spring Airlines\"\r\n        }\r\n      }).then(function(response){\r\n          message.success(\"数据加载成功\");\r\n          const dataMap = response.data.map((item)=>({type:item.type,value:item.value}))\r\n          const totalSales = dataMap.reduce(getSum,0);//这个零是初始化为零开始累加的意思\r\n          console.log(dataMap);\r\n          setData(dataMap);\r\n          setTotalSales(totalSales)\r\n\r\n      }).catch(function(){\r\n          message.error(\"访问超时，使用默认数据\");\r\n          console.log(sampleData);\r\n          setData(sampleData);\r\n      })\r\n\r\n    }\r\n\r\n\r\n    const getSum = (total,num)=>{\r\n      return total+num.value;\r\n    }\r\n\r\n\r\n    const tabList = [\r\n        {key: 'revenue', tab: 'Revenue Comparison'},\r\n    ]\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '分类一',\r\n          value: 27,\r\n        },\r\n        {\r\n          type: '分类二',\r\n          value: 25,\r\n        },\r\n        {\r\n          type: '分类三',\r\n          value: 18,\r\n        },\r\n        {\r\n          type: '分类四',\r\n          value: 15,\r\n        },\r\n        {\r\n          type: '分类五',\r\n          value: 10,\r\n        },\r\n        {\r\n          type: '其他',\r\n          value: 5,\r\n        },\r\n      ];\r\n      var config = {\r\n        appendPadding: 10,\r\n        data: data,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        radius: 0.75,\r\n        label: {\r\n          type: 'spider',\r\n          labelHeight: 28,\r\n          content: '{name}\\n{percentage}',\r\n        },\r\n        interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\r\n      };\r\n\r\n      const renderLastYear = ()=>{\r\n        past.current = \"year\";\r\n        getRevenueData(\"year\",\"Spring Airlines\");\r\n    }\r\n\r\n        const renderLastMonth = ()=>{\r\n          past.current = \"month\";\r\n          getRevenueData(\"month\",\"Spring Airlines\")\r\n\r\n    }\r\n\r\n    const loadingHolder = Boolean(data);\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button>\r\n            </Space>\r\n        )\r\n      }\r\n\r\n\r\n      return (\r\n      <Card title=\"Here is the brief report\"\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}>\r\n      <Statistic title={\"Total Sales in (USD) over the last \"+past.current}\r\n                        value={totalSales}\r\n                        loading={!loadingHolder}\r\n                        precision={2}\r\n                        style={{width: '100%'}}></Statistic>\r\n         {!data&&(<Spin size=\"large\"></Spin>)}\r\n       {data&&( <Pie {...config} />)}\r\n      </Card>);\r\n}","import {Card, Modal,Form, Input,Tooltip, Button,Table,DatePicker,InputNumber,Space,Spin,message,Tag} from 'antd';\r\nimport {Bar} from \"@ant-design/charts\";\r\nimport React, {useState,useEffect,useRef} from \"react\";\r\nimport {LockOutlined, UserOutlined,QuestionCircleOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport {statusColor} from \"../../lib/statusTag\";\r\n\r\n// 设置最大等待时间\r\naxios.defaults.timeout = 1000;\r\nconst {RangePicker} = DatePicker;\r\n\r\nexport default function ViewFrequent({loginInfo}){\r\n     // sales 和 commission\r\n     const [activeTab,setActiveTab] = useState(\"sales\");\r\n     const [topK,setTopK] = useState(10);\r\n     const [data,setData]=useState([]);\r\n     const originData = useRef(null);\r\n     const [modalVisiblibity,setModalVisibility] = useState(false);\r\n     const [modalEmail,setModalEmail] = useState(\"\");\r\n     const [tableData,setTableData] = useState([]);\r\n\r\n \r\n     const topSalesData =[\r\n         {\r\n             customer:\"22@23.com\",\r\n             tickets:2\r\n         },\r\n         {\r\n            customer:\"22@25.com\",\r\n            tickets:8\r\n         },\r\n         {\r\n            customer:\"aa@23.com\",\r\n            tickets:3\r\n         },\r\n         {\r\n            customer:\"s2a@43.com\",\r\n            tickets:12\r\n         },\r\n         {\r\n            customer:\"12@23.com\",\r\n            tickets:5\r\n         }\r\n     ]\r\n\r\n\r\n     const tableSampleData = [\r\n         {\r\n             key:\"1\",\r\n             flight_id:\"MA1234\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090,\r\n             dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n         },\r\n         {\r\n             key:\"2\",\r\n             flight_id:\"MH3455\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090,\r\n             dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n         },\r\n         {\r\n             key:\"3\",\r\n             flight_id:\"MK5888\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090,\r\n             dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n         },{\r\n            key:\"4\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"5\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"6\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"7\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"8\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"9\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"10\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"11\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"12\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        }\r\n     ]\r\n\r\n\r\n     const tableColumns = [\r\n        {\r\n            title:\"Flight Number\",\r\n            dataIndex: \"flight_id\",\r\n            key:\"flight_id\"\r\n        },\r\n        {   \r\n            title:\"Airline\",\r\n            dataIndex:\"airline\",\r\n            key:\"airline\"\r\n        },\r\n        {\r\n            title: \"Dept. Time\",\r\n            dataIndex: \"dept_time\",\r\n            key: \"dept_time\"\r\n        },\r\n        {\r\n            title: \"Arri. Time\",\r\n            dataIndex: \"arri_time\",\r\n            key: \"arri_time\"\r\n        },\r\n        {\r\n            title: \"Dept. Airport\",\r\n            dataIndex:\"dept\",\r\n            key:\"dept\"\r\n\r\n        },\r\n        {\r\n            title: \"Arri. Airport\",\r\n            dataIndex:\"arri\",\r\n            key:\"arri\"\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            dataIndex: \"price\",\r\n            key: \"price\"\r\n        },\r\n        {\r\n            title: \"Status\",\r\n            dataIndex: \"status\",\r\n            key: \"status\",\r\n            render: tags => (\r\n                <>\r\n                    {tags.map(status => (\r\n                        <Tag color={statusColor[status]} key={status}>\r\n                            {status.toUpperCase()}\r\n                        </Tag>\r\n                    ))\r\n                    }\r\n                </>\r\n            )\r\n        }\r\n     ]\r\n \r\n     useEffect(()=>{\r\n        //  setData(topSalesData);\r\n        getCustomerData(topK);\r\n     },[])\r\n \r\n     const tabList = [\r\n         {key: 'customer', tab: 'Most Frequent Customers'},\r\n     ]\r\n \r\n \r\n     const onNumberChange=(value)=>{\r\n         //更新图标\r\n         setTopK(value);\r\n         if(value>topK){\r\n         getCustomerData(value);}\r\n     }\r\n\r\n     const getCustomerData = (value)=>{\r\n        axios.get(\"http://localhost:8080/airlineStaff/getTopKCustomers\",\r\n        {\r\n            params:{\r\n                K:value,\r\n                airlineName:loginInfo.current?loginInfo.current.airlineName:null\r\n            },\r\n            }).then(function(response){\r\n                if(response.data){\r\n                    originData.current = response.data;\r\n                    const dataMap = processData();\r\n                    message.destroy();\r\n                    message.success(\"Data Loaded!\");\r\n                    setData(dataMap);\r\n                }\r\n        }).catch(function(response){\r\n            setData(topSalesData);\r\n            setTableData(tableSampleData);\r\n            message.destroy();\r\n            message.error(\"Data Loading Failed!\");\r\n        })\r\n     }\r\n\r\n     const processTableData = (email)=>{\r\n         if(originData.current===null){\r\n             return tableSampleData;\r\n         }\r\n        const tableData = originData.current.filter((item)=>item.email===email)[0];\r\n        if(tableData.length==0){\r\n            return []\r\n        }else{\r\n            const takenFlights = tableData.takenFlights;\r\n        const tableDataMap = takenFlights.map((item)=>{\r\n            return ({\r\n                key:[item.flightNum,item.airlineName],\r\n                flight_id:item.flightNum,\r\n                airline:item.airlineName,\r\n                dept_time:item.departureTime,\r\n                arri_time:item.arrivalTime,\r\n                dept:item.sourceAirportName,\r\n                arri:item.destAirportName,\r\n                price:item.price,\r\n                status:[item.status]\r\n            })\r\n        }\r\n        )\r\n        return tableDataMap;\r\n    }\r\n        \r\n     }\r\n\r\n     const processData = (value,past)=>{\r\n        const dataMap = originData.current.map((item)=>{\r\n                return {customer:item.email,tickets:item.ticketsTotal}\r\n            \r\n        }\r\n            )\r\n        return dataMap;\r\n     }\r\n\r\n\r\n    const renderTabExtra = ()=>{\r\n\r\n\r\n      return (\r\n          <Space direction=\"horizontal\" size={10}>\r\n          {/* <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n          <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button> */}\r\n          {/* <RangePicker picker=\"day\" onChange={handleChangeTime}></RangePicker> */}\r\n          <>\r\n          <span style={{marginRight:2}}>Top</span>\r\n            <InputNumber min={1} onChange={onNumberChange} defaultValue={5}></InputNumber>\r\n          <span style={{marginLeft:2}}>Agents</span>\r\n          </>\r\n          <Tooltip color={\"orange\"} placement=\"topLeft\" title=\"Click the bar to check the flights taken\"><QuestionCircleOutlined/></Tooltip>\r\n          </Space>\r\n      )\r\n    }\r\n \r\n \r\n     var config = {\r\n         data: data?data.slice(0,topK):[],\r\n         xField: \"tickets\",\r\n         yField: 'customer',\r\n         legend: { position: 'top-left' },\r\n         barBackground: { style: { fill: 'rgba(0,0,0,0.1)' } },\r\n         interactions: [\r\n           {\r\n             type: 'active-region',\r\n             enable: false,\r\n           },\r\n         ],\r\n         meta:{\r\n             type:{\r\n                 alias: 'Customer Email'\r\n             },\r\n             tickets:{\r\n                 alias: 'Number of Tickets Bought'\r\n             }\r\n         }\r\n        };\r\n       \r\n\r\n\r\n    // 编写图例点击事件\r\n    const handleClick =(event)=>{\r\n        console.log(event);\r\n        const tableDataMap = processTableData(event.data.data.customer);\r\n        // console.log(tableDataMap);\r\n        // setTableData(tableSampleData);\r\n        setTableData(tableDataMap);\r\n        setModalEmail(event.data.data.customer);\r\n        setModalVisibility(true);\r\n\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        // 推出Modal\r\n        setModalVisibility(false);\r\n    }\r\n\r\n\r\n    return (<Card tabList={tabList}\r\n        tabBarExtraContent={renderTabExtra()}\r\n        hoverable={true}>\r\n        \r\n        {!data&&(<Spin size={\"large\"}></Spin>)}\r\n        {data&&(<><Bar \r\n        {...config}\r\n        sort \r\n        onReady={(plot)=>{\r\n            plot.chart.on(\"element:click\",handleClick\r\n                );\r\n            }}\r\n        />\r\n        <Modal\r\n        destroyOnClose\r\n        title={\"Flight Taken with \"+ modalEmail}\r\n        visible={modalVisiblibity}\r\n        onCancel={handleCancel}\r\n        width={900}>\r\n            <Card >\r\n                <Table columns={tableColumns} dataSource={tableData} size={\"middle\"}>\r\n\r\n                </Table>\r\n            </Card>\r\n\r\n        </Modal></>)}\r\n        \r\n    </Card>)\r\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,Select,message} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\nconst {Search} = Input;\r\n\r\nconst {Option} = Select;\r\n\r\nexport default function AddAgents({loginInfo}) {\r\n\r\n    const [email,setEmail] = useState(undefined);\r\n    const [searchResult,setSearchResult] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSearch=()=>{\r\n        axios({\r\n            url:\"\",\r\n            method:\"POST\",\r\n            data:{}\r\n        }).then(function(response){\r\n            if(response.data){\r\n                setSearchResult(response.data);\r\n            }else{\r\n                console.log(\"请求无结果\");\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const handleChange = (value)=>{\r\n        setEmail(value);\r\n        console.log(\"changed\");\r\n    }\r\n\r\n\r\n    const onFinish =(values)=>{\r\n      axios.post(\"http://localhost:8080/airlineStaff/addBookingAgent\",\r\n      qs.stringify({...values,airlineName:loginInfo.current?loginInfo.current.airlineName:\"Spring Airlines\"})).then(function(response){\r\n        if(response.data){\r\n          if(response.data.success===true){\r\n            message.success(\"Addition Succeeded!\")\r\n          }else{\r\n            const responseMapping = response.data;\r\n            if(responseMapping){\r\n              if(responseMapping.emailValid===false){\r\n                form.setFields([\r\n                  {\r\n                      name:\"email\",\r\n                      errors:[ \"BookingAgent Not Found!\"]\r\n                  }\r\n              ])\r\n              }else if(responseMapping.workingValid===false){\r\n                form.setFields([\r\n                  {\r\n                      name:\"email\",\r\n                      errors:[ \"BookingAgent has already been assigned this airline!\"]\r\n                  }\r\n              ])\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    }\r\n\r\n    const options = searchResult.map((item,index)=>(<Option key={index}>{item}</Option>));\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 8,\r\n          },\r\n        },\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n          },\r\n        },\r\n      };\r\n\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n\r\n    return (\r\n        <Card title=\"Add Booking Agents\">\r\n            <Form\r\n            {...formItemLayout}\r\n                form={form}\r\n                name=\"Add Agents\"\r\n                onFinish={onFinish}\r\n                 scrollToFirstError>\r\n                <Form.Item name=\"email\" \r\n                label=\"Agent Email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message:\"Please don't leave blank the agent information!\"\r\n                  },\r\n                  {\r\n                    type:\"email\",\r\n                    message:\"Please input the right format of an email\"\r\n                  },\r\n                  \r\n                  ]}\r\n                hasFeedback>\r\n                    <Input style={{width:'80%'}}/>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item {...tailFormItemLayout}> \r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Add\r\n                </Button>\r\n            </Form.Item>\r\n            </Form>\r\n\r\n        </Card>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,Select,Checkbox,message} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nconst options = [\"Admin\",\"Operator\"];\r\n\r\nconst defaultCheckedList = [\"Admin\"];\r\nexport default function GrantPermission({loginInfo}){\r\n\r\n    const [checkedList, setCheckedList] = React.useState(defaultCheckedList);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    console.log(checkedList);\r\n\r\n\r\n    const onFinish=(values)=>{\r\n      form.setFields([\r\n        {\r\n            name:\"username\",\r\n            errors:[]\r\n        }\r\n      ]);\r\n      form.setFields([\r\n        {\r\n            name:\"permission\",\r\n            errors:[]\r\n        }\r\n      ]);\r\n        //提交请求\r\n        console.log(\"papa\");\r\n        axios(\r\n          {url:\"http://localhost:8080/airlineStaff/grantPermission\",\r\n           method:\"POST\",\r\n           data:{\r\n            userName:values.username,\r\n            airlineName:\"Cathay Pacific\",\r\n            permission:checkedList\r\n          }\r\n        }).then(function(response){\r\n          if(response.data){\r\n            console.log(response.data);\r\n            if(response.data.success===true){\r\n              console.log(\"haha\");\r\n                message.success(\"Success\");\r\n            }else{\r\n              const errorMapping = response.data;\r\n              if(errorMapping.nameValid===false){\r\n                form.setFields([\r\n                  {\r\n                      name:\"username\",\r\n                      errors:[ \"AirlineStaff Not Found!\"]\r\n                  }\r\n              ])\r\n              }else if(errorMapping.permissionValid===false){\r\n                form.setFields([\r\n                  {\r\n                      name:\"permission\",\r\n                      errors:[ \"The airlineStaff already has the permission!\"]\r\n                  }\r\n              ])\r\n              }\r\n            }\r\n\r\n          }\r\n        })\r\n    }\r\n\r\n    const onFinishFailed = ()=>{\r\n        console.log(\"\");\r\n    }\r\n\r\n\r\n    const handleChange = (list)=>{\r\n      setCheckedList(list);\r\n    }\r\n\r\n\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 8,\r\n          },\r\n        },\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n          },\r\n        },\r\n      };\r\n\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n\r\n\r\n    return (<Card title=\"Grant Permission\">\r\n        <Form \r\n        {...formItemLayout}\r\n                form={form}\r\n                name=\"Add Agents\"\r\n                onFinish={onFinish}\r\n                 scrollToFirstError>\r\n        <Form.Item name=\"username\" label=\"Staff UserName\"\r\n          rules={[\r\n            {\r\n              required:true,\r\n              message:\"Please input the username!\"\r\n            }\r\n          ]}>\r\n            <Input/>\r\n\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"permission\" label=\"Permission Type\">\r\n        <CheckboxGroup options={options} value={defaultCheckedList} onChange={handleChange} />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}> \r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Grant Permission\r\n                </Button>\r\n            </Form.Item>\r\n\r\n\r\n        </Form>\r\n\r\n\r\n\r\n\r\n    </Card>)\r\n}","import React, {useEffect, useState,useRef} from \"react\"\nimport {Layout, Menu, Breadcrumb,Dropdown,Avatar,Button,Space,Modal,List,message} from \"antd\";\nimport {CarryOutOutlined, SendOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {useNavigate} from \"react-router-dom\";\nimport CustomerSidebar from \"../component/customer/CustomerSidebar\";\nimport ViewFlights from \"../component/flight/ViewFlights\";\nimport SearchFlights from \"../component/flight/SearchFlights\";\nimport PurchaseTicket from \"../component/customer/PurchaseTicket\";\nimport SpendingChart from \"../component/customer/SpendingChart\";\nimport AgentSidebar from \"../component/agent/AgentSidebar\";\nimport TopCustomerChart from \"../component/agent/TopCustomerChart\";\nimport CustomerOrders from \"../component/agent/CustomerOrders\";\nimport CommissionStatistics from \"../component/agent/CommissionStatistics\";\nimport StaffSidebar from \"../component/staff/StaffSidebar\";\nimport EditAirport from \"../component/staff/EditAirport\";\nimport EditAirplane from \"../component/staff/EditAirplane\";\nimport GlobalSidebar from \"../component/global/GlobalSidebar\";\nimport FlightCRUD from \"../component/staff/FlightCRUD\";\nimport ViewAgents from \"../component/staff/ViewAgents\"\nimport ViewReports from \"../component/staff/ViewReports\";\nimport TopDestinations from \"../component/staff/TopDestinations\";\nimport RevenueComparison from \"../component/staff/RevenueComparsion\";\nimport ViewFrequent from \"../component/staff/ViewFrequent\";\nimport AddAgents from \"../component/staff/AddAgents\";\nimport GrantPermission from \"../component/staff/GrantPermission\";\nimport axios from \"axios\";\nimport LoginCard from \"../component/login/LoginCard\";\nimport RegisterCard from \"../component/login/RegisterCard\";\nimport cookie from 'react-cookies'\nimport Cookies from \"js-cookie\"\n\nconst {Header, Content, Sider, Footer} = Layout;\nconst {SubMenu} = Menu;\n\n// 这里是为了能够成功设置上Cookies\naxios.defaults.withCredentials = true;\n\nexport default function UserPage({initializingTab}) {\n    let navigate = useNavigate();\n\n    const [navigateBar, setNavigateBar] = useState(\"customer\");\n    const [sidebar, setSidebar] = useState(\"\");\n    const [collapsed,setCollapsed] =useState(false);\n    const [flightsResult, setFlightResult] = useState(null);\n    const [actionType,setActionType] = useState(\"\");\n    const [loginModalVisible,setLoginModalVisible] = useState(false);\n    const [infoModalVisible,setInfoModalVisible] = useState(false);\n    const [registerModalVisible,setRegisterModalVisible] = useState(false);\n    const [initializeType,setInitializeType] = useState(\"customer\");\n    const [registerLoginValue,setRegisterLoginValue] = useState(undefined);\n    const defaultData = useRef(null);\n    // 在全局记录用户的登录信息(简单实现)\n    const loginInfo = useRef(null);\n\n    useEffect(()=>{\n        setNavigateBar(initializingTab)\n        axios({\n            url:\"http://localhost:8080/index/findAllFlights\",\n            method:\"GET\",\n        }).then(function(response){\n            if(response.data){\n                // console.log(\"haha\");\n                defaultData.current = response.data;\n                // console.log(defaultData.current);\n                setFlightResult(defaultData.current);\n            }else{\n                console.log(\"No Results\");\n            }\n        }).catch(function(response){\n            console.log(\"haha\");\n        })\n    },[\"default\"])\n\n    // 如果用户尚未登录\n    useEffect(()=>{\n        \n        axios({\n            url:\"http://localhost:8080/login/token\",\n            method:\"POST\",\n        }).then(function(response){\n            if(response.data){\n\n                if(response.data.status==true){\n                    const userType = response.data.userType;\n                    if(userType===\"staff\"){\n                        const name = response.data.airlineStaff.username;\n                        const infoMap = {alias:name,...response.data.airlineStaff}\n                         loginInfo.current = infoMap;\n                         message.success(\"Welcome Back, \"+name);\n                    }else if(userType===\"customer\"){\n                        const name = response.data.customer.name;\n                        const infoMap = {alias:name,...response.data.customer}\n                         loginInfo.current = infoMap;\n                         message.success(\"Welcome Back, \"+name);\n                    }else if(userType===\"agent\"){\n                        const email = response.data.bookingAgent.email;\n                         const infoMap = {alias:email,...response.data.bookingAgent}\n                         loginInfo.current = infoMap;\n                         message.success(\"Welcome Back, \"+email);\n                    }\n\n                    setNavigateBar(userType);\n                }\n            }\n            else{\n            //     // setNavigateBar(\"global\");\n               \n                message.destroy();\n                message.error(\"您尚未登录\");\n                setNavigateBar(\"global\");\n                navigate(\"/global\",{replace:true})\n            }\n            \n        }).catch(function(response){\n            message.destroy();\n           \n            message.error(\"Backend Server not started!\");\n        })\n    },[1])\n  \n\n    console.log(loginInfo);\n\n    const handleNavigateBar = (page) => {\n        setNavigateBar(page.key);\n        navigate(\"/\" + page.key, {replace: true});\n    }\n\n    const sidebarList = {\n        customer: <CustomerSidebar loginInfo={loginInfo} updateSelection={setSidebar} setActionType={setActionType} defaultData={defaultData} setFlightResult={setFlightResult} />,\n        agent: <AgentSidebar loginInfo={loginInfo} updateSelection={setSidebar} setActionType={setActionType} defaultData={defaultData} setFlightResult={setFlightResult}/>,\n        staff: <StaffSidebar loginInfo={loginInfo} updateSelection={setSidebar} setActionType={setActionType}  setFlightResult={setFlightResult}/>,\n        global: <GlobalSidebar loginInfo={loginInfo} updateSelection={setSidebar} setActionType={setActionType}  setFlightResult={setFlightResult}/>,\n    }\n\n\n    const userContent = {\n        \"Flight CRUD\":<FlightCRUD loginInfo={loginInfo}/>,\n        \"My flights\": <SearchFlights setNavigateBar={setNavigateBar} loginInfo={loginInfo} userType={initializingTab} actionTab={\"view\"} \n                                    flightsResult={flightsResult} \n                                    setFlightResult={setFlightResult} \n                                    actionType={actionType}/>,\n        \"Search flights\": <SearchFlights setNavigateBar={setNavigateBar} userType={initializingTab} \n                                        loginInfo={loginInfo} \n                                        actionTab={\"search\"} \n                                        flightsResult={flightsResult} \n                                        setFlightResult={setFlightResult} \n                                        actionType={actionType}/>,\n        \"Purchase tickets\": <SearchFlights setNavigateBar={setNavigateBar}\n                                            userType={initializingTab} \n                                           loginInfo={loginInfo} \n                                           actionTab={\"purchase\"} \n                                           flightsResult={flightsResult} \n                                           setFlightResult={setFlightResult} \n                                           actionType={actionType}/>,\n        \"Track spending\": <SpendingChart loginInfo={loginInfo}/>,\n        \"Top customers\": <TopCustomerChart loginInfo={loginInfo}/>,\n        \"Create order\": <SearchFlights setNavigateBar={setNavigateBar}\n                                       userType={initializingTab}\n                                       loginInfo={loginInfo}  \n                                       actionTab={\"purchase\"} \n                                       flightsResult={flightsResult}\n                                       setFlightResult={setFlightResult}\n                                       actionType={actionType}/>,\n        \"My customer orders\": <SearchFlights setNavigateBar={setNavigateBar}\n                                            userType={initializingTab} \n                                            loginInfo={loginInfo} \n                                            actionTab={\"search\"} \n                                            flightsResult={flightsResult} \n                                            setFlightResult={setFlightResult} \n                                            actionType={actionType}/>,\n        \"Commission statistics\": <CommissionStatistics loginInfo={loginInfo}/>,\n        \"Add airport\": <EditAirport loginInfo={loginInfo}/>,\n        \"Add airplane\": <EditAirplane loginInfo={loginInfo}/>,\n        \"Add booking agent\":<AddAgents loginInfo={loginInfo}/>,\n        \"View Agents\":<ViewAgents loginInfo={loginInfo} />,\n        \"View Reports\":<ViewReports setNavigateBar={setNavigateBar} loginInfo={loginInfo}/>,\n        \"Top destinations\":<TopDestinations/>,\n        \"Revenue Comparison\":<RevenueComparison loginInfo={loginInfo}/>,\n        \"Frequent customers\":<ViewFrequent loginInfo={loginInfo}/>,\n        \"Grant permission\":<GrantPermission loginInfo={loginInfo}/>\n    }\n\n    const menu = (<Menu>\n        {!loginInfo.current&&(\n        <Menu.Item icon={<SettingOutlined />}>\n          <a onClick={()=>{setLoginModalVisible(true);}}>Log In</a>\n          \n        </Menu.Item>)}\n        {loginInfo.current&&(<Menu.Item icon={<UserOutlined/>}>\n        <a onClick={()=>{setInfoModalVisible(true)}}>Account Information</a>\n        </Menu.Item>)}\n      </Menu>);\n\n    const onCancelLogin = ()=>{\n        setLoginModalVisible(false);\n    }\n\n    const onCancelRegister =()=>{\n        setRegisterModalVisible(false);\n    }\n\n    const onCancelInfo = ()=>{\n        setInfoModalVisible(false);\n    }\n\n\n    const customerList=[\n        {\n            title:\"Email\",\n            description:loginInfo.current?loginInfo.current.email:\"\"\n        },\n        {\n            title:\"Name\",\n            description:loginInfo.current?loginInfo.current.name:\"\"\n        }\n    ]\n\n    const AgentList=[\n        {\n            title:\"Email\",\n            description:loginInfo.current?loginInfo.current.email:\"\"\n        },\n        {\n            title:\"Your Id\",\n            description:loginInfo.current?loginInfo.current.bookingAgentId:\"\"\n        }\n    ]\n\n\n    const staffList=[\n        {\n            title:\"User Name\",\n            description:loginInfo.current?loginInfo.current.username:\"\"\n        },\n        {\n            title:\"First Name\",\n            description:loginInfo.current?loginInfo.current.firstName:\"\",\n        },\n        {\n            title:\"Last Name\",\n            description:loginInfo.current?loginInfo.current.lastName:\"\",\n        },\n        {\n            title:\"Permission Level\",\n            description:loginInfo.current?loginInfo.current.permissionDescription?loginInfo.current.permissionDescription.join(\", \"):\"\":\"\"\n        },\n        {\n            title:\"Airline\",\n            description:loginInfo.current?loginInfo.current.airlineName:\"\"\n        }\n    ]\n\n    const sampleInfoData = [\n        {\n            title:\"User Name\",\n            description:\"HaHaHa\"\n        },\n        {\n            title:\"Airline\",\n            description:\"Spring Airlines\"\n        },\n        {\n            title:\"Permission Level\",\n            description: [\"Admin\",\"Operator\"].join(\", \")\n        },\n\n    ]\n\n    return (\n\n        <Layout>\n            <Modal \n                destroyOnClose\n                title=\"Account Information\"\n                visible={infoModalVisible}\n                onCancel={() => {onCancelInfo()}}\n                footer={[]}>\n                    <List \n                    itemtlayout = {\"horizontal\"}\n                    dataSource={loginInfo.current?navigateBar===\"customer\"?customerList:navigateBar===\"staff\"?staffList:AgentList:[{}]}\n                    renderItem={item=>\n                    (<List.Item\n                        >\n                        <List.Item.Meta\n                        title={item.title}\n                        description={item.description}>\n\n                        </List.Item.Meta>\n                    </List.Item>)}>\n                    </List>\n\n                </Modal>\n            {<Modal \n                destroyOnClose\n                title=\"Login\"\n                visible={loginModalVisible}\n                onCancel={() => {onCancelLogin()}}\n                footer={[]}\n                >\n                <LoginCard loginInfo={loginInfo} registerLoginValue={registerLoginValue} setRegisterLoginValue={setRegisterLoginValue} setInitializeType={setInitializeType}  setLoginModalVisible={setLoginModalVisible} setNavigateBar={setNavigateBar} setRegisterModalVisible={setRegisterModalVisible}/>\n            </Modal>}\n            {<Modal \n                destroyOnClose\n                title=\"Login\"\n                visible={registerModalVisible}\n                onCancel={() => {onCancelRegister()}}\n                footer={[]}\n                >\n                <RegisterCard initializeType={initializeType} setRegisterLoginValue={setRegisterLoginValue}  setNavigateBar={setNavigateBar} setRegisterModalVisible={setRegisterModalVisible} />\n            </Modal>}\n            <Header className={\"header\"} style={{position: 'fixed', zIndex: 2, width: '100%'}}>\n                \n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={[initializingTab]}\n                    selectedKeys={[navigateBar]}\n                    // onClick={handleNavigateBar}\n                    style={{marginLeft:\"100px\"}}\n                >\n                    <Menu.Item key=\"customer\">Customer</Menu.Item>\n                    <Menu.Item key=\"agent\">Agent</Menu.Item>\n                    <Menu.Item key=\"staff\">Staff</Menu.Item>\n                    <Menu.Item key=\"global\">Global</Menu.Item>\n                    \n                </Menu>\n                \n            </Header>\n            <Dropdown overlay={menu}>\n                    {\n                    loginInfo.current?<Avatar style={{marginLeft:\"1200px\",zIndex:3,position: 'fixed',top:\"10px\", color: '#f56a00', backgroundColor: '#fde3cf' }} size=\"large\"  \n                    // src={\"https://joeschmoe.io/api/v1/\"+loginInfo.current?loginInfo.current.alias:null} \n                    >\n                    {loginInfo.current?loginInfo.current.alias[0].toUpperCase():null}</Avatar>:\n                    <Avatar style={{marginLeft:\"1200px\",zIndex:3,position: 'fixed',top:\"10px\"}} size=\"large\" icon={<UserOutlined />}></Avatar>}\n                </Dropdown>\n            <Layout style={{minHeight: '91vh', marginTop: 64}}>\n                <Sider width={250} height={100} className=\"site-layout-background\" collapsible collapsed={collapsed} onCollapse={setCollapsed}>\n                    {sidebarList[navigateBar]}\n                </Sider>\n                <Layout style={{padding: '0 24px 24px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>{navigateBar.charAt(0).toUpperCase() + navigateBar.slice(1)}</Breadcrumb.Item>\n                        <Breadcrumb.Item>{sidebar}</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{padding: 24, margin: 0}}\n                    >\n                        {userContent[sidebar]}\n                    </Content>\n                    <Layout style={{textAlign: 'center', marginBottom: 0}}>\n                <Footer>\n                    2021 Global Airline All rights reserved.\n                </Footer>\n            </Layout>\n                </Layout>\n               \n\n            </Layout>\n           \n\n        </Layout>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomePage from \"./homepage\";\nimport LoginPage from \"./page/LoginPage\";\nimport RegisterPage from \"./page/RegisterPage\";\nimport reportWebVitals from './reportWebVitals';\nimport \"antd/dist/antd.css\"\nimport {\n    BrowserRouter as Router,\n    Route,\n} from \"react-router-dom\";\nimport {Routes} from \"react-router-dom\";\nimport UserPage from \"./page/UserPage\";\n\n//Configure the Routers for Conditional Rendering\nfunction App() {\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<HomePage />} />\n                {/* <Route path=\"/login\" element={<LoginPage />} /> */}\n                {/* <Route path=\"/registercustomer\" element={<RegisterPage initializeType='customer' />} />\n                <Route path=\"/registerstaff\" element={<RegisterPage initializeType='airlineStaff'/>}/>\n                <Route path=\"/registeragent\" element={<RegisterPage initializeType='bookingAgent'/>}/> */}\n                <Route path=\"/customer\" element={<UserPage initializingTab='customer' />} />\n                <Route path=\"/agent\" element={<UserPage initializingTab='agent'/> }  />\n                <Route path=\"/staff\" element={<UserPage initializingTab='staff'/> } />\n                <Route path=\"/global\" element={<UserPage initializingTab='global'/> } />\n            </Routes>\n        </Router>\n    )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}