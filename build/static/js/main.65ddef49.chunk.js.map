{"version":3,"sources":["homepage.js","component/login/LoginCard.js","lib/dateFormat.js","component/login/RegisterCard.js","reportWebVitals.js","component/login/LoginOut.js","component/customer/CustomerSidebar.js","lib/statusTag.js","lib/flightData.js","component/flight/PurchaseModals/CustomerModal.js","component/flight/PurchaseModals/AgentModal.js","component/flight/SearchFlights.js","component/customer/PurchaseTicket.js","component/customer/SpendingChart.js","component/agent/AgentSidebar.js","component/agent/TopCustomerChart.js","component/agent/CommissionStatistics.js","component/staff/StaffSidebar.js","component/staff/EditAirport.js","component/staff/EditAirplane.js","component/global/GlobalSidebar.js","component/staff/CRUDElements/CreateForm.js","component/staff/CRUDElements/UpdateForm.js","component/staff/CRUDElements/DetailsForm.js","component/staff/FlightCRUD.js","component/staff/ViewAgents.js","component/staff/ViewReports.js","component/staff/TopDestinations.js","component/staff/RevenueComparsion.js","component/staff/ViewFrequent.js","component/staff/AddAgents.js","component/staff/GrantPermission.js","page/UserPage.js","index.js"],"names":["axios","defaults","withCredentials","Title","Typography","HomePage","useNavigate","style","textAlign","width","position","top","type","shape","size","to","ArrowRightOutlined","LoginCard","props","loginInfo","setInitializeType","setRegisterModalVisible","setNavigateBar","registerLoginValue","setRegisterLoginValue","setLoginModalVisible","navigate","Form","useForm","form","useState","activeTab","setActiveTab","usernameMessage","customer","agent","staff","display","marginLeft","marginRight","tabList","key","tab","onTabChange","resetFields","name","className","onFinish","values","url","method","data","userType","then","response","response_msg","status","infoMap","alias","current","airlineStaff","username","email","bookingAgent","replace","statusCode","setFields","errors","catch","message","error","onFinishedFailed","alert","Item","rules","required","prefix","UserOutlined","placeholder","dependencies","Password","LockOutlined","htmlType","onClick","timeout","dateFormat","RegisterCard","initializeType","Option","Select","prefixSelector","noStyle","value","autoCompleteResult","map","website","label","title","labelCol","xs","span","sm","wrapperCol","success","initialValues","residence","scrollToFirstError","validator","inititalizeType","callback","params","valid","validateTrigger","hasFeedback","rule","min","max","pattern","getFieldValue","_","Promise","reject","Error","resolve","tooltip","whitespace","format","addonBefore","TextArea","showCount","maxLength","offset","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","countDown","secondsToGo","modal","Modal","content","timer","setInterval","update","setTimeout","clearInterval","destroy","SubMenu","Menu","CustomerSidebar","updateSelection","defaultData","setActionType","setDeptDate","setFlightResult","tagList","actionTypeMapping","useEffect","mode","defaultSelectedKeys","defaultOpenKeys","item","cookie","remove","undefined","height","borderRight","icon","CarryOutOutlined","SettingOutlined","statusColor","formatterTime","val","moment","globalInterfaceColumns","dataIndex","render","tags","color","toUpperCase","CustomerModal","customerModalVis","setCustomerModalVis","rowRecord","setRowRecord","showStatus","setStatus","purchaseInfo","setPurchaseInfo","FormItem","description","bodyStyle","padding","destroyOnClose","visible","footer","console","log","airlineName","flightNum","bookingAgentId","onCancel","airline","flight_id","disabled","itemtlayout","dataSource","renderItem","Meta","AgentModal","agentModalVis","setAgentModalVis","checkEmail","Input","Search","FlightsResultTable","actionType","columns","DatePicker","RangePicker","text","record","full","dataMap","dept","sourceAirportName","arri","destAirportName","dept_time","departureTime","arri_time","arrivalTime","price","remainingSeats","ticketId","ticket_id","purchaseDate","customerEmail","filter","SearchFlights","deptDate","flightsResult","actionTab","deptAirport","setDeptAirport","arriAirport","setArriAirport","searchResult","setSearchResult","searchAirport","options","handleSearch","handleChange","callBack","Group","showSearch","defaultActiveFirstOption","showArrow","filterOption","onSearch","onChange","notFoundContent","allowClear","SwapOutlined","tmp","paddingLeft","paddingRight","showTime","defaultValue","sendObject","qs","stringify","sourceAirport","destAirport","startDate","endDate","header","SpendingChart","spendingData","setSpendingData","subtract","setStart","setEnd","interval","start","end","length","setStartDate","setEndDate","chartConfig","appendPadding","angleField","colorField","radius","meta","formatter","v","toString","interactions","AgentSidebar","TopCustomerChart","setData","topK","setTopK","searchTickets","formattedData","ticketsFromAgent","totalCommission","tabBarExtraContent","xField","yField","seriesField","columnWidthRatio","fill","opacity","xAxis","autoHide","autoRotate","slice","uid","sum","CommissionStatistics","commissionData","setCommissionData","avgcommissionData","setAvgCommissionData","totalTickets","setTotalTickets","loadingHolder","Boolean","loadingHolderForAvg","loadingHolderForTickets","Date","commissionFees","averageCommissionFees","ticketBooked","direction","dateString","loading","precision","StaffSidebar","SendOutlined","permissionDescription","includes","FundViewOutlined","EditAirport","marginTop","onFinishFailed","tableData","setTableData","getAirplanes","initialvalue","airplaneId","seats","align","id","GlobalSidebar","countDownAnony","formLayout","CreateForm","modalVisible","handleCreateModalVisible","onSubmit","handleCreate","formVals","setFormVals","disabledDate","endOf","optionsData","handleNext","a","validateFields","fieldsValue","UpdateForm","updateModalVisible","handleUpdateModalVisible","handleUpdate","optionDiaplayMapping","optionMapping","DetailsTable","detailModalVisible","handleDetailModalVisible","passengers","buildingNumber","street","city","livingState","phoneNumber","passportExpiration","passportCountry","passportNumber","birthday","scroll","x","textWrap","ellipsis","fixed","FlightCRUD","createModalVisible","selectedRows","setSelectedRows","stepFormValues","setStepFormValues","radioValue","actionRef","useRef","defaultRef","fetchFlightData","query","fetchFilteredFlightData","handleDelete","airline_name","reload","flight_info","cancel","e","valueType","hideInSearch","EditOutlined","fontSize","onConfirm","confirm","okText","cancelText","danger","DeleteOutlined","getData","sort","pageIndex","records","total","request","rowKey","index","rowSelection","onchange","toolBarRender","PlusOutlined","FooterToolbar","extra","fontWeight","reloadAndRest","Object","keys","ViewAgents","past","setPast","topSalesData","sales","handleSearchSales","topCommissionData","commission","get","K","totalSales","handleSearchCommission","config","legend","barBackground","enable","addonAfter","hoverable","onReady","plot","chart","on","evt","ViewReports","setTotalSales","originalData","reduce","getSum","sampleData","num","renderLastYear","renderLastMonth","renderRange","picker","TopDestinations","getDestinationData","renderLast3Month","RevenueComparison","getRevenueData","labelHeight","ViewFrequent","originData","modalVisiblibity","setModalVisibility","modalEmail","setModalEmail","tickets","tableSampleData","tableColumns","getCustomerData","onNumberChange","processData","ticketsTotal","handleClick","event","tableDataMap","takenFlights","processTableData","placement","QuestionCircleOutlined","AddAgents","post","responseMapping","emailValid","workingValid","CheckboxGroup","Checkbox","defaultCheckedList","GrantPermission","React","checkedList","setCheckedList","userName","permission","errorMapping","nameValid","permissionValid","list","Header","Layout","Content","Sider","Footer","UserPage","initializingTab","navigateBar","sidebar","setSidebar","collapsed","setCollapsed","loginModalVisible","infoModalVisible","setInfoModalVisible","registerModalVisible","sidebarList","global","userContent","menu","customerList","AgentList","staffList","firstName","lastName","join","zIndex","theme","selectedKeys","overlay","backgroundColor","minHeight","collapsible","onCollapse","margin","charAt","marginBottom","App","path","element","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.65ddef49.chunk.js","sourcesContent":["import {Button, Typography} from \"antd\";\nimport {ArrowRightOutlined} from \"@ant-design/icons\";\nimport {Link} from \"react-router-dom\"\nimport RcQueueAnim from \"rc-queue-anim\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\n\naxios.defaults.withCredentials = true;\n\n\nconst {Title} = Typography;\n\n\n\n\nexport default function HomePage() {\n\n    let navigate = useNavigate();\n\n\n    const handleClickDefault =()=>{\n        console.log(\"haha\");\n        const shit = cookie.load(\"JSESSIONID\");\n        console.log(shit);\n    }\n\n    // const handleClick = ()=>{\n\n    //     axios({\n    //         url:\"http://localhost:8080/login/token\",\n    //         method:\"POST\",\n    //     }).then(function(response){\n    //         if(response.data){\n    //             console.log(response.data);\n    //             const statusMessage = response.data;\n    //             let info = null;\n    //             if(response.data.status==true){\n    //                 const userType = response.data.userType;\n    //                 if(userType===\"staff\"){\n    //                      info = response.data.airlineStaff;\n                        \n    //                 }else if(userType===\"customer\"){\n    //                      info = response.data.customer;\n    //                 }else if(userType===\"agent\"){\n    //                      info = response.data.bookingAgent;\n    //                 }\n    //                 navigate(\"/\"+userType,{replace:true});\n    //             }\n    //             console.log(info);\n    //         }\n    //     })\n\n        \n    // }\n\n    return (\n        <div style={{textAlign: 'center', width: '100%', position: 'absolute', top: '40vh'}}>\n            <RcQueueAnim type=\"left\" >\n                <Title key=\"ele1\" style={{}}>A Light Weight Airline System</Title>\n                <Button key=\"ele2\" type=\"primary\" shape=\"circle\" size=\"large\"> \n                    <Link to=\"/global\" > \n                        <ArrowRightOutlined />\n                     </Link> \n                </Button>\n            </RcQueueAnim>\n        </div>\n    )\n}\n\n","import {Card, Form, Input, Button,message} from 'antd';\nimport React, {useState} from \"react\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.defaults.timeout = 1000;\naxios.defaults.withCredentials = true;\n\nexport default function LoginCard(props) {\n\n    const {loginInfo,setInitializeType,setRegisterModalVisible,registerLoginValue,setRegisterLoginValue,setNavigateBar,setLoginModalVisible} = props;\n    let navigate = useNavigate();\n\n    const [form] = Form.useForm();\n\n    const [activeTab, setActiveTab] = useState('customer');\n\n    const onTabChange = (key) => {\n        setActiveTab(key);\n        form.resetFields();\n    }\n\n\n    //字段验证成功，准备做登录校验\n    const onFinish = (values) => {\n        // loginRequest(values.username, md5(values.password), activeTab)\n        \n        axios({\n            url:\"http://localhost:8080/login\",\n            method:\"post\",\n            data:{userType:activeTab,...values}\n        }).then(function(response){\n            const response_msg = response.data;\n            if(response_msg.status===true){\n                //登录成功,后台session中有用户信息,用于免登录\n                //前端保存用户的权限和基本信息\n                // 从cookie中获取用户信息\n                if(activeTab===\"customer\"){\n                    const name = response_msg.customer.name;\n                    const infoMap = {alias:name,...response_msg.customer}\n                    loginInfo.current = infoMap;\n                }else if(activeTab===\"staff\"){\n                    const name = response_msg.airlineStaff.username;\n                    const infoMap = {alias:name,...response_msg.airlineStaff}\n                    loginInfo.current = infoMap;\n                }else if(activeTab===\"agent\"){\n                    const email = response_msg.bookingAgent.email;\n                    const infoMap = {alias:email,...response_msg.bookingAgent}\n                    loginInfo.current = infoMap;\n                }\n                setNavigateBar(activeTab);\n                setLoginModalVisible(false);\n                navigate(\"/\"+activeTab,{replace:true});\n                \n            }else{\n                if(response_msg.statusCode===1){\n                    form.setFields([\n                        {\n                            name:activeTab===\"customer\"?\"email\":\"username\",\n                            errors:[ \"User Not Found! Please Register First!\"]\n                        }\n                    ])\n                }else if(response_msg.statusCode===2){\n                    form.setFields([\n                        {\n                            name:\"password\",\n                            errors:[\"Password Error!\"]\n                        }\n                    ])\n                }else if(response_msg.statusCode===3){\n                    form.setFields([\n                        {\n                            name:\"bookingAgentId\",\n                            errors:[\"BookingId Error!\"]\n                        }\n                    ])\n                }\n            }\n            \n        }).catch(function(response){\n            message.error(\"Server response time out!\");\n        })\n        // eslint-disable-next-line no-restricted-globals\n        // navigate(\"/\" + activeTab, {replace: true})\n    }\n\n    //说的是字段的值验证失败\n    const onFinishFailed=()=>{\n        alert(\"字段有误\");\n    }\n\n\n\n    const tabList = [\n        {key: 'customer', tab: 'Customer'},\n        {key: 'agent', tab: 'Booking Agent'},\n        {key: 'staff', tab: 'Airline Staff'}\n    ]\n\n    const usernameMessage = {\n        customer: \"E-mail\",\n        agent: \"E-mail\",\n        staff: \"Username\"\n    }\n\n    return (\n        <Card\n            style={{width: '100%', display: 'block', marginLeft: 'auto', marginRight: 'auto'}}\n            tabList={tabList}\n            activeTab={activeTab}\n            // tabBarExtraContent={<a href=\"/\">Back</a>}\n            onTabChange={onTabChange}\n        >\n            <Form\n                form={form}\n                name=\"login\"\n                className=\"login-form\"\n                onFinish={onFinish}\n                // initialValues={registerLoginValue}\n                onFinishedFailed={onFinishFailed}\n            >\n\n            {\n                activeTab===\"staff\"&&(<Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your \" + usernameMessage[activeTab]\n                         },\n                         ]}\n                         >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={usernameMessage[activeTab]} />\n                </Form.Item>)}\n\n                {\n                activeTab!=\"staff\"&&(<Form.Item\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your email\"\n                         },\n                         { \n                             type:\"email\",\n                             message:\"This is not a valid email type\"\n                         }\n                         ]}\n                         >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={\"E-mail\"} />\n                </Form.Item>)}\n            \n                \n                <Form.Item\n                    name=\"password\"\n                    rules={[{required: true, message: \"Please input your password\"}]}\n                    dependencies={['password']}\n                    >\n                    <Input.Password\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\" />\n                </Form.Item>\n                {activeTab===\"agent\"&&(\n                <Form.Item\n                    name=\"agentId\"\n                    rules={[{required: true, message: \"Please input your booking agent Id\"}]}>\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={\"Agent Id\"} />\n                </Form.Item>)}\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Log in</Button>\n                    <Button type=\"primary\" className=\"register-form-button\" style={{marginLeft:\"270px\"}} onClick={()=>{\n                        // navigate(\"/register\"+activeTab)\n                        setRegisterModalVisible(true);\n                        setInitializeType(activeTab);\n                    }}>Register</Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    )\n}","export const dateFormat = \"YYYY-MM-DD\";","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {dateFormat} from \"../../lib/dateFormat\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport qs from \"qs\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Cascader,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Select,\r\n  Button,\r\n  AutoComplete,\r\n  DatePicker,\r\n  message\r\n} from 'antd';\r\n\r\naxios.defaults.timeout = 2000;\r\n\r\nexport default function RegisterCard({initializeType,setRegisterModalVisible,setRegisterLoginValue,setNavigateBar}){\r\n    const { Option } = Select;\r\n    const navigate = useNavigate();\r\n    const residences = [\r\n      {\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        children: [\r\n          {\r\n            value: 'hangzhou',\r\n            label: 'Hangzhou',\r\n            children: [\r\n              {\r\n                value: 'xihu',\r\n                label: 'West Lake',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        children: [\r\n          {\r\n            value: 'nanjing',\r\n            label: 'Nanjing',\r\n            children: [\r\n              {\r\n                value: 'zhonghuamen',\r\n                label: 'Zhong Hua Men',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {\r\n          span: 24,\r\n        },\r\n        sm: {\r\n          span: 8,\r\n        },\r\n      },\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n        },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    \r\n      const [form] = Form.useForm();\r\n\r\n      const [airlineList,setAirlineList] = useState([]);\r\n    \r\n      const onFinish = (values) => {\r\n        axios({\r\n          method:'POST',\r\n          url:initializeType===\"customer\"?'http://localhost:8080/register/registerCustomer'\r\n          :initializeType===\"staff\"?'http://localhost:8080/register/registerAirlineStaff':\r\n          'http://localhost:8080/register/registerBookingAgent',\r\n          data:values\r\n        }).then(function(response){\r\n            if(response.data===\"success\"){\r\n              message.success(\"Register Completed!\");\r\n              // setRegisterLoginValue(values);\r\n              setNavigateBar(\"global\");\r\n              setRegisterModalVisible(false);\r\n              navigate(\"/global\",{replace:true});\r\n            }\r\n        })\r\n      };\r\n    \r\n      const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"86\">+86</Option>\r\n            <Option value=\"87\">+87</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n      const suffixSelector = (\r\n        <Form.Item name=\"suffix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"USD\">$</Option>\r\n            <Option value=\"CNY\">¥</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n      const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n    \r\n      const onWebsiteChange = (value) => {\r\n        if (!value) {\r\n          setAutoCompleteResult([]);\r\n        } else {\r\n          setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n        }\r\n      };\r\n    \r\n      const websiteOptions = autoCompleteResult.map((website) => ({\r\n        label: website,\r\n        value: website,\r\n      }));\r\n\r\n      const checkUserName = (rule,value,callback)=>{\r\n            axios({\r\n                method:'GET',\r\n                url:'http://localhost:8080/register/validateAirlineStaff',\r\n                params:{\"username\":value}\r\n            }).then(function(response){\r\n                if(response.data.valid===false){\r\n                    callback(\"Staff already registered!\");\r\n                }else{\r\n                    callback();\r\n                }\r\n            }).catch(function(error){\r\n              message.error(\"Back end server not started!\");\r\n            })\r\n      }\r\n\r\n      const checkEmail = (inititalizeType,value,callback)=>{\r\n        axios({\r\n            method:'GET',\r\n            url:(initializeType===\"agent\")?'http://localhost:8080/register/validateBookingAgent':\r\n            \"http://localhost:8080/register/validateCustomer\",\r\n            params:{\"email\":value}\r\n        }).then(function(response){\r\n            if(response.data.valid===false){\r\n                if(initializeType===\"agent\"){\r\n                callback(\"Agent already registered!\");}\r\n                else{\r\n                    callback(\"Customer already registered!\")\r\n                }\r\n            }else{\r\n                callback();\r\n            }\r\n        }).catch(function(error){\r\n          message.error(\"Back end server not started!\");\r\n        })\r\n      }\r\n\r\n      const getAirlineList = ()=>{\r\n        axios({\r\n          method:'GET',\r\n          url:\"http://localhost:8080/register/getAirlineList\"\r\n      }).then(function(response){\r\n          setAirlineList(response.data);\r\n          console.log(\"data injection completed\")\r\n      }).catch(function(error){\r\n        message.error(\"Back end server not started!\");\r\n      })\r\n      }\r\n\r\n\r\n      return (\r\n          <Card  title=\"Please input your personal information to register\">\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name=\"register\"\r\n          onFinish={onFinish}\r\n          initialValues={{\r\n            residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n            prefix: '86',\r\n          }}\r\n          scrollToFirstError\r\n        > {initializeType!==\"staff\"&&(\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n              {\r\n                  validator:checkEmail\r\n              },\r\n              \r\n            ]}\r\n            validateTrigger='onBlur'\r\n            hasFeedback\r\n          >\r\n            <Input style={{width:'80%'}}/>\r\n          </Form.Item>)\r\n        }\r\n\r\n        { initializeType===\"staff\"&&(\r\n          <Form.Item\r\n          name= \"username\"\r\n          label= \"Username\"\r\n          validateTrigger='onBlur'\r\n          hasFeedback\r\n          rules={\r\n              [{\r\n                  required :true,\r\n                  message: 'Please input your username',\r\n              },\r\n              {\r\n                  validator:checkUserName\r\n              }\r\n              ]\r\n          }>\r\n            <Input style={{width:'80%'}}></Input>\r\n          </Form.Item>\r\n         ) }\r\n\r\n         { initializeType===\"customer\"&&(\r\n          <Form.Item\r\n          name= \"name\"\r\n          label= \"Name\"\r\n          rules={\r\n              [{\r\n                  required :true,\r\n                  message: 'Please input your name',\r\n              },\r\n              ]\r\n          }\r\n          hasFeedback>\r\n            <Input style={{width:'80%'}}></Input>\r\n          </Form.Item>\r\n         ) }\r\n    \r\n          <Form.Item\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!'\r\n                },\r\n                {\r\n                  min:6,\r\n                  message: \"The length of the password cannot be less than 6 characters!\"\r\n                },\r\n                {\r\n                max:20,\r\n                message: \"The length of the password cannot be more than 20 characters!\"},\r\n                {\r\n                pattern:/^[a-zA-Z]\\w+/,\r\n                message:'The password must start with alphabat'\r\n                },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('email') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('Email cannot be the same as the password!'));\r\n                },\r\n              }),\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password style={{width:'80%'}}/>\r\n          </Form.Item>\r\n    \r\n          <Form.Item\r\n            name=\"confirm\"\r\n            label=\"Confirm Password\"\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>\r\n    \r\n\r\n          {initializeType===\"staff\"&&(\r\n          <Form.Item\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            tooltip=\"What do you want others to call you?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:\"Please input your last name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input  style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>)\r\n          }\r\n\r\n          {initializeType===\"staff\"&&(\r\n          <Form.Item\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            tooltip=\"What do you want others to call you?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:\"Please input your last name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>)}\r\n  \r\n          {initializeType!==\"agent\"&&(\r\n          <Form.Item\r\n          name=\"birthday\"\r\n          label=\"Birth Day\"\r\n          tooltip=\"Click the calendar button to select a date\"\r\n          rules={[\r\n                {required: true,\r\n                message:\"Please input your birth day!\",\r\n               }\r\n          ]}>  \r\n          <DatePicker format={dateFormat} style={{width:200}} />\r\n            </Form.Item>)}\r\n\r\n            {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"phoneNumber\"\r\n            label=\"Phone Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your phone number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              addonBefore={prefixSelector}\r\n              style={{\r\n                width: '80%',\r\n              }}\r\n            />\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"staff\"&&(\r\n          <Form.Item\r\n            name=\"airlineName\"\r\n            label=\"Airline Name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input donation amount!',\r\n              },\r\n            ]}\r\n          >\r\n          {/* <Select onFocus={getAirlineList} placeholder=\"Please select a country\" style={{width:\"80%\"}}>\r\n            {airlineList.map((item)=>\r\n               (<Option value={item} key={item}>{item}</Option>)\r\n            )}\r\n          </Select> */}\r\n          <Input style={{\r\n                width: '80%',\r\n              }} ></Input>\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"buildingNumber\"\r\n            label=\"Building Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your building number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"street\"\r\n            label=\"Street Info\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your street info!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"city\"\r\n            label=\"City\"\r\n            tooltip=\"Could register with abbreviation\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your city!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"livingState\"\r\n            label=\"State\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your state info!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportNumber\"\r\n            label=\"Passport Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportExpiration\"\r\n            label=\"Passport Expiration Date\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport expiration date!',\r\n              },\r\n            ]}\r\n          >\r\n             <DatePicker format={dateFormat} style={{width:200}} />\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportCountry\"\r\n            label=\"Passport Country\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport country!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"agent\"&&(\r\n          <Form.Item\r\n            name=\"bookingAgentId\"\r\n            label=\"Agent Id\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your agent ID!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n\r\n\r\n          <Form.Item\r\n            name=\"intro\"\r\n            label=\"Intro\"\r\n          >\r\n            <Input.TextArea showCount maxLength={100}  style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>\r\n    \r\n          {/* <Form.Item\r\n            name=\"gender\"\r\n            label=\"Gender\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please select gender!',\r\n              },\r\n            ]}\r\n          >\r\n            <Select placeholder=\"select your gender\">\r\n              <Option value=\"male\">Male</Option>\r\n              <Option value=\"female\">Female</Option>\r\n              <Option value=\"other\">Other</Option>\r\n            </Select>\r\n          </Form.Item> */}\r\n    \r\n          {/* <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n            <Row gutter={8}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"captcha\"\r\n                  noStyle\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input the captcha you got!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Button>Get captcha</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item> */}\r\n    \r\n          {/* <Form.Item\r\n            name=\"agreement\"\r\n            valuePropName=\"checked\"\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n              },\r\n            ]}\r\n            {...tailFormItemLayout}\r\n          >\r\n            <Checkbox>\r\n              I have read the <a href=\"\">agreement</a>\r\n            </Checkbox>\r\n          </Form.Item>*/}\r\n          <Form.Item {...tailFormItemLayout}> \r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register\r\n            </Button>\r\n            <Button type=\"primary\" onClick={()=>{setRegisterModalVisible(false);}}>\r\n              Back\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        </Card>\r\n  );\r\n};\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Menu,Tooltip,Modal} from \"antd\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport cookie from 'react-cookies'\r\n\r\nexport default function countDown(loginInfo) {\r\n    let secondsToGo = 5;\r\n    let name = loginInfo.current.alias;\r\n    const modal = Modal.success({\r\n      title: `See you, ${name}`,\r\n      content: `Close in ${secondsToGo} second.`,\r\n    });\r\n    const timer = setInterval(() => {\r\n      secondsToGo -= 1;\r\n      modal.update({\r\n        content: `Close in ${secondsToGo} second.`,\r\n      });\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      modal.destroy();\r\n    }, secondsToGo * 1000);\r\n  }\r\n\r\n\r\n  export function countDownAnony() {\r\n    let secondsToGo = 5;\r\n    const modal = Modal.success({\r\n      title: `See you next time !`,\r\n      content: `Close in ${secondsToGo} second.`,\r\n    });\r\n    const timer = setInterval(() => {\r\n      secondsToGo -= 1;\r\n      modal.update({\r\n        content: `Close in ${secondsToGo} second.`,\r\n      });\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      modal.destroy();\r\n    }, secondsToGo * 1000);\r\n  }","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport cookie from 'react-cookies'\nimport countDown from \"../login/LoginOut\";\n\n\nconst {SubMenu} = Menu;\n\nexport default function CustomerSidebar({loginInfo,updateSelection,defaultData,setActionType, setDeptDate,setFlightResult}) {\n    const tagList = {\n        \"1\": \"Search flights\",\n        \"2\": \"Purchase tickets\",\n        \"3\": \"My flights\",\n        \"4\": \"Track spending\",\n        \"5\": \"Logout\",\n    }\n    const navigate = useNavigate();\n\n    const actionTypeMapping={\n        \"1\":\"search\",\n        \"2\":\"purchase\",\n        \"3\":\"view\"\n    }\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // clear local account information\n            countDown(loginInfo);\n            loginInfo.current = null;\n            cookie.remove(\"JSESSIONID\");\n            navigate(\"/\", {replace: true});\n        }\n        else if(tagList[item.key] == \"Search flights\"){\n            updateSelection(tagList[item.key]);\n\n            setFlightResult(defaultData.current);\n        setActionType(actionTypeMapping[item.key]);\n        setDeptDate(undefined);}\n        else{\n        updateSelection(tagList[item.key]);\n\n            setFlightResult(null);\n        setActionType(actionTypeMapping[item.key]);\n        setDeptDate(undefined);}\n    }\n\n    useEffect(() => {\n        updateSelection(\"Search flights\");\n        setActionType(\"search\");\n\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Booking\">\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Mine\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"4\">{tagList['4']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"5\">{tagList['5']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","export const statusColor = {\n    \"upcoming\": \"blue\",\n    \"cancelled\":\"gray\",\n    \"checking in\": \"yellow\",\n    \"delayed\": \"red\",\n    \"on time\":\"green\",\n    \"full\":\"black\"\n}","import {Button, Space, Tag} from \"antd\";\nimport {statusColor} from \"./statusTag\";\nimport React from \"react\";\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport moment from \"moment\";\n\nconst formatterTime = (val) => {\n    return val ? moment(val).format(\"YYYY-MM-DD HH:mm:ss\"): ''\n}\n\n\nexport const ticketColumns = [\n    // title是列的名称\n    // dataIndex:是后续用于指定<Table>组件columns中的对应关系\n    // key就是用于区分所有的列\n    {\n        title: \"Ticket No.\",\n        dataIndex: \"ticket_id\",\n        key: \"ticket\"\n    },\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n];\n\n\nexport const staffViewFLightColumns = [\n    {\n        title: \"Flight Number\",\n        dataIndex:\"flight_id\",\n        key:\"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        hideInSearch:true,\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        hideInSearch:true,\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n    {\n        title: \"Action\",\n        key: 'action',\n        hideInSearch:true,\n        render: (text, record) => (\n            <Space size=\"middle\">\n            <Button>Details</Button>\n            <Button onClick={()=>{console.log(\"haha\");}} type={'primary'} size={'small'} >\n              <EditOutlined style={{fontSize: '15px'}} />\n            </Button>\n            <Button onClick={()=>{console.log(\"xixi\");}} type={'primary'} size={'small'} danger >\n              <DeleteOutlined style={{fontSize: '15px'}} />\n            </Button>\n          </Space>\n    \n        )\n    }\n]\n\nexport const customerInterfaceColumns = [\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n    {\n        title: \"Action\",\n        key: 'action',\n        render: (text, record) => (\n            <Space size={\"middle\"}>\n                <Button disabled={record.status==(\"finished\"||\"onBoarding\")} >Book {record.flight_id}</Button>\n            </Space>\n        )\n    }\n];\n\nexport const agentInterfaceColumns = [\n    {\n        title: \"User ID\",\n        dataIndex: 'uid',\n        key: 'uid',\n    },\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },  {\n        title: \"Action\",\n        key: 'action',\n        render: (text, record) => (\n            <Space size={\"middle\"}>\n                <Button disabled={record.status==(\"finished\"||\"onBoarding\")} >Book {record.flight_id}</Button>\n            </Space>\n        )\n    }\n]\n\nexport const globalInterfaceColumns = [\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\",\n        render: formatterTime\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\",\n        render: formatterTime\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n]\n\n\n","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message,List} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CustomerModal(props){\r\n\r\n    const {loginInfo,customerModalVis,setCustomerModalVis,rowRecord,setRowRecord} = props;\r\n    const [showStatus,setStatus] = useState(\"purchase\"); //用于控制显示购票成功的信息\r\n    // 展示随机生成的TicketId, 航班信息，购买时间\r\n    const [purchaseInfo,setPurchaseInfo] = useState({});\r\n\r\n    const formLayout = {\r\n        labelCol: { span: 7 },\r\n        wrapperCol: { span: 13 },\r\n      };\r\n    \r\n    const FormItem = Form.Item;\r\n    \r\n    const [form] = Form.useForm();\r\n\r\n    const data = [\r\n      {\r\n        title: 'Airline Name',\r\n        description: purchaseInfo[\"airlineName\"]\r\n      },\r\n      {\r\n        title: 'Flight No.',\r\n        description: purchaseInfo[\"flightNum\"]\r\n      },\r\n      {\r\n        title: 'Purchase Date',\r\n        description: purchaseInfo[\"purchaseDate\"]\r\n      },\r\n      {\r\n        title: 'Ticket ID',\r\n        description: purchaseInfo[\"ticketNum\"]\r\n      },\r\n    ];\r\n\r\n\r\n    const purchaseCustomer = ()=>{\r\n        console.log({\r\n            airlineName:form.getFieldValue(\"airlineName\"),\r\n            flightNum:form.getFieldValue('flightNum'),\r\n              email:loginInfo.current?loginInfo.current.email:\"12345@qq.com\",\r\n              bookingAgentId:null\r\n          });\r\n        axios({\r\n            url:\"http://localhost:8080/customer/purchaseTicket\",\r\n            method:\"POST\",\r\n            data:{\r\n              airlineName:form.getFieldValue(\"airlineName\"),\r\n              flightNum:form.getFieldValue('flightNum'),\r\n                email:loginInfo.current?loginInfo.current.email:\"12345@qq.com\",\r\n                bookingAgentId:null\r\n            }\r\n        }).then(function(response){\r\n            //购票成功, 展示数据\r\n            if(response.data){\r\n                setStatus(\"confirm\");\r\n                setPurchaseInfo(response.data);\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    const renderContent = () => {\r\n\r\n        if(showStatus === \"purchase\"){\r\n          return (\r\n            <>\r\n              <FormItem\r\n                name=\"flightNum\"\r\n                label=\"Flight Number\"\r\n                rules={[{ required: true, message: 'Please input flight number!' }]}\r\n              >\r\n                <Input disabled={true}  />\r\n              </FormItem>\r\n              <FormItem\r\n                name=\"airlineName\"\r\n                label=\"Airline Name\"\r\n                rules={[{ required: true, message: 'Please input airline name!' }]}\r\n              >\r\n                <Input disabled={true}  />\r\n              </FormItem>\r\n            </>\r\n          );\r\n\r\n        }else if(showStatus === \"confirm\"){\r\n          return (<>\r\n            <List \r\n              itemtlayout = {\"horizontal\"}\r\n              dataSource={data}\r\n              renderItem={item=>{\r\n                if(item.title===\"Purchase Date\"){\r\n                  return(<List.Item\r\n                  >\r\n                  <List.Item.Meta\r\n                  title={item.title}\r\n                  description={moment(item.description).format(\"yyy-MM-DD\")}>\r\n\r\n                  </List.Item.Meta>\r\n              </List.Item>)\r\n                }\r\n              return (<List.Item\r\n                  >\r\n                  <List.Item.Meta\r\n                  title={item.title}\r\n                  description={item.description}>\r\n\r\n                  </List.Item.Meta>\r\n              </List.Item>)}}>\r\n            </List>\r\n          </>)\r\n        }\r\n\r\n        \r\n      };\r\n    \r\n    const renderFooter = () => {\r\n        if(showStatus === \"purchase\"){\r\n        return (\r\n          <>\r\n            <Button onClick={() => setCustomerModalVis(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => purchaseCustomer()}>\r\n              Purchase\r\n            </Button>\r\n          </>\r\n        );}else if(showStatus===\"confirm\"){\r\n          return (<>\r\n            <Button type=\"primary\" onClick={()=>{setCustomerModalVis(false);setStatus(\"purchase\");}}>\r\n              Confirm\r\n            </Button>\r\n          </>)\r\n        }\r\n      };\r\n\r\n\r\n    return (<Modal width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title={showStatus===\"purchase\"?\"Purchase Ticket\":\"Purchasement Info\"}\r\n        visible={customerModalVis}\r\n        footer={renderFooter()}\r\n        onCancel={() => {setCustomerModalVis(false);setRowRecord(false);}}>\r\n         <Form\r\n          {...formLayout}\r\n          form={form}\r\n            initialValues={{\r\n                airlineName:rowRecord.airline,\r\n                flightNum:rowRecord.flight_id\r\n            }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n        \r\n    </Modal>)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n}","import React, { useState,useEffect } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message, List} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function AgentModal(props){\r\n\r\n    const {loginInfo,agentModalVis,setAgentModalVis,rowRecord,setRowRecord} = props;\r\n    const [showStatus,setStatus] = useState(\"purchase\"); //用于控制显示购票成功的信息\r\n    // 展示随机生成的TicketId, 被代理人的Email, 和赚取的Commission Fee.\r\n    const [purchaseInfo,setPurchaseInfo] = useState({});\r\n\r\n    const formLayout = {\r\n        labelCol: { span: 7 },\r\n        wrapperCol: { span: 13 },\r\n      };\r\n    \r\n    const FormItem = Form.Item;\r\n    \r\n    const [form] = Form.useForm();\r\n\r\n    const data = [\r\n      {\r\n        title: 'Airline Name',\r\n        description: purchaseInfo[\"airlineName\"]\r\n      },\r\n      {\r\n        title: 'Flight No.',\r\n        description: purchaseInfo[\"flightNum\"]\r\n      },\r\n      {\r\n        title: 'Customer on behalf',\r\n        description: purchaseInfo[\"email\"]\r\n      },\r\n      {\r\n        title: 'Commission Fee Earned',\r\n        description: purchaseInfo[\"commissionFee\"]\r\n      },\r\n      {\r\n        title: 'Purchase Date',\r\n        description: purchaseInfo[\"purchaseDate\"]\r\n      },\r\n      {\r\n        title: 'Ticket ID',\r\n        description: purchaseInfo[\"ticketNum\"]\r\n      },\r\n    ];\r\n\r\n    const purchaseAgent = ()=>{\r\n        axios({\r\n            url:\"http://localhost:8080/bookingAgent/purchaseTicket\",\r\n            method:\"POST\",\r\n            data:{\r\n              airlineName:form.getFieldValue(\"airlineName\"),\r\n              flightNum:form.getFieldValue('flightNum'),\r\n                email:form.getFieldValue(\"email\"),\r\n                bookingAgentId:loginInfo.current?loginInfo.current.bookingAgentId:13123123,\r\n            }\r\n        }).then(function(response){\r\n            //购票成功, 展示数据\r\n            if(response.data){\r\n                setStatus(\"confirm\");\r\n                setPurchaseInfo(response.data);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const checkEmail = (inititalizeType,value,callback)=>{\r\n      axios({\r\n          method:'GET',\r\n          url:\"http://localhost:8080/bookingAgent/validateCustomer\",\r\n          params:{\"email\":value}\r\n      }).then(function(response){\r\n          if(response.data.valid===false){\r\n            console.log(\"false\");\r\n              callback(\"Customer Email not found!\");\r\n          }else{\r\n              callback();\r\n          }\r\n      })\r\n    }\r\n\r\n    const renderContent = () => {\r\n\r\n        if(showStatus === \"purchase\"){\r\n          return (\r\n            <>\r\n              <FormItem\r\n                name=\"flightNum\"\r\n                label=\"Flight Number\"\r\n                rules={[{ required: true, message: 'Please input flight number!' }]}\r\n              >\r\n                <Input disabled={true} placeholder=\"请输入\" />\r\n              </FormItem>\r\n              <FormItem\r\n                name=\"airlineName\"\r\n                label=\"Airline Name\"\r\n                rules={[{ required: true, message: 'Please input airline name!' }]}\r\n              >\r\n                <Input disabled={true} placeholder=\"请输入\" />\r\n              </FormItem>\r\n              <FormItem\r\n              name=\"email\"\r\n              label=\"Customer Email\"\r\n              rules={[{\r\n                required:true, message:\"Please input the customer email that you want to purchase on behalf of\"\r\n              },{\r\n                    validator:checkEmail\r\n                },]}>\r\n                <Input placeholder=\"Please input customer email\"></Input>\r\n              </FormItem>\r\n            </>\r\n          );\r\n\r\n        }else if(showStatus === \"confirm\"){\r\n          return (<>\r\n            <List \r\n              itemtlayout = {\"horizontal\"}\r\n              dataSource={data}\r\n              renderItem={item=>{\r\n                if(item.title===\"Purchase Date\"){\r\n                  return(<List.Item\r\n                  >\r\n                  <List.Item.Meta\r\n                  title={item.title}\r\n                  description={moment(item.description).format(\"yyy-MM-DD\")}>\r\n\r\n                  </List.Item.Meta>\r\n              </List.Item>)\r\n                }\r\n              return (<List.Item\r\n                  >\r\n                  <List.Item.Meta\r\n                  title={item.title}\r\n                  description={item.description}>\r\n\r\n                  </List.Item.Meta>\r\n              </List.Item>)}}>\r\n            </List>\r\n          </>)\r\n        }\r\n\r\n        \r\n      };\r\n    \r\n    const renderFooter = () => {\r\n        if(showStatus === \"purchase\"){\r\n        return (\r\n          <>\r\n            <Button onClick={() => setAgentModalVis(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => purchaseAgent()}>\r\n              Purchase\r\n            </Button>\r\n          </>\r\n        );}else if(showStatus===\"confirm\"){\r\n          return (<>\r\n            <Button type=\"primary\" onClick={()=>{setAgentModalVis(false);setStatus(\"purchase\");}}>\r\n              Confirm\r\n            </Button>\r\n          </>)\r\n        }\r\n      };\r\n\r\n      console.log(rowRecord.airline);\r\n    return (<Modal width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title={showStatus===\"purchase\"?\"Purchase Ticket\":\"Purchasement Info\"}\r\n        visible={agentModalVis}\r\n        footer={renderFooter()}\r\n        onCancel={() => {setAgentModalVis(false);setRowRecord(false)}}>\r\n         <Form\r\n          {...formLayout}\r\n          form={form}\r\n            initialValues={{\r\n                airlineName:rowRecord.airline,\r\n                flightNum:rowRecord.flight_id\r\n            }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n        \r\n    </Modal>)\r\n\r\n\r\n\r\n\r\n}","import {Input, Space, DatePicker, Select, Card, Button, Divider, Tag, Table,Modal,message} from 'antd';\nimport React, {useState,useEffect} from \"react\";\nimport {SwapOutlined} from \"@ant-design/icons\";\nimport {statusColor} from \"../../lib/statusTag\";\nimport {dateFormat} from \"../../lib/dateFormat\";\nimport {globalInterfaceColumns, ticketColumns} from \"../../lib/flightData\";\nimport CustomerModal from \"./PurchaseModals/CustomerModal\";\nimport AgentModal from \"./PurchaseModals/AgentModal\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport qs from \"qs\";\nimport {v4 as uuidv4} from \"uuid\";\nimport cookie from 'react-cookies';\nimport {useNavigate} from \"react-router-dom\";\n\nconst {Search} = Input;\nconst {Option} = Select;\n\naxios.defaults.timeout = 2000;\n\n\nconst formatterTime = (val) => {\n    return val ? moment(val).format(\"YYYY-MM-DD HH:mm:ss\"): ''\n}\n\nexport function FlightsResultTable(props) \n{\n    const {data,userType,loginInfo,actionType,setRowRecord,setCustomerModalVis,setAgentModalVis} = props;\n    const {RangePicker} = DatePicker;\n\n\n    const agentInterfaceColumns = [\n        {\n            title:\"Ticket Id\",\n            dataIndex:\"ticket_id\",\n            key:\"ticket\"\n        },\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {   \n            title:\"Airline Name\",\n            dataIndex:\"airline\",\n            key:\"airline\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\",\n            render: formatterTime\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\",\n            render: formatterTime\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Customer Email\",\n            dataIndex: \"customerEmail\",\n            key: \"customerEmail\"\n        },\n        {\n            title: \"Remaining Seats\",\n            dataIndex: \"remainingSeats\",\n            key: \"seats\"\n        },\n        {\n            title: \"Purchasing Date\",\n            dataIndex: \"purchaseDate\",\n            key: \"purchaseDate\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        },  {\n            title: \"Action\",\n            key: 'action',\n            render: (text, record) => (\n                <Space size={\"middle\"}>\n                    <Button disabled={(record.status==(\"cancelled\"||\"checking in\"))||record.full===true} onClick={()=>{\n                        \n                        setAgentModalVis(true);\n                        setRowRecord(record);\n                        \n                        }} >Book {record.flight_id}</Button>\n                </Space>\n            )\n        }\n    ]\n\n    const customerInterfaceColumns = [\n        {\n            title:\"Ticket Id\",\n            dataIndex:\"ticket_id\",\n            key:\"ticket\"\n        },\n\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\",\n            render: formatterTime\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\",\n            render: formatterTime\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        },\n        {\n            title: \"Action\",\n            key: 'action',\n            render: (text, record) => (\n                <Space size={\"middle\"}>\n                    <Button disabled={record.status==(\"cancelled\"||\"checking in\")} \n                    onClick={()=>{\n                        \n                        setCustomerModalVis(true);\n                        setRowRecord(record);\n                        \n                        }}>Book {record.flight_id}</Button>\n                </Space>\n            )\n        }\n    ];\n\n    const defaultColumns = [\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {   \n            title:\"Airline Name\",\n            dataIndex:\"airline\",\n            key:\"airline\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\"\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\"\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        }\n    ]\n    \n\n    let columns = userType===\"customer\"? customerInterfaceColumns:userType===\"agent\"?agentInterfaceColumns:globalInterfaceColumns;\n    let dataMap = data;\n    if(actionType!==\"view\"){\n     dataMap = data.map(item=>{\n        return({key:[item.airlineName,item.flightNum],\n        flight_id:item.flightNum,\n        airline:item.airlineName,\n        dept:item.sourceAirportName,\n        arri:item.destAirportName,\n        dept_time:item.departureTime,\n        arri_time:item.arrivalTime,\n        price:item.price,\n        remainingSeats:item.remainingSeats,\n        status:[item.status]\n        })\n    })}else if(actionType===\"view\"){\n         dataMap = data.map(item=>{\n            return({\n                key:item.ticketId,\n                ticket_id:item.ticketId,\n                flight_id:item.flightNum,\n                airline:item.airlineName,\n                dept:item.sourceAirportName,\n                arri:item.destAirportName,\n                dept_time:item.departureTime,\n                arri_time:item.arrivalTime,\n                price:item.price,\n                purchaseDate:item.purchaseDate?moment(item.purchaseDate).format(\"YYYY-MM-DD\"):undefined,\n                customerEmail:item.customerEmail,\n                status:[item.status]\n            })\n        })\n    }\n\n    if(actionType!==\"view\"){\n        columns = columns.filter((item)=>(item.title!=\"Ticket Id\")&&(item.title!==\"Customer Email\")&&(item.title!=\"Purchasing Date\"));\n    }\n    //根据actionTab 过滤展示的列\n    if(actionType!==\"purchase\"){\n        columns = columns.filter((item)=>item.title!=\"Action\"&&(item.title!==\"Remaining Seats\"))\n    }\n\n    if(actionType===\"search\"){\n        columns = columns.filter((item)=>item.title!=\"User ID\");\n    }\n\n    return (\n        <Table columns={columns} dataSource={dataMap} size=\"middle\"/>\n    )\n}\n\nexport default function SearchFlights({loginInfo,userType,deptDate,setDeptDate,actionTab,setNavigateBar,flightsResult,setFlightResult,actionType}) {\n\n    const {RangePicker} = DatePicker;\n\n    const [deptAirport, setDeptAirport] = useState(undefined);\n    const [arriAirport, setArriAirport] = useState(undefined);\n    // const [deptDate, setDeptDate] = useState(undefined); //today\n    const [searchResult, setSearchResult] = useState([]);\n    // 设置点击购买按钮后的数据\n    const [rowRecord,setRowRecord] = useState(undefined);\n\n    // 设置模态对话框用于提交购买信息\n    const [agentModalVis,setAgentModalVis] = useState(false);\n    const [customerModalVis,setCustomerModalVis] = useState(false);\n\n    const navigate = useNavigate();\n\n\n    const searchAirport=()=>{\n       \n        axios({\n            url:\"http://localhost:8080/index/searchAirports\",\n            type:\"GET\",\n        }).then(function(response){\n            if(response.data){\n                setSearchResult(response.data);\n            }else{\n                console.log(\"No Results\");\n            }\n        })\n    };\n\n    const options = searchResult.map(item => <Option key={item}>{item}</Option>);\n\n    const handleSearch = (value) => {\n        if (value) {\n            setTimeout(searchAirport, 500);\n        } else {\n            setSearchResult([]);\n        }\n    }\n\n    //callback就是传入的回调函数，value就是一个参数为value的，调用了callback的函数\n    const handleChange = (callBack) => (value) => {\n        callBack(value);\n    }\n\n    const swapDeptArri = () => {\n        let tmp = deptAirport;\n        setDeptAirport(arriAirport);\n        setArriAirport(tmp);\n    }\n\n    const handleSearchFlights = () => {\n        // search flights\n\n        axios({\n            url:\"http://localhost:8080/index/searchFlights\",\n            method:\"POST\",\n            data: {sourceAirportName:deptAirport,\n                destAirportName:arriAirport,\n                departureTime:deptDate?moment(deptDate).format(\"YYYY-MM-DD HH:mm:ss\"):undefined}\n        }).then(function(response){\n            // if(response.data[\"statusCode\"]==503){\n            //     loginInfo.current = null;\n            //     cookie.remove(\"JSESSIONID\");\n            //     setNavigateBar(\"global\");\n            //     navigate(\"/global\", {replace: true})\n            // }\n\n            if(response.data){\n                setFlightResult(response.data);\n            }else{\n                console.log(\"No Results\");\n            }\n        }).catch(function(response){\n            setFlightResult(null);\n            message.error(\"Back end server not started!\");\n        })\n\n    }\n\n    const handleSearchPurchase = () => {\n        axios({\n            url:userType===\"customer\"?\"http://localhost:8080/customer/getAllAvailableFlights\":\"http://localhost:8080/bookingAgent/getAllAvailableFlights\",\n            method:\"POST\",\n            data: {\n                sourceAirportName:deptAirport,\n                destAirportName:arriAirport,\n                departureTime:deptDate?moment(deptDate).format(\"YYYY-MM-DD HH:mm:ss\"):undefined\n            }\n        }).then(function(response){\n            if(response.data){\n                setFlightResult(response.data);\n            }else{\n                message.error(\"Back end server not started!\");\n            }\n        })\n\n    }\n\n    // const handleExactSearch = () => {\n    //     setFlightResult(\"testing\");\n    // }\n\n\n    // 处理和ViewFlights相关的请求\n    const handleViewFlights = ()=>{\n        let sendObject = null;\n        if(deptDate===\"\"){\n            sendObject = qs.stringify({\n                sourceAirport:deptAirport,\n                destAirport:arriAirport,\n                email:loginInfo.current?loginInfo.current.email:\"abababababa@gmail.com\",\n            })\n        }else{\n            sendObject= qs.stringify({\n                sourceAirport:deptAirport,\n                destAirport:arriAirport,\n                email:loginInfo.current?loginInfo.current.email:\"abababababa@gmail.com\",\n                startDate:deptDate?moment(deptDate[0]).format(\"YYYY-MM-DD HH:mm:ss\"):undefined,\n                endDate:deptDate?moment(deptDate[1]).format(\"YYYY-MM-DD HH:mm:ss\"):undefined\n            })\n        }\n        axios({\n            url:userType===\"customer\"?\"http://localhost:8080/customer/getMyFlights\":\"http://localhost:8080/bookingAgent/getMyFlights\",\n            method:\"POST\",\n            header:{\n                \"Content-Type\":\"application/x-www-form-urlencoded;charset=UTF-8\"\n            },\n            data:sendObject\n        }).then(function(response){\n            if(response.data){\n                setFlightResult(response.data);\n            }else{\n            }\n        }).catch(function(response){\n            message.error(\"Back end server not started!\")\n        })\n    }\n\n    const defineCardTitle = ()=>{\n        if(actionType===\"view\"){\n\n            if(userType===\"customer\"){\n                return `Click Search for your fligh information, ${loginInfo.current?loginInfo.current.alias:\"username\"}!`\n            }else{\n                return `Click Search for the orders you created for customers!`\n            }\n        }else if(actionType===\"purchase\"){\n            \n            if(userType===\"customer\"){\n                return `Start planning your journey, ${loginInfo.current?loginInfo.current.alias:\"username\"}!`\n            }else{\n                return `Click Search for the avaliable flights!`\n            }\n        }else{\n            if(userType===\"customer\"){\n                return `Click Search to see upcoming flights, ${loginInfo.current?loginInfo.current.alias:\"username\"}!`\n            }else{\n                return 'Click Search to See upcoming flights!'\n            }\n        }\n    }\n\n\n    const defineRangeFilterTitle = ()=>{\n        if(actionType===\"view\"){\n            return (userType===\"customer\"?\"Departure Time:\":\"Purchase Date:\")\n        }else{\n            return \"Departure Time:\"\n        }\n\n\n\n\n    }\n\n\n    return (\n        <Card title={defineCardTitle()}>\n            <Input.Group>\n                <b>From:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"From\"\n                    style={{width: 230, padding: 10}}\n                    placeholder={\"Departure Airport\"}\n                    value={deptAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setDeptAirport)}\n                    notFoundContent={null}\n                    allowClear\n                >\n                    {options}\n                </Select>\n                <Button shape=\"circle\" icon={<SwapOutlined />} onClick={swapDeptArri} />\n                <b style={{paddingLeft: 10}}>To:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"To\"\n                    style={{width: 230, padding: 10}}\n                    placeholder={\"Arrival Airport\"}\n                    value={arriAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setArriAirport)}\n                    notFoundContent={null}\n                    allowClear\n                >\n                    {options}\n                </Select>\n                <b style={{paddingLeft: 10,paddingRight:10}}>{defineRangeFilterTitle()}</b>\n                {actionType===\"view\"?<RangePicker onChange={setDeptDate} value={deptDate} format={\"YYYY-MM-DD HH:mm:ss\"} showTime={{ defaultValue: moment('YYYY-MM-DD HH:mm:ss') }} style={{width:300}} placeholder={[\"Begin With\",\"End With\"]}></RangePicker>:\n                <DatePicker format={\"YYYY-MM-DD HH:mm:ss\"} value={deptDate} onChange={handleChange(setDeptDate)} showTime={{ defaultValue: moment('YYYY-MM-DD HH:mm:ss') }}\n   style={{width:300}} placeholder={\"Depate After\"} />}\n                \n                <span style={{padding: 10}}> </span>\n                <Button type=\"primary\" onClick={actionType===\"view\"?handleViewFlights:actionType===\"purchase\"?handleSearchPurchase:handleSearchFlights}>Search</Button>\n            </Input.Group>\n            \n        \n            <Divider />\n            {flightsResult ? <FlightsResultTable data={flightsResult} loginInfo={loginInfo} userType={userType} actionType={actionType} setRowRecord={setRowRecord} setAgentModalVis={setAgentModalVis} setCustomerModalVis={setCustomerModalVis}/> : null}\n            \n            {rowRecord? <AgentModal loginInfo={loginInfo} agentModalVis={agentModalVis} setAgentModalVis={setAgentModalVis} rowRecord={rowRecord} setRowRecord={setRowRecord}></AgentModal>:null}\n\n            {rowRecord? <CustomerModal loginInfo={loginInfo} customerModalVis={customerModalVis} setCustomerModalVis={setCustomerModalVis} rowRecord={rowRecord} setRowRecord={setRowRecord}></CustomerModal>:null}\n                \n            \n            {/* {flightResult&&defaultData?} */}\n\n        </Card>\n    )\n}","import {FlightsResultTable} from \"../flight/SearchFlights\";\nimport React, {useState} from \"react\";\nimport {Button, Card, DatePicker, Divider, Input, Select} from \"antd\";\nimport {SwapOutlined} from \"@ant-design/icons\";\nimport {dateFormat} from \"../../lib/dateFormat\";\n\nconst {Option} = Select;\n\nexport default function PurchaseTicket() {\n    // result body:\n    // [{most match: city if city, airport if airport},\n    // {cities if city, airports if airport}, ...,\n    // {airports if city, cities if airport}, {}]\n\n    const [deptAirport, setDeptAirport] = useState(undefined);\n    const [arriAirport, setArriAirport] = useState(undefined);\n    const [deptDate, setDeptDate] = useState(\"\"); //today\n    const [searchResult, setSearchResult] = useState([]);\n    const [flightsResult, setFlightResult] = useState(null);\n    const [flightID, setFlightID] = useState(undefined);\n\n    //for testing ONLY\n    const test = () => {setSearchResult([\"Shanghai\", \"Shangrao\", \"Bashang\", \"SHA\", \"PVG\", \"SQD\", \"ZQZ\"])};\n\n    const options = searchResult.map(item => <Option key={item}>{item}</Option>);\n\n    const handleSearch = (value) => {\n        if (value) {\n            setTimeout(test, 500);\n        } else {\n            setSearchResult([]);\n        }\n    }\n    const handleChange = (callBack) => (value) => {\n        callBack(value);\n    }\n\n    const swapDeptArri = () => {\n        let tmp = deptAirport;\n        setDeptAirport(arriAirport);\n        setArriAirport(tmp);\n    }\n\n    const handleSearchFlights = () => {\n        // search flights\n        setFlightResult(\"testing\");\n    }\n\n\n    return (\n        <Card title=\"Start planning your journey, Username!\">\n            <Input.Group>\n                <b>From:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"From\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Departure Airport\"}\n                    value={deptAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setDeptAirport)}\n                    notFoundContent={null}\n                >\n                    {options}\n                </Select>\n                <Button shape=\"circle\" icon={<SwapOutlined />} onClick={swapDeptArri} />\n                <b style={{paddingLeft: 10}}>To:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"To\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Arrival Airport\"}\n                    value={arriAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setArriAirport)}\n                    notFoundContent={null}\n                >\n                    {options}\n                </Select>\n                <DatePicker format={dateFormat} onChange={handleChange(setDeptDate)} style={{width:200}} />\n                <span style={{padding: 10}}> </span>\n                <Button type=\"primary\" onClick={handleSearchFlights}>Search</Button>\n            </Input.Group>\n        \n\n            <Divider />\n            {flightsResult ? <FlightsResultTable data={flightsResult} /> : null}\n        </Card>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Pie} from \"@ant-design/charts\";\nimport {Input, Space, DatePicker, Select, Card, Button, Divider, Tag, Table} from 'antd';\nimport {dateFormat} from \"../../lib/dateFormat\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nexport default function SpendingChart({loginInfo}) {\n\n    const [spendingData, setSpendingData] = useState([]);\n    const [startDate,setStart] = useState(moment().subtract(30, 'days'));\n    const [endDate,setEnd] = useState(moment());\n\n    useEffect(()=>{\n        axios({\n            url:\"http://localhost:8080/customer/trackSpending\",\n            method:\"POST\",\n            data:{startDate:startDate,\n                endDate:endDate,\n                email:loginInfo.current?loginInfo.current.email:\"User\"},\n        }).then(function(response){\n            if(response.data){\n            //  const parsedData = JSON.parse(response.data);\n            const dataMap = response.data.map((item)=>({type:item.interval,value:item.value}))\n            setSpendingData(dataMap);}\n        })\n    },[])\n\n    const setStartDate = (value)=>{\n        setStart(value);\n    }\n\n    const setEndDate = (value)=>{\n        setEnd(value);\n    }\n\n    const handleSubmit=()=>{\n        console.log(startDate);\n        console.log(endDate);\n\n        \n    }\n\n    const handleChange = (value,type)=>{\n        let start = 0;\n        let end = 0;\n        if(type==\"start\"){\n            start = value\n            end = endDate;}\n            else{\n                start = startDate;\n                end = value;}\n        axios({\n            url:\"http://localhost:8080/customer/trackSpending\",\n            method:\"POST\",\n            data:{startDate:start,\n                endDate:end,\n                email:\"12345@qq.com\"},\n        }).then(function(response){\n            if(response.data.length>0){\n                console.log(response.data);\n            const dataMap = response.data.map((item)=>({type:item.interval,value:item.value}))\n            setSpendingData(dataMap);\n            if(type==\"start\"){\n            setStartDate(start);}\n            else{\n            setEndDate(end);}}else{\n                setSpendingData([{item:\"9\",value:9999}])\n            }\n        })\n    }\n\n    const chartConfig = {\n        appendPadding: 10,\n        data: spendingData, // TODO: use props or ask for the server\n        angleField: 'value',\n        colorField: 'type',\n        radius: 0.9,\n        meta: {\n            type: {\n                alias: 'Month',\n            },\n            value: {\n                alias: 'Total Spending',\n                formatter: (v) => (\"$\" + v.toString()),\n            },\n        },\n        label: {\n            type: 'inner',\n            offset: '-30%',\n        },\n        interactions: [{ type: 'element-selected' }, { type: 'element-active' }]\n    }\n\n    return (\n        <Card title=\"See your amazing trips, Username!\">\n            <Input.Group>\n\n            <DatePicker format={dateFormat} placeholder={\"startDate\"} defaultValue={startDate} onChange={(value)=>{handleChange(value,\"start\");}} style={{width:200}} />\n            <b style={{padding: 190}}> </b>\n            <DatePicker format={dateFormat} placeholder={\"endDate\"} defaultValue={endDate} onChange={(value)=>{handleChange(value,\"end\")}} style={{width:200}} />\n            <b style={{padding: 160}}> </b>\n            </Input.Group>\n            <Pie {...chartConfig} />\n        </Card>\n    )\n}","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport cookie from 'react-cookies';\nimport countDown from \"../login/LoginOut\";\n\nconst {SubMenu} = Menu;\n\nexport default function AgentSidebar({loginInfo,updateSelection,setDeptDate,defaultData,setActionType,setFlightResult}) {\n    const tagList = {\n        \"1\": \"Search flights\",\n        \"2\": \"Create order\",\n        \"3\": \"My customer orders\",\n        \"4\": \"Commission statistics\",\n        \"5\": \"Top customers\",\n        \"6\": \"Logout\"\n    }\n    const navigate = useNavigate();\n\n    const actionTypeMapping={\n        \"1\":\"search\",\n        \"2\":\"purchase\",\n        \"3\":\"view\"\n    }\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // clear local account information\n            countDown(loginInfo);\n            loginInfo.current = null;\n            cookie.remove(\"JSESSIONID\");\n            navigate(\"/\", {replace: true})\n        }\n        updateSelection(tagList[item.key]);\n            setFlightResult(null);\n            setDeptDate(undefined);\n            setActionType(actionTypeMapping[item.key]);\n\n    }\n\n    useEffect(() => {\n        updateSelection(\"Commission statistics\")\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['4']}\n            defaultOpenKeys={['sub2']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Booking\">\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Mine\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"4\">{tagList['4']}</Menu.Item>\n                <Menu.Item key=\"5\">{tagList['5']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"6\">{tagList['6']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","import React, {useState} from \"react\";\nimport {Column} from \"@ant-design/charts\";\nimport {Card, Divider, Typography,InputNumber} from \"antd\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport axios from \"axios\";\n\nconst {Title} = Typography;\n\nexport default function TopCustomerChart() {\n    const [customerTicketCount, setCustomerTicketCount] = useState(null);\n    const [customerCommission, setCustomerCommission] = useState(null);\n    const [activeTab,setActiveTab] = useState(\"tickets\");\n    const [data,setData]=useState([]);\n    const [topK,setTopK] = useState(5);\n\n    const tabList = [\n        {key: 'tickets', tab: 'Tickets Ranking'},\n        {key: 'commission', tab: 'Commission Ranking'},\n    ]\n\n    useEffect((()=>{\n        searchTickets();\n        // setData(testTicket);\n    }),[])\n\n\n    // for testing ONLY\n    const testTicket = [\n        {\n            uid: \"123\",\n            sum: 15,\n        },\n        {\n            uid: \"234\",\n            sum: 11,\n        },\n        {\n            uid: \"471\",\n            sum: 9,\n        },\n        {\n            uid: \"602\",\n            sum: 7,\n        },\n        {\n            uid: \"866\",\n            sum: 5,\n        },\n    ];\n    const testCommission = [\n        {\n            uid: \"123\",\n            sum: 9806.3,\n        },\n        {\n            uid: \"234\",\n            sum: 7503.5,\n        },\n        {\n            uid: \"471\",\n            sum: 6602.6,\n        },\n        {\n            uid: \"602\",\n            sum: 1025.2,\n        },\n        {\n            uid: \"866\",\n            sum: 897.8,\n        },\n    ]\n\n    const columnConfig = {\n        xField: 'email',\n        yField: \"sum\",\n        seriesField: '',\n        columnWidthRatio: 0.5,\n        label: {\n            position: 'middle',\n            style: {\n                fill: '#FFFFFF',\n                opacity: 0.8\n            }\n        },\n        xAxis: {\n            label: {\n                autoHide: true,\n                autoRotate: false,\n            }\n        },\n    }\n\n\n    const searchCommission = ()=>{\n        axios({\n            method:'GET',\n            url:\"http://localhost:8080/bookingAgent/getTopKCommission\",\n            params:{\"K\":topK}\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                const formattedData = response.data.map((item)=>({\"email\":item.email,\"sum\":item.totalCommission}))\n                setData(formattedData);\n            }\n        })\n    }\n\n    const searchTickets = ()=>{\n        axios({\n            method:'GET',\n            url:\"http://localhost:8080/bookingAgent/getTopKTickets\",\n            params:{\"K\":topK}\n        }).then(function(response){\n            if(response.data){\n                const formattedData = response.data.map((item)=>({\"email\":item.email,\"sum\":item.ticketsFromAgent}))\n                setData(formattedData);\n            }\n        })\n    }\n\n    const onTabChange = (key)=>{\n        setActiveTab(key);\n        if(key===\"tickets\"){\n            searchTickets();\n            // setData(testTicket)\n        }else{\n            searchCommission();\n            // setData(testCommission);\n        }\n    }\n\n    const onNumberChange=(value)=>{\n        //更新图标\n        setTopK(value);\n    }\n    \n\n    return (\n        <Card title=\"Customer Statistics\"\n              tabList={tabList}\n              activeTab={activeTab}\n        onTabChange={onTabChange}\n        tabBarExtraContent={<><span style={{marginRight:5}}>Top</span><InputNumber min={1} onChange={onNumberChange} defaultValue={5}></InputNumber><span style={{marginLeft:5}}>Agents</span></>}\n        >\n            <Column {...columnConfig}\n                    data={data.slice(0,topK)}\n                    meta={{uid: {alias: 'User ID'}, sum: {alias:activeTab===\"tickets\"?'Ticket Number':'Total Commission'}}} />\n        </Card>\n    )\n}","import {DatePicker, Statistic, Card, Space} from \"antd\";\nimport React, {useEffect, useState} from \"react\";\n//后续可通过moment()获取当前的时间\nimport moment from \"moment\";\nimport axios from \"axios\";\n\naxios.defaults.timeout = 1000;\nconst {RangePicker} = DatePicker;\n\nexport default function CommissionStatistics() {\n    const [commissionData, setCommissionData] = useState(null);\n    const [avgcommissionData,setAvgCommissionData] = useState(null);\n    const [totalTickets,setTotalTickets] = useState(null);\n\n    const handleDateRangeChange = (value,dateString) => {\n        console.log(value);\n        // console.log(dateString);\n        axios({\n            url:\"http://localhost:8080/bookingAgent/getCommissionInfo\",\n            method:\"GET\",\n            params:{\n                email:\"cathayEmp01@csair.com\",\n                startDate:new Date(value[0]),\n                endDate:new Date(value[1])\n            }\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                 setCommissionData(response.data.commissionFees);\n                 setAvgCommissionData(response.data.averageCommissionFees);\n                 setTotalTickets(response.data.ticketBooked);\n            }\n        }).catch(function(){\n            setCommissionData(99999);\n            setAvgCommissionData(90909);\n            setTotalTickets(12313213);\n        })\n     \n\n       \n    }\n\n    const loadingHolder = Boolean(commissionData);\n    const loadingHolderForAvg = Boolean(avgcommissionData);\n    const loadingHolderForTickets = Boolean(totalTickets);\n\n    useEffect(() => {\n        axios({\n            url:\"http://localhost:8080/bookingAgent/getCommissionInfo\",\n            method:\"GET\",\n            params:{\n                email:\"cathayEmp01@csair.com\",\n                startDate:new Date(moment().subtract(30, 'days')),\n                endDate:new Date(moment())\n            }\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                 setCommissionData(response.data.commissionFees);\n                 setAvgCommissionData(response.data.averageCommissionFees);\n                 setTotalTickets(response.data.ticketBooked);\n            }\n        })\n    }, []);\n\n    return (\n        <Card title=\"Checking Total Commission for Username\">\n            <Space direction=\"vertical\" size='large' style={{width: '100%'}}>\n                <RangePicker\n                    onChange={handleDateRangeChange}\n                    defaultValue={[moment().subtract(30, 'days'), moment()]}\n                />\n                <div style={{textAlign: 'center', width: '100%'}}>\n                    <Statistic\n                        title=\"Total Commission in (USD)\"\n                        value={commissionData}\n                        loading={!loadingHolder}\n                        precision={2}\n                        style={{width: '100%'}}\n                    />\n                    <Statistic\n                        title=\"Average Commission in (USD)\"\n                        value={avgcommissionData}\n                        loading={!loadingHolderForAvg}\n                        precision={2}\n                        style={{width: '100%'}}\n                    />\n                    <Statistic\n                        title=\"Total Tickets Booked On Behalf of the customer\"\n                        value={totalTickets}\n                        loading={!loadingHolderForTickets}\n                        style={{width: '100%'}}\n                    />\n                </div>\n            </Space>\n        </Card>\n    )\n\n}","import {CarryOutOutlined, FundViewOutlined, SendOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu,Tooltip,Modal} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport cookie from 'react-cookies'\nimport countDown from \"../login/LoginOut\";\n\nconst {SubMenu} = Menu;\n\nexport default function StaffSidebar({ loginInfo,updateSelection}) {\n    const tagList = {\n        // Flight Management\n        \"2\": \"Flight CRUD\",\n        \"4\": \"Add airplane\",\n        \"5\": \"Add airport\",\n        // Statistics\n        \"3\": \"View Agents\",\n        \"6\": \"Frequent customers\",\n        \"7\": \"Revenue Comparison\",\n        \"8\": \"Top destinations\",\n        \"9\": \"View Reports\",\n        // Operation\n        \"10\": \"Add booking agent\",\n        \"11\": \"Grant permission\",\n        \"12\": \"Logout\",\n\n    }\n    const navigate = useNavigate();\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // GoodBye Information to User\n            countDown(loginInfo);\n            \n            loginInfo.current = null;\n            cookie.remove(\"JSESSIONID\");\n            \n            navigate(\"/\", {replace: true})\n        }\n        updateSelection(tagList[item.key])\n    }\n\n    useEffect(() => {\n        updateSelection(\"View Reports\");\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['9']}\n            defaultOpenKeys={['sub2']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<SendOutlined />} title=\"Flight Management\">\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n                \n                <Menu.Item key=\"4\" >\n                {tagList['4']}\n                </Menu.Item>\n                <Menu.Item key=\"5\" disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?false:true:false}>\n                <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>{tagList['5']}\n                </Tooltip></Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<FundViewOutlined />} title=\"Statistics\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"6\">{tagList['6']}</Menu.Item>\n                <Menu.Item key=\"7\">{tagList['7']}</Menu.Item>\n                <Menu.Item key=\"8\">{tagList['8']}</Menu.Item>\n                <Menu.Item key=\"9\">{tagList['9']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"10\" disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?false:true:false}>\n                <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>{tagList['10']}\n                </Tooltip></Menu.Item>\n                <Menu.Item key=\"11\" disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?false:true:false}>\n                <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>{tagList['11']}\n                </Tooltip></Menu.Item>\n                <Menu.Item key=\"12\">{tagList['12']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","import React, {useState} from \"react\";\nimport {Input, Card, Button,Form,message} from \"antd\";\nimport qs from \"qs\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nexport default function EditAirport({loginInfo}) {\n\n    const onFinish =(values)=>{\n      axios({\n        url:\"http://localhost:8080/airlineStaff/addNewAirport\",\n        method:\"post\",\n        data:values\n      }).then(function(response){\n        if(response.data===\"success\"){\n          message.success({\n            content: 'Insertion Completed',\n            className: 'custom-class',\n            style: {\n              marginTop: '40vh',\n            },\n          });\n        }else{\n          message.error({\n            content: 'You have already inserted this airport!',\n            className: 'custom-class',\n            style: {\n              marginTop: '40vh',\n            },\n          });\n        }\n      })\n    }\n\n    const onFinishFailed = ()=>{\n      message.error(\"Evaluation Failed!\");    }\n\n    const onReset = ()=>{\n      form.resetFields();\n    }\n\n    const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n\n    const [form] = Form.useForm();\n    return (\n        <Card title=\"Airport Information Management\">\n           <Form\n           form={form}\n            name=\"airport form\"\n            className=\"airport_form\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            scrollToFirstError>\n           \n            <Form.Item\n            name=\"airportName\"\n            label=\"Airport Name\"\n            rules={[\n                {\n                  required:true,\n                message:\"Airport Name should not be empty!\"\n                }\n            ]}\n            validateTrigger='onBlur'\n            hasFeedback>\n\n                <Input ></Input>\n            </Form.Item>\n\n            <Form.Item\n            name=\"airportCity\"\n            label=\"Airport City\"\n            validateTrigger='onBlur'\n            rules={\n              [\n                {\n                  required:true,\n                message:\"Airport City should not be empty!\"}\n            ]}\n            hasFeedback>\n\n                <Input></Input>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}> \n            <Button type=\"primary\" htmlType=\"submit\">\n              Add\n            </Button>\n            <Button type=\"primary\" onClick={onReset}>\n              Reset\n            </Button>\n          </Form.Item>\n          </Form>\n\n\n        </Card>\n    )\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,InputNumber,message,Space,Table} from \"antd\";\r\nimport qs from \"qs\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\n\r\nexport default function EditAirport({loginInfo}) {\r\n\r\n    const [tableData,setTableData] = useState([]);\r\n\r\n    const tableColumns=[\r\n      {\r\n        title:\"Airplane Id\",\r\n        dataIndex:\"id\",\r\n        key:\"airplane_id\",\r\n        width:200\r\n      },\r\n      {\r\n        title:\"Airline Name\",\r\n        dataIndex:\"airline\",\r\n        key:\"airline_name\",\r\n        width:200\r\n      },\r\n      {\r\n        title:\"Seat Number\",\r\n        dataIndex:\"seats\",\r\n        key:\"seats\",\r\n        width:200\r\n      },\r\n    ]\r\n\r\n    const getAirplanes = ()=>{\r\n      axios({\r\n        url:\"http://localhost:8080/airlineStaff/getAllAirplanes\",\r\n        method:\"GET\",\r\n        params:{\r\n          airlineName:loginInfo.current?loginInfo.current.airlineName:\"\"\r\n        }\r\n      }).then(function(response){\r\n        if(response.data){\r\n          setTableData(response.data);\r\n        }\r\n      })\r\n    }\r\n\r\n    useEffect(()=>{\r\n      getAirplanes();\r\n    },[\"airport\"])\r\n\r\n    const onFinish =(values)=>{\r\n      axios({\r\n        url:\"http://localhost:8080/airlineStaff/addNewAirplane\",\r\n        method:\"post\",\r\n        data:{airline:loginInfo.current?loginInfo.current.airlineName:undefined,\r\n              id:values.airplaneId,\r\n              seats:values.seats\r\n              }\r\n      }).then(function(response){\r\n        if(response.data===\"success\"){\r\n          message.success({\r\n            content: 'Insertion Completed',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '40vh',\r\n            },\r\n          });\r\n          getAirplanes();\r\n        }else{\r\n          message.error({\r\n            content: 'You have already inserted this airplane information!',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '40vh',\r\n            },\r\n          });\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n    const onFinishFailed = ()=>{\r\n      message.error(\"Evaluation Failed!\");\r\n    }\r\n\r\n    const onReset = ()=>{\r\n      form.resetFields();\r\n    }\r\n\r\n    const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 0,\r\n          },\r\n        },\r\n      };\r\n\r\n\r\n      const initialvalue = {\r\n        airlineName:loginInfo.current?loginInfo.current.airlineName:undefined,\r\n        airplaneId:undefined,\r\n        seats:200\r\n      }\r\n\r\n    const [form] = Form.useForm();\r\n    return (\r\n      <Space align=\"center\" size={100}>\r\n      {loginInfo.current?loginInfo.current.permissionDescription?loginInfo.current.permissionDescription.includes(\"Admin\")?\r\n        <Card style={{marginLeft:50}} title=\"Add airplane\">\r\n           <Form\r\n           form={form}\r\n            name=\"airplane\"\r\n            className=\"airplane-form\"\r\n            onFinish={onFinish}\r\n            onFinishedFailed={onFinishFailed}\r\n            initialValues={initialvalue}>\r\n           \r\n            <Form.Item\r\n            name=\"airlineName\"\r\n            label=\"Airline Name\"\r\n            rules={[\r\n                {required:true,\r\n                message:\"Aiport Name should not be empty!\"}\r\n            ]}>\r\n\r\n                <Input disabled={true} ></Input>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n            name=\"airplaneId\"\r\n            label=\"Airplane Id\"\r\n            rules={[\r\n                {required:true,\r\n                message:\"Aiport Id should not be empty!\"}\r\n            ]}>\r\n\r\n                <Input></Input>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n            name=\"seats\"\r\n            label=\"Seat Number\"\r\n            >\r\n\r\n                <InputNumber  ></InputNumber>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}> \r\n\r\n              <Button type=\"primary\" htmlType=\"submit\" >\r\n                Add\r\n              </Button>\r\n\r\n              <Button type=\"primary\" onClick={onReset} style={{marginLeft:50}}>\r\n                Reset\r\n              </Button>\r\n          </Form.Item>\r\n          </Form>\r\n\r\n        </Card>: \r\n        \r\n        \r\n        <Card style={{marginLeft:50}} title=\"Add airplane\">\r\n            You don't have permission to add airplanes.\r\n        </Card>:null:null}\r\n        <Card title=\"All the airplane for your airline company\"><Table width={300} columns={tableColumns} dataSource={tableData} size=\"middle\"/></Card>\r\n        </Space>\r\n    )\r\n}","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {Menu,Avatar} from \"antd\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport cookie from 'react-cookies'\r\nimport { countDownAnony } from \"../login/LoginOut\";\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nexport default function GlobalSidebar({updateSelection}){\r\n    const tagList = {\r\n        \"1\": \"Search flights\",\r\n        \"2\": \"Exit the System\",\r\n    }\r\n    const navigate = useNavigate();\r\n\r\n    const handleSidebarClick = (item) => {\r\n        if (tagList[item.key] == \"Exit the System\") {\r\n            // Say goodbye!\r\n            countDownAnony();\r\n            //Todo\r\n            cookie.remove(\"JSESSIONID\");\r\n            navigate(\"/\", {replace: true})\r\n        }\r\n        updateSelection(tagList[item.key])\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateSelection(\"Search flights\")\r\n    }, [])\r\n\r\n    return (\r\n        <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1']}\r\n            onClick={handleSidebarClick}\r\n            style={{height: '100%', borderRight: 0}}\r\n        >\r\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Operation\">\r\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\r\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\r\n            </SubMenu>\r\n        </Menu>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nconst formLayout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 13 },\r\n  };\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function CreateForm(props){\r\n    const{modalVisible,onCancel,onSubmit,handleCreateModalVisible,handleCreate} = props;\r\n    const[formVals,setFormVals] = useState({}); //用于批量添加，暂时用不到\r\n\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const disabledDate = (current) => {\r\n      // Can not select days before today and today\r\n      return current && current < moment().endOf('day');\r\n    }\r\n\r\n    const options = [\"upcoming\",\"cancelled\",\r\n    \"checking in\",\r\n    \"delayed\",\r\n    \"on time\"];\r\n    const optionsData = options.map((item)=><Option key={item}>{item}</Option>)\r\n\r\n    \r\n\r\n    const handleNext = async () => {\r\n        const fieldsValue = await form.validateFields();\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/validateNewAirplane\",\r\n          method:\"POST\",\r\n          data:{\r\n            id:fieldsValue.airplaneId,\r\n            airline:fieldsValue.airlineName\r\n          }\r\n        }).then(function(response){\r\n          if(response.data===\"success\"){\r\n            setFormVals({ ...formVals, ...fieldsValue});\r\n            handleCreate({ ...formVals, ...fieldsValue});\r\n          }else{\r\n            message.error({\r\n              content: 'This airline name and airplane id is not found in the database!',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n          }\r\n        })\r\n        \r\n      };\r\n\r\n    const renderContent = () => {\r\n        return (\r\n          < >\r\n            <FormItem\r\n              name=\"flightNum\"\r\n              label=\"Flight Number\"\r\n              rules={[{ required: true, message: 'Please input flight number!' }]}\r\n            >\r\n              <Input placeholder=\"e.g. MU672\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"airlineName\"\r\n              label=\"Airline Name\"\r\n              rules={[{ required: true, message: 'Please input airline name' }]}\r\n            >\r\n              <Input placeholder=\"e.g. Cathay Pacific\" />\r\n            </FormItem>\r\n    \r\n            <FormItem\r\n              name=\"sourceAirportName\"\r\n              label=\"Departure Airport\"\r\n              rules={[{ required: true, message: 'Please Input Departure Airport' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (value && getFieldValue('destAirportName') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The arrivalAirport should not be the same as the departure Airport!'));\r\n                },\r\n              }),]}\r\n            >\r\n              <Input placeholder=\"e.g. PVG\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"departureTime\"\r\n              label=\"Departure Time\"\r\n              rules={[{ required: true, message: 'Please input Departure Time' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  console.log(\"xixi\");\r\n                  if (moment(value)<moment(getFieldValue(\"arrivalTime\"))) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('You cannot set the departure time to be later than arrival time!'));\r\n                },}),\r\n\r\n              ]}\r\n              >\r\n              <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n               disabledDate={disabledDate}\r\n               showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }\r\n              \r\n              }></DatePicker>\r\n            </FormItem>\r\n\r\n\r\n            <FormItem\r\n              name=\"destAirportName\"\r\n              label=\"Arrival Airport\"\r\n              rules={[{ required: true, message: 'Please Input Arrival Airport' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (value && getFieldValue('sourceAirportName') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The arrival airport should not be the same as the departure airport!'));\r\n                },\r\n              }),]}\r\n            >\r\n              <Input placeholder=\"e.g. SZX\" />\r\n            </FormItem>\r\n\r\n\r\n            <FormItem\r\n              name=\"arrivalTime\"\r\n              label=\"Arrival Time\"\r\n              rules={[{ required: true, message: 'Please input Arrival Time' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (moment(value)>moment(getFieldValue(\"departureTime\"))) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('You cannot set the arrival time to be earlier than  the departure time!'));\r\n                },\r\n              }),]}\r\n              >\r\n              <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n               disabledDate={disabledDate}\r\n               showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}></DatePicker>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"price\"\r\n              label=\"price\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please indicate the price of this flight!\"\r\n              }]}>\r\n              <InputNumber min={1} max={999999999} precision={2} style={{width:130}}></InputNumber>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"status\"\r\n              label=\"status\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please select the status of this flight!\"\r\n              }]}>\r\n              <Select >{optionsData}</Select>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"airplaneId\"\r\n              label=\"Airplane Id\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please select the airplane id for this flight!\"\r\n              }]}>\r\n              <Input placeholder=\"e.g. A380\"></Input>\r\n            </FormItem>\r\n\r\n\r\n          </>\r\n        );\r\n      };\r\n\r\n      const renderFooter = () => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleCreateModalVisible(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => handleNext()}>\r\n              Submit\r\n            </Button>\r\n          </>\r\n        );\r\n      };\r\n\r\n    return (\r\n        <Modal\r\n      destroyOnClose\r\n      title=\"Add Flight\"\r\n      visible={modalVisible}\r\n      onCancel={() => onCancel()}\r\n      footer={renderFooter()}\r\n      \r\n    >\r\n      {/* {props.children} */}\r\n\r\n      <Form\r\n          {...formLayout}\r\n          form={form}\r\n          name=\"flight\"\r\n          className=\"flight-form\"\r\n        >{renderContent()}\r\n        </Form>\r\n\r\n    </Modal>\r\n    )\r\n\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { ConsoleSqlOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst {Option} = Select;\r\n\r\nconst formLayout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 13 },\r\n  };\r\n\r\nexport default function UpdateForm(props){\r\n    const {onCancel,onSubmit,updateModalVisible,handleUpdateModalVisible,values,handleUpdate}=props;\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const disabledDate = (current) => {\r\n      // Can not select days before today and today\r\n      return current && current < moment().endOf('day');\r\n    }\r\n\r\n    const [formVals,setFormVals] = useState({\r\n        ...props.values,\r\n    });\r\n\r\n\r\n    const optionList = [\"cancelled\",\"checking in\",\"delayed\",\"on time\",\"full\"]\r\n\r\n    const optionDiaplayMapping = {\r\n      \"cancelled\":\"Cancelled\",\r\n      \"checking in\":\"Checking In\",\r\n      \"delayed\":\"Delayed\",\r\n      \"on time\":\"On Time\",\r\n      \"full\":\"Full/Not Avaliable For Purchase\"\r\n    }\r\n\r\n    const optionMapping = optionList.map((item)=>(<Option key={item} value={item}>{optionDiaplayMapping[item]}</Option>))\r\n\r\n    const handleNext = async () => {\r\n        const fieldsValue = await form.validateFields();\r\n        setFormVals({ ...formVals, ...fieldsValue});\r\n        handleUpdate({ ...formVals, ...fieldsValue});\r\n      };\r\n\r\n      const renderContent = () => {\r\n        return (\r\n          <>\r\n            <FormItem\r\n              name=\"flightNum\"\r\n              label=\"Flight Number\"\r\n              rules={[{ required: true, message: 'Please input flight number!' }]}\r\n            >\r\n              <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"airlineName\"\r\n              label=\"Airline Name\"\r\n              rules={[{ required: true, message: 'Please input airline name!' }]}\r\n            >\r\n              <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>\r\n    \r\n            {(<FormItem\r\n              name=\"sourceAirportName\"\r\n              label=\"Departure Airport\"\r\n              \r\n              rules={[{ required: true, message: 'Please Input Departure Airport' }]}\r\n            >\r\n              <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>)}\r\n            {/* {(<FormItem\r\n            name=\"departureTime\"\r\n            label=\"Departure Time\"\r\n            rules={[{ required: true, message: 'Please input Departure Time' }]}\r\n            >\r\n            <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n              //  disabledDate={disabledDate}\r\n               showTime={{format:\"YYYY-MM-DD HH:mm:ss\"}}></DatePicker>\r\n            </FormItem>)} */}\r\n\r\n            <FormItem\r\n            name=\"destAirportName\"\r\n            label=\"Arrival Airport\"\r\n            \r\n            rules={[{ required: true, message: 'Please input  Arrival Airport' }]}\r\n            >\r\n            <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>\r\n\r\n            {/* <FormItem\r\n            name=\"arrivalTime\"\r\n            label=\"Arrival Time\"\r\n            rules={[{ required: true, message: 'Please input Departure Time' }]}\r\n            >\r\n            <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n              //  disabledDate={disabledDate}\r\n               showTime={{format:\"YYYY-MM-DD HH:mm:ss\"}}></DatePicker>\r\n            </FormItem> */}\r\n\r\n            <FormItem\r\n            name=\"price\"\r\n            label=\"price\"\r\n            \r\n            rules={[{ required: true, message: 'Please input the price' }]}\r\n            >\r\n            <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>\r\n            <FormItem\r\n            name=\"status\"\r\n            label=\"status\"\r\n            rules={[{ required: true, message: 'Please select the status' }]}\r\n            >\r\n            <Select>\r\n              {optionMapping}\r\n            </Select>\r\n            </FormItem>\r\n          </>\r\n        );\r\n      };\r\n    \r\n      const renderFooter = () => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleUpdateModalVisible(false, values)}>取消</Button>\r\n            <Button type=\"primary\" onClick={() => handleNext()}>\r\n              提交\r\n            </Button>\r\n          </>\r\n        );\r\n      };\r\n  \r\n    return (\r\n    <Modal\r\n        width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title=\"Update Flight\"\r\n        visible={updateModalVisible}\r\n        footer={renderFooter()}\r\n        onCancel={() => handleUpdateModalVisible()}\r\n      >\r\n  \r\n        <Form\r\n          {...formLayout}\r\n          form={form}\r\n          initialValues={{\r\n            flightNum: formVals.flightNum,\r\n            airlineName: formVals.airlineName,\r\n            sourceAirportName: formVals.sourceAirportName,\r\n            // departureTime:formVals.dept_time,\r\n            destAirportName: formVals.destAirportName,\r\n            // arrivalTime:formVals.arri_time,\r\n            price:formVals.price,\r\n            status:formVals.status\r\n          }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n      </Modal>)\r\n}","import React, { useState } from 'react';\r\nimport { Table, Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { ContinuousLegend } from '@antv/g2/lib/dependents';\r\n\r\nexport default function DetailsTable(props){\r\n    const {detailModalVisible,onCancel,handleDetailModalVisible,values} = props;\r\n\r\n    console.log(values);\r\n    \r\n    // const dataSource = [{\r\n    //     email:\"asda\",\r\n    //     name:\"Jack\",\r\n    //     building_num:\"No.10\",\r\n    //     street:\"Baker Street\",\r\n    //     city:\"NYC\",\r\n    //     state:\"USA\",\r\n    //     phone:\"1231231234\",\r\n    //     passportNumber:\"E1231414\",\r\n    //     passportExpiration:\"2029-10-21\",\r\n    //     passportCountry:\"China\",\r\n    //     birthday:\"1999-02-02\"\r\n    // }]\r\n\r\n    const dataSource = values.passengers;\r\n    const dataMap = dataSource.map((item)=>{\r\n        return ({\r\n            email:item.email,\r\n            name:item.name,\r\n            buildingNumber:item.buildingNumber,\r\n            street:item.street,\r\n            city:item.city,\r\n            livingState:item.livingState,\r\n            phoneNumber:item.phoneNumber,\r\n            passportExpiration:moment(item.passportExpiration).format(\"yyyy-MM-DD\"),\r\n            passportCountry:item.passportCountry,\r\n            passportNumber:item.passportNumber,\r\n            birthday:moment(item.birthday).format(\"yyyy-MM-DD\")\r\n        })\r\n    })\r\n\r\n    const columns=[\r\n        {\r\n            title:\"Email\",\r\n            dataIndex:\"email\",\r\n            key:\"email\",\r\n            textWrap:\"word-break\",\r\n            width:150,\r\n            ellipsis:true,\r\n            fixed:\"left\"\r\n        },{\r\n            title:\"Name\",\r\n            dataIndex:\"name\",\r\n            key:\"name\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            \r\n        },\r\n        {\r\n            title:\"Building Number\",\r\n            dataIndex:\"buildingNumber\",\r\n            key:\"building\"\r\n        },\r\n        {\r\n            title:\"Street\",\r\n            dataIndex:\"street\",\r\n            key:\"street\"\r\n        },\r\n        {\r\n            title:\"City\",\r\n            dataIndex:\"city\",\r\n            key:\"city\"\r\n        },{\r\n            title:\"State\",\r\n            dataIndex:\"livingState\",\r\n            key:\"state\"\r\n        },{\r\n            title:\"Phone No.\",\r\n            dataIndex:\"phoneNumber\",\r\n            key:\"phone\",\r\n            textWrap:\"word-break\",\r\n            width:150,\r\n            ellipsis:true,\r\n        },{\r\n            title:\"Passport No.\",\r\n            dataIndex:\"passportNumber\",\r\n            key:\"passportnum\"\r\n        },{\r\n            title:\"Passport Exp.\",\r\n            dataIndex:\"passportExpiration\",\r\n            key:\"passportexp\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },{\r\n            title:\"Passport Country\",\r\n            dataIndex:\"passportCountry\",\r\n            key:\"passportCountry\"\r\n        },{\r\n            title:\"Birthday\",\r\n            dataIndex:\"birthday\",\r\n            key:\"birthday\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    return (\r\n    <>\r\n    <Modal \r\n    destroyOnClose\r\n      title=\"Customer Details\"\r\n      visible={detailModalVisible}\r\n      onCancel={() => onCancel()}\r\n      width={1300}\r\n      footer={[]}\r\n      >\r\n    <Table scroll={{x:1300}} columns={columns} dataSource={dataMap}>\r\n\r\n    </Table></Modal></>\r\n    )\r\n}","import React,{useEffect,useState,useRef} from \"react\";\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\nimport axios from \"axios\";\r\nimport {dateFormat} from \"../../lib/dateFormat\";\r\nimport \"antd/dist/antd.css\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport ProTable from '@ant-design/pro-table';\r\nimport { PageContainer, FooterToolbar } from '@ant-design/pro-layout';\r\nimport {PlusOutlined,DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport {Button, Space, Tag,Popconfirm, message,Tooltip} from \"antd\";\r\nimport { statusColor } from \"../../lib/statusTag\";\r\nimport CreateForm from \"./CRUDElements/CreateForm\";\r\nimport UpdateForm from \"./CRUDElements/UpdateForm\";\r\nimport DetailsTable from \"./CRUDElements/DetailsForm\";\r\n\r\nexport default function FlightCRUD({loginInfo}){\r\n\r\n    //控制添加Modal的可视\r\n    const [createModalVisible,handleCreateModalVisible] = useState(false);\r\n    //控制更新Modal的可视，由于需要数据回显，故和createModal分开写\r\n    const [updateModalVisible,handleUpdateModalVisible] = useState(false);\r\n    const [detailModalVisible,handleDetailModalVisible] = useState(false);\r\n    const [selectedRows,setSelectedRows] = useState([]);\r\n    //设置回显的数据\r\n    const [stepFormValues, setStepFormValues] = useState({});\r\n    //用于判断是否能够多选\r\n    const [radioValue, setRadioValue] = useState('read');\r\n    //从后台api获取的数据\r\n    const [apiData, setApiData] = useState([]);\r\n    //全局变量，在整个生命周期都有效\r\n    const actionRef = useRef();\r\n    //全局变量，用于控制是否加载默认数据\r\n    const defaultRef = useRef(true);\r\n    \r\n    //异步方法提交数据, 注意这里返回一个异步函数\r\n    const fetchFlightData = async (query)=>{\r\n        return axios({\r\n          url:\"http://localhost:8080/airlineStaff/findAllFlightsForAirline\",\r\n          method:\"GET\",\r\n          params:{\r\n            airlineName:loginInfo.current?loginInfo.current.airlineName:\"Spring Airlines\"\r\n          }\r\n        }).then(function(response){\r\n          if(response.data){\r\n              defaultRef.current = false;\r\n              return {\"data\":{...response.data},\"success\":true};\r\n          }else{\r\n             return {\"data\":{},\"success\":false};\r\n          }\r\n        }).catch(function(){\r\n          message.error(\"Back end server not started! Render Default Date!\");\r\n          return {\"data\":dataSource,\"success\":true};\r\n        })  \r\n       \r\n    }\r\n\r\n    const fetchFilteredFlightData = async (query)=>{\r\n      return axios({\r\n        url:\"http://localhost:8080/airlineStaff/findAllFilteredFlights\",\r\n        method:\"POST\",\r\n        data:query\r\n      }).then(function(response){\r\n        if(response.data){\r\n            return {\"data\":{...response.data},\"success\":true};\r\n        }else{\r\n           return {\"data\":{},\"success\":false};\r\n        }\r\n      }).catch(function(){\r\n        message.error(\"Back end server not started!Render Default Data!\");\r\n        return {\"data\":dataSource,\"success\":true};\r\n      })  \r\n     \r\n  }\r\n\r\n    const dataSource = {\r\n      \"records\":[\r\n        {\r\n          flightNum: \"MU12243234\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"on time\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        {\r\n          flightNum: \"MU1224\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"on time\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        {\r\n          flightNum: \"MU234\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"on time\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        \r\n      ],\"total\":12,\"success\":true};\r\n\r\n\r\n    const handleDelete= (flight_id,airline_name)=>{\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/deleteFlight\",\r\n          method:\"POST\",\r\n          data:qs.stringify({\r\n            flightNum:flight_id,\r\n            airlineName:airline_name\r\n          })\r\n        }).then(function(response){\r\n          if(response.data){\r\n            actionRef.current.reload();\r\n\r\n        message.success(\"Click on Yes\");\r\n          }\r\n        }).catch(function(response){\r\n          message.success(\"Delete Failed\");\r\n        });\r\n        \r\n    }\r\n\r\n    const handleUpdate = (flight_info)=>{\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/updateStatus\",\r\n          method:\"POST\",\r\n          data:{\r\n            flightNum:flight_info.flightNum,\r\n            airlineName:flight_info.airlineName,\r\n            status:flight_info.status,\r\n          }\r\n\r\n        }).then(function(response){\r\n          if(response.data===\"success\"){\r\n            handleUpdateModalVisible(false);\r\n            message.success(\"Update Succeed!\");\r\n          }\r\n        }).catch(function(response){\r\n          message.error(\"Server not responding!\")\r\n        })\r\n    }\r\n\r\n    const handleUpdateMany =()=>{\r\n      \r\n    }\r\n\r\n    //用于提交数据之后\r\n    const handleCreate = (values)=>{\r\n      console.log(values);\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/addNewFlight\",\r\n          method:\"post\",\r\n          data:{...values,\r\n            departureTime:moment(values.departureTime).format(\"yyyy-MM-DD HH:mm:ss\"),\r\n            arrivalTime:moment(values.arrivalTime).format(\"yyyy-MM-DD HH:mm:ss\")}\r\n        }).then(function(response){\r\n          if(response.data===\"success\"){\r\n            message.success({\r\n              content: 'Insertion Completed',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n            handleCreateModalVisible(false);\r\n            actionRef.current.reload();\r\n          }else{\r\n            message.error({\r\n              content: 'You have already inserted this airplane information!',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n          }\r\n        })\r\n        \r\n    }\r\n\r\n    const handleDetails =()=>{\r\n    }\r\n\r\n    const confirm = (e,record)=>{\r\n        handleDelete(record.flightNum,record.airlineName);\r\n    }\r\n\r\n    const cancel = (e)=>{\r\n        message.error(\"Click on No\");\r\n\r\n    }\r\n\r\n\r\n    // 表格列配置项\r\n    const columns = [\r\n        {\r\n            title: \"Flight Number\",\r\n            dataIndex:\"flightNum\",\r\n            key:\"flightNum\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            fixed:\"left\",\r\n            \r\n        },\r\n        {\r\n            title: \"Airline Name\",\r\n            dataIndex:\"airlineName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key:\"airlineName\"\r\n        },\r\n        {\r\n            title: \"Dept. Airport\",\r\n            dataIndex: \"sourceAirportName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key: \"sourceAirportName\"\r\n        },\r\n        {\r\n            title: \"Arri. Airport\",\r\n            dataIndex: \"destAirportName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key: \"destAirportName\"\r\n        },\r\n        {\r\n            title: \"Dept. Time\",\r\n            dataIndex: \"departureTime\",\r\n            valueType:\"dateTime\",\r\n            // textWrap:\"word-break\",\r\n            width:150,\r\n            ellipsis:true,\r\n            key: \"departureTime\"\r\n        },\r\n        {\r\n            title: \"Arri. Time\",\r\n            dataIndex: \"arrivalTime\",\r\n            valueType:\"dateTime\",\r\n            key: \"arrivalTime\",\r\n            width:150,\r\n            // textWrap:\"word-break\",\r\n       \r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            dataIndex: \"price\",\r\n            hideInSearch:true,\r\n            key: \"price\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Airplane ID\",\r\n            dataIndex: \"airplaneId\",\r\n            hideInSearch:true,\r\n            key: \"airplaneId\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Status\",\r\n            dataIndex: \"status\",\r\n            hideInSearch:true,\r\n            key: \"status\",\r\n            render: tags => (\r\n                <>\r\n                    {\r\n                        <Tag color={statusColor[tags]} key={tags}>\r\n                            {tags.toUpperCase()}\r\n                        </Tag>\r\n                    }\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            key: 'action',\r\n            hideInSearch:true,\r\n            fixed:\"right\",\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                \r\n                <Button onClick={()=>{\r\n                  handleDetailModalVisible(true);\r\n                  setStepFormValues(record);\r\n                }}>Details</Button>\r\n                 <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Operator\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>\r\n                <Button disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Operator\")?false:true:false} onClick={()=>{\r\n                    handleUpdateModalVisible(true);\r\n                    setStepFormValues(record);\r\n                }} type={'primary'} size={'small'} >\r\n                  <EditOutlined style={{fontSize: '15px'}} />\r\n                </Button></Tooltip>\r\n                <Popconfirm\r\n                     title=\"Are you sure to delete this row?\"\r\n                    onConfirm={(e)=>{confirm(e,record);}}\r\n                    onCancel={cancel}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                >\r\n                 <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Operator\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>\r\n                <Button disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Operator\")?false:true:false} onClick={()=>{\r\n                }} type={'primary'} size={'small'} danger >\r\n                  <DeleteOutlined style={{fontSize: '15px'}} />\r\n                </Button></Tooltip></Popconfirm>\r\n              </Space>\r\n        \r\n            )\r\n        }\r\n    ]\r\n\r\n    // 获取数据 \r\n    const getData = async (params,sort,filter) => {\r\n        // 组装查询参数，比如这里用 pageIndex 代替了 current\r\n        if(defaultRef.current==true){\r\n            const query = {\r\n                ...params,\r\n                pageIndex: params.current\r\n            };\r\n            delete query.current;\r\n\r\n            // 发起请求\r\n            const {data,success} = await fetchFlightData(query); //这里需要返回一个异步函数\r\n            \r\n            // 格式化返回数据\r\n            return {\r\n                data: data.records,\r\n                success,\r\n                total: data.total,\r\n            };\r\n        }else{\r\n            const query = {\r\n                ...params,\r\n                pageIndex: params.current\r\n            };\r\n            delete query.current;\r\n    \r\n            // 发起请求\r\n            const {data,success} = await fetchFilteredFlightData(query); //这里需要返回一个异步函数\r\n            \r\n            // 格式化返回数据\r\n            return {\r\n                data: data.records,\r\n                success,\r\n                total: data.total,\r\n            };\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <ProTable\r\n            columns={columns}\r\n            actionRef={actionRef}\r\n            request={getData}\r\n            rowKey={(record,index)=>index}\r\n            scroll={{\"y\":300,x:1300}}\r\n            form={{span:8}}\r\n            size={\"middle\"}\r\n            rowSelection={{\r\n                onchange:(_,selectedRows)=>setSelectedRows(selectedRows),\r\n            }}\r\n            toolBarRender={() => [\r\n              <Tooltip title={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?undefined:\"Insufficient Privileges!\":undefined} color={\"orange\"}>\r\n            <Button key=\"3\" type=\"primary\" disabled={loginInfo.current?loginInfo.current.permissionDescription.includes(\"Admin\")?false:true:false} onClick={()=>{\r\n                handleCreateModalVisible(true);\r\n\r\n            }}>\r\n                <PlusOutlined />\r\n                Add Flight\r\n            </Button></Tooltip>,\r\n        ]}\r\n        />\r\n\r\n        {selectedRows?.length > 0 && (\r\n        <FooterToolbar\r\n          extra={\r\n            <div>\r\n               <a style={{ fontWeight: 600 }}>{selectedRows.length}</a> items choosed &nbsp;&nbsp;\r\n            </div>\r\n          }\r\n        >\r\n          { radioValue === 'read' && (<Button\r\n            danger\r\n            type=\"primary\"\r\n            onClick={async () => {\r\n              await handleDelete(selectedRows);\r\n              setSelectedRows([]);\r\n              // @ts-ignore\r\n              actionRef.current?.reloadAndRest();\r\n            }}\r\n          >\r\n            批量删除\r\n          </Button>)}\r\n          { radioValue === 'upload'&&(<Button\r\n            type=\"primary\"\r\n            onClick={async () => {\r\n              await handleUpdateMany(selectedRows);\r\n              setSelectedRows([]);\r\n            }}\r\n          >\r\n            批量新增\r\n          </Button>)}\r\n        </FooterToolbar>\r\n      )}\r\n        \r\n\r\n      <CreateForm onSubmit={async (value) => {\r\n            // 发送请求到后端\r\n            const success = await handleUpdate(value);\r\n            if (success) {\r\n              //请求成功推出Modal页面\r\n              handleUpdateModalVisible(false);\r\n              //重置表单数据\r\n              setStepFormValues({});\r\n              //重新刷新子页面\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          onCancel={() => handleCreateModalVisible(false)} \r\n          modalVisible={createModalVisible}\r\n          handleCreateModalVisible={handleCreateModalVisible}\r\n          handleCreate={handleCreate}\r\n          className={\"createForm\"}>\r\n        {/* <ProTable\r\n          onSubmit={async (value) => {\r\n            const success = await handleCreate(value);\r\n            if (success) {\r\n              handleCreateModalVisible(false);\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          rowKey={[\"flight_id\",\"airline\"]}\r\n          type=\"form\"\r\n          columns={columns}\r\n          rowSelection={{}}\r\n        /> */}\r\n      </CreateForm>\r\n         \r\n      {stepFormValues && Object.keys(stepFormValues).length ? (\r\n        <UpdateForm\r\n        className=\"updateForm\"\r\n          onSubmit={async (value) => {\r\n            // 发送请求到后端\r\n            const success = await handleUpdate(value);\r\n            if (success) {\r\n              //请求成功推出Modal页面\r\n              handleUpdateModalVisible(false);\r\n              //重置表单数据\r\n              setStepFormValues({});\r\n              //重新刷新子页面\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          //取消update操作\r\n          onCancel={() => {\r\n              // 推出Modal\r\n            handleUpdateModalVisible(false);\r\n            //重置表单内容\r\n            setStepFormValues({});\r\n          }}\r\n          handleUpdateModalVisible={handleUpdateModalVisible}\r\n          updateModalVisible={updateModalVisible}\r\n          values={stepFormValues}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : null}\r\n\r\n      {stepFormValues && Object.keys(stepFormValues).length ? (\r\n        <DetailsTable className={\"DetailForm\"}\r\n          handleDetailModalVisible={handleDetailModalVisible}\r\n          detailModalVisible={detailModalVisible}\r\n          onCancel={() => {\r\n              // 推出Modal\r\n            handleDetailModalVisible(false);\r\n            //重置表单内容\r\n            setStepFormValues({});\r\n          }}\r\n          values={stepFormValues}\r\n        ></DetailsTable>):null}\r\n      \r\n    </div>\r\n        \r\n\r\n\r\n\r\n    );\r\n};\r\n","import {Card, Form, Input, Button,Table,InputNumber,Space,Spin,message} from 'antd';\r\nimport {Bar} from \"@ant-design/charts\";\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\n// 设置最大等待时间\r\naxios.defaults.timeout = 1000;\r\n\r\nexport default function ViewAgents({setNavigateBar}){\r\n\r\n    // sales 和 commission\r\n    const [activeTab,setActiveTab] = useState(\"sales\");\r\n    const [past,setPast] = useState(\"year\");\r\n    const [topK,setTopK] = useState(5);\r\n    const [data,setData]=useState(null);\r\n\r\n    const fixed = 5;\r\n    const topSalesData =[\r\n        {\r\n            type:\"22@23.com\",\r\n            sales:34\r\n        },\r\n        {\r\n            type:\"22@25.com\",\r\n            sales:38\r\n        },\r\n        {\r\n            type:\"aa@23.com\",\r\n            sales:30\r\n        },\r\n        {\r\n            type:\"s2a@43.com\",\r\n            sales:12\r\n        },\r\n        {\r\n            type:\"12@23.com\",\r\n            sales:56\r\n        }\r\n    ]\r\n\r\n    useEffect(()=>{\r\n        handleSearchSales(topK)\r\n    },[])\r\n\r\n    const topCommissionData=[\r\n        {\r\n            type:\"22@23.com\",\r\n            commission:340\r\n        },\r\n        {\r\n            type:\"22@25.com\",\r\n            commission:380\r\n        },\r\n        {\r\n            type:\"aa@23.com\",\r\n            commission:100\r\n        },\r\n        {\r\n            type:\"s2a@43.com\",\r\n            commission:120\r\n        },\r\n        {\r\n            type:\"12@23.com\",\r\n            commission:560\r\n        }\r\n    ];\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Ranking'},\r\n        {key: 'commission', tab: 'Commission Ranking'},\r\n    ]\r\n\r\n    const handleSearchSales=(value)=>{\r\n        \r\n        axios.get(\"http://localhost:8080/airlineStaff/getTopK\",{\r\n            params:{\r\n                type:\"sales\",\r\n                K:value,\r\n                past:past\r\n            },\r\n            timeout:1000\r\n        }).then(function(response){\r\n            if(response.data){\r\n                const dataMap = response.data.map((item)=>({type:item.email,sales:item.totalSales}));\r\n                setData(dataMap);\r\n            }\r\n        }).catch(function(response){\r\n            message.error(\"请求超时,加载默认数据\");\r\n            setData(topSalesData);  \r\n        })\r\n    }\r\n\r\n    const handleSearchCommission=(value)=>{\r\n\r\n        axios.get(\"http://localhost:8080/airlineStaff/getTopK\",{\r\n            params:{\r\n                type:\"commission\",\r\n                K:value,\r\n                past:past\r\n            }\r\n        }).then(function(response){\r\n            if(response.data){\r\n                const dataMap = response.data.map((item)=>({type:item.email,commission:item.commissionFees}));\r\n                setData(dataMap);\r\n            }\r\n        }).catch(function(response){\r\n            setData(topCommissionData);\r\n        })\r\n\r\n    }\r\n\r\n    const onTabChange = (key)=>{\r\n        setActiveTab(key);\r\n    \r\n        if(key===\"sales\"){\r\n            // setData(topSalesData);\r\n            setData(null);\r\n            handleSearchSales(topK);\r\n        }else{\r\n            // setData(topCommissionData);\r\n            setData(null);\r\n            handleSearchCommission(topK);\r\n        }\r\n    }\r\n\r\n    const onNumberChange=(value)=>{\r\n        //更新图标\r\n        setTopK(value);\r\n        if(value>topK){\r\n        if(activeTab===\"sales\"){\r\n            handleSearchSales(value);\r\n        }else if(activeTab===\"commission\"){\r\n            handleSearchCommission(value);\r\n        }}\r\n    }\r\n\r\n\r\n    var config = {\r\n        data: data?data.slice(0,topK):null,\r\n        xField: activeTab===\"sales\"?'sales':\"commission\",\r\n        yField: 'type',\r\n        legend: { position: 'top-left' },\r\n        barBackground: { style: { fill: 'rgba(0,0,0,0.1)' } },\r\n        interactions: [\r\n          {\r\n            type: 'active-region',\r\n            enable: false,\r\n          },\r\n        ],\r\n      };\r\n     \r\n\r\n    return (\r\n    <Card tabList={tabList}\r\n        activeTab={activeTab}\r\n        onTabChange={onTabChange}\r\n        tabBarExtraContent={<>\r\n        {activeTab===\"sales\"&&(<Space ><Button type={\"primary\"} onClick={()=>{setPast(\"month\")}}>Past Month</Button>\r\n        <Button  type={\"primary\"} onClick={()=>{setPast(\"year\")}}>Past Year</Button></Space>)}\r\n        <Space><span style={{marginRight:5,marginLeft:10}}>Top</span><InputNumber addonBefore=\"+\" addonAfter=\"$\" min={1} onChange={onNumberChange} defaultValue={fixed}></InputNumber><span style={{marginLeft:5}}>Agents</span></Space>\r\n        </>}\r\n        hoverable={true}>\r\n\r\n        {!data&&(<Spin size=\"large\"></Spin>)}\r\n        {data&&(<Bar \r\n        {...config}\r\n        sort \r\n        onReady={(plot)=>{\r\n                plot.chart.on(\"element:click\",(evt)=>{\r\n                });\r\n            }}\r\n        />)}\r\n\r\n\r\n\r\n    </Card>)\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space,message,Statistic} from 'antd';\r\nimport { Column } from '@ant-design/charts';\r\nimport React, {useState,useEffect,useRef} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport moment from \"moment\";\r\nimport cookie from 'react-cookies';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function ViewReports({loginInfo,setNavigateBar}){\r\n    const [data,setData]=useState([]);\r\n    const [totalSales,setTotalSales] = useState(undefined);\r\n    const past = useRef(\"year\");\r\n\r\n    const originalData = useRef([]);\r\n\r\n    const loadingHolder= Boolean(totalSales);\r\n    const navigate = useNavigate();\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{\r\n      // setData(sampleData);\r\n      getData(\"Spring Airlines\",null,null);\r\n    },[]);\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Report'},\r\n    ]\r\n\r\n\r\n    const getData = (airlineName,startDate,endDate)=>{\r\n      axios.get(\"http://localhost:8080/airlineStaff/viewReports\",\r\n      {\r\n        params:{\r\n          airlineName:loginInfo.current?loginInfo.current.airlineName:\"Spring Airlines\",\r\n          startDate:startDate?new Date(startDate):null,\r\n          endDate:endDate?new Date(endDate):null\r\n        }\r\n      }).then(function(response){\r\n          if(response.data[\"statusCode\"]==503){\r\n            loginInfo.current = null;\r\n                message.destroy();\r\n                message.error(\"Session Expired!\");\r\n                cookie.remove(\"JSESSIONID\");\r\n                setNavigateBar(\"global\");\r\n                navigate(\"/global\", {replace: true})\r\n          }else{\r\n          message.destroy();\r\n          message.success(\"Data loaded!\");\r\n          const dataMap = response.data.map((item)=>({type:item.interval,sales:item.value}))\r\n          const totalSales = dataMap.reduce(getSum,0);//这个零是初始化为零开始累加的意思\r\n          originalData.current = dataMap;\r\n          setData(dataMap);\r\n          setTotalSales(totalSales);}\r\n          \r\n\r\n      }).catch(function(){\r\n          message.error(\"Time out\");\r\n          originalData.current = sampleData;\r\n          setData(sampleData);\r\n      })\r\n    }\r\n\r\n    const getSum = (total,num)=>{\r\n      return total+num.sales;\r\n    }\r\n\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '家具家电',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '粮油副食',\r\n          sales: 52,\r\n        },\r\n        {\r\n          type: '生鲜水果',\r\n          sales: 61,\r\n        },\r\n        {\r\n          type: '美容洗护',\r\n          sales: 145,\r\n        },\r\n        {\r\n          type: '母婴用品',\r\n          sales: 48,\r\n        },\r\n        {\r\n          type: '进口食品',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '食品饮料',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '家庭清洁',\r\n          sales: 38,\r\n        },\r\n      ];\r\n      var config = {\r\n        data: data,\r\n        xField: 'type',\r\n        yField: 'sales',\r\n        label: {\r\n          position: 'middle',\r\n          style: {\r\n            fill: '#FFFFFF',\r\n            opacity: 0.6,\r\n          },\r\n        },\r\n        xAxis: {\r\n          label: {\r\n            autoHide: true,\r\n            autoRotate: false,\r\n          },\r\n        },\r\n        meta: {\r\n          type: { alias: '类别' },\r\n          sales: { alias: '销售额' },\r\n        },\r\n      };\r\n\r\n\r\n      const renderLastYear = ()=>{\r\n        const dataMap = originalData.current;\r\n        const totalSales = dataMap.reduce(getSum,0);//这个零是初始化为零开始累加的意思\r\n          setData(dataMap);\r\n          setTotalSales(totalSales);  \r\n               \r\n        }\r\n\r\n      const renderLastMonth = ()=>{\r\n        const dataMap = originalData.current.slice(-1);\r\n        setData(dataMap);\r\n        setTotalSales(dataMap.sales);\r\n      }\r\n\r\n      const renderRange = (value)=>{\r\n          if(value!=null){\r\n          getData(\"\",value[0],value[1]);}else{\r\n            getData(\"\",null,null);\r\n          }\r\n\r\n      }\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button>\r\n            <RangePicker picker=\"month\" onChange={renderRange}></RangePicker></Space>\r\n        )\r\n      }\r\n\r\n\r\n\r\n      return (\r\n      <Card title=\"Here is the sales report for the airline you work in.\"\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}\r\n      >\r\n      <Statistic title={\"Total Number of sold tickets over the last \"+past.current}\r\n                        value={totalSales}\r\n                        // loading={!loadingHolder}\r\n                        precision={2}\r\n                        style={{width: '100%'}}></Statistic>\r\n      <Column {...config} /></Card>);\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space,message} from 'antd';\r\nimport { Column } from '@ant-design/charts';\r\nimport React, {useState,useEffect,useRef} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nexport default function TopDestinations(){\r\n    const [data,setData]=useState([]);\r\n    const [startDate,setStartDate]=useState(undefined);\r\n    const [endDate,setEndDate] = useState(undefined);\r\n    const past = useRef(\"year\");\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{\r\n      getDestinationData(\"year\");\r\n    },[]);\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Report'},\r\n    ]\r\n\r\n    const getDestinationData = (past)=>{\r\n      axios.get(\"http://localhost:8080/airlineStaff/topDestinations\",\r\n      {\r\n        params:{\r\n          past:past,\r\n        }\r\n      }).then(function(response){\r\n          message.success(\"数据加载成功\");\r\n          const dataMap = response.data.map((item)=>({type:item.type,value:item.value}))\r\n          setData(dataMap);\r\n\r\n      }).catch(function(){\r\n          message.error(\"访问超时，使用默认数据\");\r\n          setData(sampleData);\r\n      })\r\n    }\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '家具家电',\r\n          value: 38,\r\n        },\r\n        {\r\n          type: '粮油副食',\r\n          value: 52,\r\n        },\r\n        {\r\n          type: '生鲜水果',\r\n          value: 61,\r\n        },\r\n        {\r\n          type: '美容洗护',\r\n          value: 145,\r\n        },\r\n        {\r\n          type: '母婴用品',\r\n          value: 48,\r\n        },\r\n        {\r\n          type: '进口食品',\r\n          value: 38,\r\n        },\r\n        {\r\n          type: '食品饮料',\r\n          value: 38,\r\n        },\r\n        {\r\n          type: '家庭清洁',\r\n          value: 38,\r\n        },\r\n      ];\r\n      var config = {\r\n        data: data,\r\n        xField: 'type',\r\n        yField: 'value',\r\n        label: {\r\n          position: 'middle',\r\n          style: {\r\n            fill: '#FFFFFF',\r\n            opacity: 0.6,\r\n          },\r\n        },\r\n        xAxis: {\r\n          label: {\r\n            autoHide: true,\r\n            autoRotate: false,\r\n          },\r\n        },\r\n        meta: {\r\n          type: { alias: '类别' },\r\n          sales: { alias: '销售额' },\r\n        },\r\n      };\r\n\r\n\r\n      const renderLastYear = ()=>{\r\n        past.current = \"year\";\r\n        getDestinationData(\"year\");\r\n      }\r\n\r\n      const renderLast3Month = ()=>{\r\n        past.current = \"3 months\";\r\n        getDestinationData(\"month\");\r\n\r\n      }\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLast3Month} type={\"primary\"}>Last 3 Months</Button>\r\n           </Space>\r\n        )\r\n      }\r\n\r\n\r\n\r\n      return (\r\n      <Card title={\"Top Destinations in the last\"+ past.current}\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}\r\n      >\r\n      <Column {...config} /></Card>);\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space,Statistic,message,Spin} from 'antd';\r\nimport { Pie } from '@ant-design/charts';\r\nimport React, {useState,useEffect,useRef} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\naxios.defaults.timeout = 1000;\r\n\r\nexport default function RevenueComparison(){\r\n\r\n    const [data,setData]=useState(null);\r\n    const [startDate,setStartDate]=useState(undefined);\r\n    const [endDate,setEndDate] = useState(undefined);\r\n    const [totalSales,setTotalSales] = useState(undefined);\r\n    const past = useRef(\"year\");\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{\r\n      getRevenueData(\"year\",\"Spring Airlines\");\r\n    },[]);\r\n\r\n    const getRevenueData = (value,airlineName)=>{\r\n      axios.get(\"http://localhost:8080/airlineStaff/revenueComparison\",\r\n      {\r\n        params:{\r\n          past:value,\r\n          airlineName:\"Spring Airlines\"\r\n        }\r\n      }).then(function(response){\r\n          message.success(\"Data loaded!\");\r\n          const dataMap = response.data.map((item)=>({type:item.type,value:item.value}))\r\n          const totalSales = dataMap.reduce(getSum,0);//这个零是初始化为零开始累加的意思\r\n          setData(dataMap);\r\n          setTotalSales(totalSales)\r\n\r\n      }).catch(function(){\r\n          message.error(\"访问超时，使用默认数据\");\r\n          setData(sampleData);\r\n      })\r\n\r\n    }\r\n\r\n\r\n    const getSum = (total,num)=>{\r\n      return total+num.value;\r\n    }\r\n\r\n\r\n    const tabList = [\r\n        {key: 'revenue', tab: 'Revenue Comparison'},\r\n    ]\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '分类一',\r\n          value: 27,\r\n        },\r\n        {\r\n          type: '分类二',\r\n          value: 25,\r\n        },\r\n        {\r\n          type: '分类三',\r\n          value: 18,\r\n        },\r\n        {\r\n          type: '分类四',\r\n          value: 15,\r\n        },\r\n        {\r\n          type: '分类五',\r\n          value: 10,\r\n        },\r\n        {\r\n          type: '其他',\r\n          value: 5,\r\n        },\r\n      ];\r\n      var config = {\r\n        appendPadding: 10,\r\n        data: data,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        radius: 0.75,\r\n        label: {\r\n          type: 'spider',\r\n          labelHeight: 28,\r\n          content: '{name}\\n{percentage}',\r\n        },\r\n        interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\r\n      };\r\n\r\n      const renderLastYear = ()=>{\r\n        past.current = \"year\";\r\n        getRevenueData(\"year\",\"Spring Airlines\");\r\n    }\r\n\r\n        const renderLastMonth = ()=>{\r\n          past.current = \"month\";\r\n          getRevenueData(\"month\",\"Spring Airlines\")\r\n\r\n    }\r\n\r\n    const loadingHolder = Boolean(data);\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button>\r\n            </Space>\r\n        )\r\n      }\r\n\r\n\r\n      return (\r\n      <Card title=\"Here is the brief report\"\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}>\r\n      <Statistic title={\"Total Sales in (USD) over the last \"+past.current}\r\n                        value={totalSales}\r\n                        loading={!loadingHolder}\r\n                        precision={2}\r\n                        style={{width: '100%'}}></Statistic>\r\n         {!data&&(<Spin size=\"large\"></Spin>)}\r\n       {data&&( <Pie {...config} />)}\r\n      </Card>);\r\n}","import {Card, Modal,Form, Input,Tooltip, Button,Table,DatePicker,InputNumber,Space,Spin,message,Tag} from 'antd';\r\nimport {Bar} from \"@ant-design/charts\";\r\nimport React, {useState,useEffect,useRef} from \"react\";\r\nimport {LockOutlined, UserOutlined,QuestionCircleOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport {statusColor} from \"../../lib/statusTag\";\r\n\r\n// 设置最大等待时间\r\naxios.defaults.timeout = 1000;\r\nconst {RangePicker} = DatePicker;\r\n\r\nexport default function ViewFrequent({loginInfo}){\r\n     // sales 和 commission\r\n     const [activeTab,setActiveTab] = useState(\"sales\");\r\n     const [topK,setTopK] = useState(10);\r\n     const [data,setData]=useState([]);\r\n     const originData = useRef(null);\r\n     const [modalVisiblibity,setModalVisibility] = useState(false);\r\n     const [modalEmail,setModalEmail] = useState(\"\");\r\n     const [tableData,setTableData] = useState([]);\r\n\r\n \r\n     const topSalesData =[\r\n         {\r\n             customer:\"22@23.com\",\r\n             tickets:2\r\n         },\r\n         {\r\n            customer:\"22@25.com\",\r\n            tickets:8\r\n         },\r\n         {\r\n            customer:\"aa@23.com\",\r\n            tickets:3\r\n         },\r\n         {\r\n            customer:\"s2a@43.com\",\r\n            tickets:12\r\n         },\r\n         {\r\n            customer:\"12@23.com\",\r\n            tickets:5\r\n         }\r\n     ]\r\n\r\n\r\n     const tableSampleData = [\r\n         {\r\n             key:\"1\",\r\n             flight_id:\"MA1234\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090,\r\n             dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n         },\r\n         {\r\n             key:\"2\",\r\n             flight_id:\"MH3455\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090,\r\n             dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n         },\r\n         {\r\n             key:\"3\",\r\n             flight_id:\"MK5888\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090,\r\n             dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n         },{\r\n            key:\"4\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"5\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"6\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"7\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"8\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"9\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"10\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"11\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        },{\r\n            key:\"12\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090,\r\n            dept:\"PVG\",\r\n             arri:\"SZX\",\r\n             status:[\"on time\"]\r\n        }\r\n     ]\r\n\r\n\r\n     const tableColumns = [\r\n        {\r\n            title:\"Flight Number\",\r\n            dataIndex: \"flight_id\",\r\n            key:\"flight_id\"\r\n        },\r\n        {   \r\n            title:\"Airline\",\r\n            dataIndex:\"airline\",\r\n            key:\"airline\"\r\n        },\r\n        {\r\n            title: \"Dept. Time\",\r\n            dataIndex: \"dept_time\",\r\n            key: \"dept_time\"\r\n        },\r\n        {\r\n            title: \"Arri. Time\",\r\n            dataIndex: \"arri_time\",\r\n            key: \"arri_time\"\r\n        },\r\n        {\r\n            title: \"Dept. Airport\",\r\n            dataIndex:\"dept\",\r\n            key:\"dept\"\r\n\r\n        },\r\n        {\r\n            title: \"Arri. Airport\",\r\n            dataIndex:\"arri\",\r\n            key:\"arri\"\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            dataIndex: \"price\",\r\n            key: \"price\"\r\n        },\r\n        {\r\n            title: \"Status\",\r\n            dataIndex: \"status\",\r\n            key: \"status\",\r\n            render: tags => (\r\n                <>\r\n                    {tags.map(status => (\r\n                        <Tag color={statusColor[status]} key={status}>\r\n                            {status.toUpperCase()}\r\n                        </Tag>\r\n                    ))\r\n                    }\r\n                </>\r\n            )\r\n        }\r\n     ]\r\n \r\n     useEffect(()=>{\r\n        //  setData(topSalesData);\r\n        getCustomerData(topK);\r\n     },[])\r\n \r\n     const tabList = [\r\n         {key: 'customer', tab: 'Most Frequent Customers'},\r\n     ]\r\n \r\n \r\n     const onNumberChange=(value)=>{\r\n         //更新图标\r\n         setTopK(value);\r\n         if(value>topK){\r\n         getCustomerData(value);}\r\n     }\r\n\r\n     const getCustomerData = (value)=>{\r\n        axios.get(\"http://localhost:8080/airlineStaff/getTopKCustomers\",\r\n        {\r\n            params:{\r\n                K:value,\r\n                airlineName:loginInfo.current?loginInfo.current.airlineName:null\r\n            },\r\n            }).then(function(response){\r\n                if(response.data){\r\n                    originData.current = response.data;\r\n                    const dataMap = processData();\r\n                    message.destroy();\r\n                    message.success(\"Data Loaded!\");\r\n                    setData(dataMap);\r\n                }\r\n        }).catch(function(response){\r\n            setData(topSalesData);\r\n            setTableData(tableSampleData);\r\n            message.destroy();\r\n            message.error(\"Data Loading Failed!\");\r\n        })\r\n     }\r\n\r\n     const processTableData = (email)=>{\r\n         if(originData.current===null){\r\n             return tableSampleData;\r\n         }\r\n        const tableData = originData.current.filter((item)=>item.email===email)[0];\r\n        if(tableData.length==0){\r\n            return []\r\n        }else{\r\n            const takenFlights = tableData.takenFlights;\r\n            \r\n        const tableDataMap = takenFlights.map((item)=>{\r\n            return ({\r\n                key:[item.flightNum,item.airlineName],\r\n                flight_id:item.flightNum,\r\n                airline:item.airlineName,\r\n                dept_time:moment(item.departureTime).format(\"yyyy-MM-DD HH:mm:ss\"),\r\n                arri_time:moment(item.arrivalTime).format(\"yyyy-MM-DD HH:mm:ss\"),\r\n                dept:item.sourceAirportName,\r\n                arri:item.destAirportName,\r\n                price:item.price,\r\n                status:[item.status]\r\n            })\r\n        }\r\n        )\r\n        return tableDataMap;\r\n    }\r\n        \r\n     }\r\n\r\n     const processData = (value,past)=>{\r\n        const dataMap = originData.current.map((item)=>{\r\n                return {customer:item.email,tickets:item.ticketsTotal}\r\n            \r\n        }\r\n            )\r\n        return dataMap;\r\n     }\r\n\r\n\r\n    const renderTabExtra = ()=>{\r\n\r\n\r\n      return (\r\n          <Space direction=\"horizontal\" size={10}>\r\n          {/* <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n          <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button> */}\r\n          {/* <RangePicker picker=\"day\" onChange={handleChangeTime}></RangePicker> */}\r\n          <>\r\n          <span style={{marginRight:2}}>Top</span>\r\n            <InputNumber min={1} onChange={onNumberChange} defaultValue={5}></InputNumber>\r\n          <span style={{marginLeft:2}}>Customers</span>\r\n          </>\r\n          <Tooltip color={\"orange\"} placement=\"topLeft\" title=\"Click the bar to check the flights taken\"><QuestionCircleOutlined/></Tooltip>\r\n          </Space>\r\n      )\r\n    }\r\n \r\n \r\n     var config = {\r\n         data: data?data.slice(0,topK):[],\r\n         xField: \"tickets\",\r\n         yField: 'customer',\r\n         legend: { position: 'top-left' },\r\n         barBackground: { style: { fill: 'rgba(0,0,0,0.1)' } },\r\n         interactions: [\r\n           {\r\n             type: 'active-region',\r\n             enable: false,\r\n           },\r\n         ],\r\n         meta:{\r\n             type:{\r\n                 alias: 'Customer Email'\r\n             },\r\n             tickets:{\r\n                 alias: 'Number of Tickets Bought'\r\n             }\r\n         }\r\n        };\r\n       \r\n\r\n\r\n    // 编写图例点击事件\r\n    const handleClick =(event)=>{\r\n        const tableDataMap = processTableData(event.data.data.customer);\r\n        setTableData(tableDataMap);\r\n        setModalEmail(event.data.data.customer);\r\n        setModalVisibility(true);\r\n\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        // 推出Modal\r\n        setModalVisibility(false);\r\n    }\r\n\r\n\r\n    return (<Card tabList={tabList}\r\n        tabBarExtraContent={renderTabExtra()}\r\n        hoverable={true}>\r\n        \r\n        {!data&&(<Spin size={\"large\"}></Spin>)}\r\n        {data&&(<><Bar \r\n        {...config}\r\n        sort \r\n        onReady={(plot)=>{\r\n            plot.chart.on(\"element:click\",handleClick\r\n                );\r\n            }}\r\n        />\r\n        <Modal\r\n        destroyOnClose\r\n        title={\"Flight Taken with \"+ modalEmail}\r\n        visible={modalVisiblibity}\r\n        onCancel={handleCancel}\r\n        width={900}>\r\n            <Card >\r\n                <Table columns={tableColumns} dataSource={tableData} size={\"middle\"}>\r\n\r\n                </Table>\r\n            </Card>\r\n\r\n        </Modal></>)}\r\n        \r\n    </Card>)\r\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,Select,message} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\nconst {Search} = Input;\r\n\r\nconst {Option} = Select;\r\n\r\nexport default function AddAgents({loginInfo}) {\r\n\r\n    const [email,setEmail] = useState(undefined);\r\n    const [searchResult,setSearchResult] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSearch=()=>{\r\n        axios({\r\n            url:\"\",\r\n            method:\"POST\",\r\n            data:{}\r\n        }).then(function(response){\r\n            if(response.data){\r\n                setSearchResult(response.data);\r\n            }else{\r\n                console.log(\"请求无结果\");\r\n            }\r\n        }).catch(function(response){\r\n          message.error(\"Back end server not started!\");\r\n        })\r\n    }\r\n\r\n\r\n    const handleChange = (value)=>{\r\n        setEmail(value);\r\n    }\r\n\r\n\r\n    const onFinish =(values)=>{\r\n      axios.post(\"http://localhost:8080/airlineStaff/addBookingAgent\",\r\n      qs.stringify({...values,airlineName:loginInfo.current?loginInfo.current.airlineName:\"Spring Airlines\"})).then(function(response){\r\n        if(response.data){\r\n          if(response.data.success===true){\r\n            message.success(\"Addition Succeeded!\")\r\n          }else{\r\n            const responseMapping = response.data;\r\n            if(responseMapping){\r\n              if(responseMapping.emailValid===false){\r\n                form.setFields([\r\n                  {\r\n                      name:\"email\",\r\n                      errors:[ \"BookingAgent Not Found!\"]\r\n                  }\r\n              ])\r\n              }else if(responseMapping.workingValid===false){\r\n                form.setFields([\r\n                  {\r\n                      name:\"email\",\r\n                      errors:[ \"BookingAgent has already been assigned this airline!\"]\r\n                  }\r\n              ])\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    }\r\n\r\n    const options = searchResult.map((item,index)=>(<Option key={index}>{item}</Option>));\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 8,\r\n          },\r\n        },\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n          },\r\n        },\r\n      };\r\n\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n\r\n    return (\r\n        <Card title=\"Add Booking Agents\">\r\n            <Form\r\n            {...formItemLayout}\r\n                form={form}\r\n                name=\"Add Agents\"\r\n                onFinish={onFinish}\r\n                 scrollToFirstError>\r\n                <Form.Item name=\"email\" \r\n                label=\"Agent Email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message:\"Please don't leave blank the agent information!\"\r\n                  },\r\n                  {\r\n                    type:\"email\",\r\n                    message:\"Please input the right format of an email\"\r\n                  },\r\n                  \r\n                  ]}\r\n                hasFeedback>\r\n                    <Input style={{width:'80%'}}/>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item {...tailFormItemLayout}> \r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Add\r\n                </Button>\r\n            </Form.Item>\r\n            </Form>\r\n\r\n        </Card>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,Select,Checkbox,message} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nconst options = [\"Admin\",\"Operator\"];\r\n\r\nconst defaultCheckedList = [\"Admin\"];\r\nexport default function GrantPermission({loginInfo}){\r\n\r\n    const [checkedList, setCheckedList] = React.useState(defaultCheckedList);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish=(values)=>{\r\n      form.setFields([\r\n        {\r\n            name:\"username\",\r\n            errors:[]\r\n        }\r\n      ]);\r\n      form.setFields([\r\n        {\r\n            name:\"permission\",\r\n            errors:[]\r\n        }\r\n      ]);\r\n        axios(\r\n          {url:\"http://localhost:8080/airlineStaff/grantPermission\",\r\n           method:\"POST\",\r\n           data:{\r\n            userName:values.username,\r\n            airlineName:\"Cathay Pacific\",\r\n            permission:checkedList\r\n          }\r\n        }).then(function(response){\r\n          if(response.data){\r\n            if(response.data.success===true){\r\n                message.success(\"Success\");\r\n            }else{\r\n              const errorMapping = response.data;\r\n              if(errorMapping.nameValid===false){\r\n                form.setFields([\r\n                  {\r\n                      name:\"username\",\r\n                      errors:[ \"AirlineStaff Not Found!\"]\r\n                  }\r\n              ])\r\n              }else if(errorMapping.permissionValid===false){\r\n                form.setFields([\r\n                  {\r\n                      name:\"permission\",\r\n                      errors:[ \"The airlineStaff already has the permission!\"]\r\n                  }\r\n              ])\r\n              }\r\n            }\r\n\r\n          }\r\n        })\r\n    }\r\n\r\n    const handleChange = (list)=>{\r\n      setCheckedList(list);\r\n    }\r\n\r\n\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 8,\r\n          },\r\n        },\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n          },\r\n        },\r\n      };\r\n\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n\r\n\r\n    return (<Card title=\"Grant Permission\">\r\n        <Form \r\n        {...formItemLayout}\r\n                form={form}\r\n                name=\"Add Agents\"\r\n                onFinish={onFinish}\r\n                 scrollToFirstError>\r\n        <Form.Item name=\"username\" label=\"Staff UserName\"\r\n          rules={[\r\n            {\r\n              required:true,\r\n              message:\"Please input the username!\"\r\n            }\r\n          ]}>\r\n            <Input/>\r\n\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"permission\" label=\"Permission Type\">\r\n        <CheckboxGroup options={options} value={defaultCheckedList} onChange={handleChange} />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}> \r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Grant Permission\r\n                </Button>\r\n            </Form.Item>\r\n\r\n\r\n        </Form>\r\n\r\n\r\n\r\n\r\n    </Card>)\r\n}","import React, {useEffect, useState,useRef} from \"react\"\nimport {Layout, Menu, Breadcrumb,Dropdown,Avatar,Button,Space,Modal,List,message} from \"antd\";\nimport {CarryOutOutlined, SendOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {useNavigate} from \"react-router-dom\";\nimport CustomerSidebar from \"../component/customer/CustomerSidebar\";\nimport ViewFlights from \"../component/flight/ViewFlights\";\nimport SearchFlights from \"../component/flight/SearchFlights\";\nimport PurchaseTicket from \"../component/customer/PurchaseTicket\";\nimport SpendingChart from \"../component/customer/SpendingChart\";\nimport AgentSidebar from \"../component/agent/AgentSidebar\";\nimport TopCustomerChart from \"../component/agent/TopCustomerChart\";\nimport CustomerOrders from \"../component/agent/CustomerOrders\";\nimport CommissionStatistics from \"../component/agent/CommissionStatistics\";\nimport StaffSidebar from \"../component/staff/StaffSidebar\";\nimport EditAirport from \"../component/staff/EditAirport\";\nimport EditAirplane from \"../component/staff/EditAirplane\";\nimport GlobalSidebar from \"../component/global/GlobalSidebar\";\nimport FlightCRUD from \"../component/staff/FlightCRUD\";\nimport ViewAgents from \"../component/staff/ViewAgents\"\nimport ViewReports from \"../component/staff/ViewReports\";\nimport TopDestinations from \"../component/staff/TopDestinations\";\nimport RevenueComparison from \"../component/staff/RevenueComparsion\";\nimport ViewFrequent from \"../component/staff/ViewFrequent\";\nimport AddAgents from \"../component/staff/AddAgents\";\nimport GrantPermission from \"../component/staff/GrantPermission\";\nimport axios from \"axios\";\nimport LoginCard from \"../component/login/LoginCard\";\nimport RegisterCard from \"../component/login/RegisterCard\";\nimport cookie from 'react-cookies'\nimport Cookies from \"js-cookie\"\n\nconst {Header, Content, Sider, Footer} = Layout;\nconst {SubMenu} = Menu;\n\n// 这里是为了能够成功设置上Cookies\naxios.defaults.withCredentials = true;\naxios.defaults.timeout = 2000;\n\nexport default function UserPage({initializingTab}) {\n    let navigate = useNavigate();\n\n    const [navigateBar, setNavigateBar] = useState(\"customer\");\n    const [sidebar, setSidebar] = useState(\"\");\n    const [collapsed,setCollapsed] =useState(false);\n    const [flightsResult, setFlightResult] = useState(null);\n    const [actionType,setActionType] = useState(\"\");\n    const [loginModalVisible,setLoginModalVisible] = useState(false);\n    const [infoModalVisible,setInfoModalVisible] = useState(false);\n    const [registerModalVisible,setRegisterModalVisible] = useState(false);\n    const [initializeType,setInitializeType] = useState(\"customer\");\n    const [registerLoginValue,setRegisterLoginValue] = useState(undefined);\n    const [deptDate,setDeptDate] = useState(undefined);\n    const defaultData = useRef(null);\n    // 在全局记录用户的登录信息(简单实现)\n    const loginInfo = useRef(null);\n\n\n    useEffect(()=>{\n        setNavigateBar(initializingTab)\n        axios({\n            url:\"http://localhost:8080/index/findAllFlights\",\n            method:\"GET\",\n        }).then(function(response){\n            if(response.data){\n                defaultData.current = response.data;\n                setFlightResult(defaultData.current);\n            }else{\n                console.log(\"No Results\");\n            }\n        }).catch(function(response){\n            message.destroy();\n            message.error(\"Back end server not started!\");\n        })\n    },[\"default\"])\n\n    // 如果用户尚未登录\n    useEffect(()=>{\n        \n        axios({\n            url:\"http://localhost:8080/login/token\",\n            method:\"POST\",\n        }).then(function(response){\n            if(response.data){\n\n                if(response.data.status==true){\n                    const userType = response.data.userType;\n                    if(userType===\"staff\"){\n                        const name = response.data.airlineStaff.username;\n                        const infoMap = {alias:name,...response.data.airlineStaff}\n                         loginInfo.current = infoMap;\n                         message.success(\"Welcome Back, \"+name);\n                         navigate(\"/staff\",{replace:true})\n                    }else if(userType===\"customer\"){\n                        const name = response.data.customer.name;\n                        const infoMap = {alias:name,...response.data.customer}\n                         loginInfo.current = infoMap;\n                         message.success(\"Welcome Back, \"+name);\n                         navigate(\"/customer\",{replace:true})\n                    }else if(userType===\"agent\"){\n                        const email = response.data.bookingAgent.email;\n                         const infoMap = {alias:email,...response.data.bookingAgent}\n                         loginInfo.current = infoMap;\n                         message.success(\"Welcome Back, \"+email);\n                         navigate(\"/agent\",{replace:true})\n                    }\n\n                    setNavigateBar(userType);\n                }\n            }\n            else{\n                message.destroy();\n                message.error(\"您尚未登录\");\n                setNavigateBar(\"global\");\n                navigate(\"/global\",{replace:true})\n            }\n            \n        }).catch(function(response){\n            message.destroy();\n           \n            message.error(\"Backend Server not started!\");\n        })\n    },[1])\n  \n\n    const handleNavigateBar = (page) => {\n        setNavigateBar(page.key);\n        navigate(\"/\" + page.key, {replace: true});\n    }\n\n    const sidebarList = {\n        customer: <CustomerSidebar loginInfo={loginInfo} setDeptDate={setDeptDate} updateSelection={setSidebar} setActionType={setActionType} defaultData={defaultData} setFlightResult={setFlightResult} />,\n        agent: <AgentSidebar loginInfo={loginInfo} setDeptDate={setDeptDate} updateSelection={setSidebar} setActionType={setActionType} defaultData={defaultData} setFlightResult={setFlightResult}/>,\n        staff: <StaffSidebar loginInfo={loginInfo} setDeptDate={setDeptDate} updateSelection={setSidebar} setActionType={setActionType}  setFlightResult={setFlightResult}/>,\n        global: <GlobalSidebar loginInfo={loginInfo} setDeptDate={setDeptDate} updateSelection={setSidebar} setActionType={setActionType}  setFlightResult={setFlightResult}/>,\n    }\n\n\n    const userContent = {\n        \"Flight CRUD\":<FlightCRUD loginInfo={loginInfo}/>,\n        \"My flights\": <SearchFlights setNavigateBar={setNavigateBar} loginInfo={loginInfo} userType={navigateBar} actionTab={\"view\"} \n                                    deptDate={deptDate}\n                                    setDeptDate={setDeptDate}\n                                    flightsResult={flightsResult} \n                                    setFlightResult={setFlightResult} \n                                    actionType={actionType}/>,\n        \"Search flights\": <SearchFlights setNavigateBar={setNavigateBar} userType={navigateBar} \n                                        deptDate={deptDate}\n                                    setDeptDate={setDeptDate}\n                                        loginInfo={loginInfo} \n                                        actionTab={\"search\"} \n                                        flightsResult={flightsResult} \n                                        setFlightResult={setFlightResult} \n                                        actionType={actionType}/>,\n        \"Purchase tickets\": <SearchFlights setNavigateBar={setNavigateBar}\n                                            deptDate={deptDate}\n                                             setDeptDate={setDeptDate}\n                                            userType={navigateBar} \n                                           loginInfo={loginInfo} \n                                           actionTab={\"purchase\"} \n                                           flightsResult={flightsResult} \n                                           setFlightResult={setFlightResult} \n                                           actionType={actionType}/>,\n        \"Track spending\": <SpendingChart loginInfo={loginInfo}/>,\n        \"Top customers\": <TopCustomerChart loginInfo={loginInfo}/>,\n        \"Create order\": <SearchFlights setNavigateBar={setNavigateBar}\n                                        deptDate={deptDate}\n                                        setDeptDate={setDeptDate}\n                                       userType={navigateBar}\n                                       loginInfo={loginInfo}  \n                                       actionTab={\"purchase\"} \n                                       flightsResult={flightsResult}\n                                       setFlightResult={setFlightResult}\n                                       actionType={actionType}/>,\n        \"My customer orders\": <SearchFlights setNavigateBar={setNavigateBar}\n                                            deptDate={deptDate}\n                                    setDeptDate={setDeptDate}\n                                            userType={navigateBar} \n                                            loginInfo={loginInfo} \n                                            actionTab={\"search\"} \n                                            flightsResult={flightsResult} \n                                            setFlightResult={setFlightResult} \n                                            actionType={actionType}/>,\n        \"Commission statistics\": <CommissionStatistics loginInfo={loginInfo}/>,\n        \"Add airport\": <EditAirport loginInfo={loginInfo}/>,\n        \"Add airplane\": <EditAirplane loginInfo={loginInfo}/>,\n        \"Add booking agent\":<AddAgents loginInfo={loginInfo}/>,\n        \"View Agents\":<ViewAgents loginInfo={loginInfo} />,\n        \"View Reports\":<ViewReports setNavigateBar={setNavigateBar} loginInfo={loginInfo}/>,\n        \"Top destinations\":<TopDestinations/>,\n        \"Revenue Comparison\":<RevenueComparison loginInfo={loginInfo}/>,\n        \"Frequent customers\":<ViewFrequent loginInfo={loginInfo}/>,\n        \"Grant permission\":<GrantPermission loginInfo={loginInfo}/>\n    }\n\n    const menu = (<Menu>\n        {!loginInfo.current&&(\n        <Menu.Item icon={<SettingOutlined />}>\n          <a onClick={()=>{setLoginModalVisible(true);}}>Log In</a>\n          \n        </Menu.Item>)}\n        {loginInfo.current&&(<Menu.Item icon={<UserOutlined/>}>\n        <a onClick={()=>{setInfoModalVisible(true)}}>Account Information</a>\n        </Menu.Item>)}\n      </Menu>);\n\n    const onCancelLogin = ()=>{\n        setLoginModalVisible(false);\n    }\n\n    const onCancelRegister =()=>{\n        setRegisterModalVisible(false);\n    }\n\n    const onCancelInfo = ()=>{\n        setInfoModalVisible(false);\n    }\n\n\n    const customerList=[\n        {\n            title:\"Email\",\n            description:loginInfo.current?loginInfo.current.email:\"\"\n        },\n        {\n            title:\"Name\",\n            description:loginInfo.current?loginInfo.current.name:\"\"\n        }\n    ]\n\n    const AgentList=[\n        {\n            title:\"Email\",\n            description:loginInfo.current?loginInfo.current.email:\"\"\n        },\n        {\n            title:\"Your Id\",\n            description:loginInfo.current?loginInfo.current.bookingAgentId:\"\"\n        }\n    ]\n\n\n    const staffList=[\n        {\n            title:\"User Name\",\n            description:loginInfo.current?loginInfo.current.username:\"\"\n        },\n        {\n            title:\"First Name\",\n            description:loginInfo.current?loginInfo.current.firstName:\"\",\n        },\n        {\n            title:\"Last Name\",\n            description:loginInfo.current?loginInfo.current.lastName:\"\",\n        },\n        {\n            title:\"Permission Level\",\n            description:loginInfo.current?loginInfo.current.permissionDescription?loginInfo.current.permissionDescription.join(\", \"):\"\":\"\"\n        },\n        {\n            title:\"Airline\",\n            description:loginInfo.current?loginInfo.current.airlineName:\"\"\n        }\n    ]\n\n    const sampleInfoData = [\n        {\n            title:\"User Name\",\n            description:\"HaHaHa\"\n        },\n        {\n            title:\"Airline\",\n            description:\"Spring Airlines\"\n        },\n        {\n            title:\"Permission Level\",\n            description: [\"Admin\",\"Operator\"].join(\", \")\n        },\n\n    ]\n\n    return (\n\n        <Layout>\n            <Modal \n                destroyOnClose\n                title=\"Account Information\"\n                visible={infoModalVisible}\n                onCancel={() => {onCancelInfo()}}\n                footer={[]}>\n                    <List \n                    itemtlayout = {\"horizontal\"}\n                    dataSource={loginInfo.current?navigateBar===\"customer\"?customerList:navigateBar===\"staff\"?staffList:AgentList:[{}]}\n                    renderItem={item=>\n                    (<List.Item\n                        >\n                        <List.Item.Meta\n                        title={item.title}\n                        description={item.description}>\n\n                        </List.Item.Meta>\n                    </List.Item>)}>\n                    </List>\n\n                </Modal>\n            {<Modal \n                destroyOnClose\n                title=\"Login\"\n                visible={loginModalVisible}\n                onCancel={() => {onCancelLogin()}}\n                footer={[]}\n                >\n                <LoginCard loginInfo={loginInfo} registerLoginValue={registerLoginValue} setRegisterLoginValue={setRegisterLoginValue} setInitializeType={setInitializeType}  setLoginModalVisible={setLoginModalVisible} setNavigateBar={setNavigateBar} setRegisterModalVisible={setRegisterModalVisible}/>\n            </Modal>}\n            {<Modal \n                destroyOnClose\n                title=\"Login\"\n                visible={registerModalVisible}\n                onCancel={() => {onCancelRegister()}}\n                footer={[]}\n                >\n                <RegisterCard initializeType={initializeType} setRegisterLoginValue={setRegisterLoginValue}  setNavigateBar={setNavigateBar} setRegisterModalVisible={setRegisterModalVisible} />\n            </Modal>}\n            <Header className={\"header\"} style={{position: 'fixed', zIndex: 2, width: '100%'}}>\n                \n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={[initializingTab]}\n                    selectedKeys={[navigateBar]}\n                    // onClick={handleNavigateBar}\n                    style={{marginLeft:\"100px\"}}\n                >\n                    <Menu.Item key=\"customer\">Customer</Menu.Item>\n                    <Menu.Item key=\"agent\">Agent</Menu.Item>\n                    <Menu.Item key=\"staff\">Staff</Menu.Item>\n                    <Menu.Item key=\"global\">Global</Menu.Item>\n                    \n                </Menu>\n                \n            </Header>\n            <Dropdown overlay={menu}>\n                    {\n                    loginInfo.current?<Avatar style={{marginLeft:\"1200px\",zIndex:3,position: 'fixed',top:\"10px\", color: '#f56a00', backgroundColor: '#fde3cf' }} size=\"large\"  \n                    // src={\"https://joeschmoe.io/api/v1/\"+loginInfo.current?loginInfo.current.alias:null} \n                    >\n                    {loginInfo.current?loginInfo.current.alias[0].toUpperCase():null}</Avatar>:\n                    <Avatar style={{marginLeft:\"1200px\",zIndex:3,position: 'fixed',top:\"10px\"}} size=\"large\" icon={<UserOutlined />}></Avatar>}\n                </Dropdown>\n            <Layout style={{minHeight: '91vh', marginTop: 64}}>\n                <Sider width={250} height={100} className=\"site-layout-background\" collapsible collapsed={collapsed} onCollapse={setCollapsed}>\n                    {sidebarList[navigateBar]}\n                </Sider>\n                <Layout style={{padding: '0 24px 24px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>{navigateBar.charAt(0).toUpperCase() + navigateBar.slice(1)}</Breadcrumb.Item>\n                        <Breadcrumb.Item>{sidebar}</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{padding: 24, margin: 0}}\n                    >\n                        {userContent[sidebar]}\n                    </Content>\n                    <Layout style={{textAlign: 'center', marginBottom: 0}}>\n                <Footer>\n                    2021 Global Airline All rights reserved.\n                </Footer>\n            </Layout>\n                </Layout>\n               \n\n            </Layout>\n           \n\n        </Layout>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomePage from \"./homepage\";\nimport LoginPage from \"./page/LoginPage\";\nimport RegisterPage from \"./page/RegisterPage\";\nimport reportWebVitals from './reportWebVitals';\nimport \"antd/dist/antd.css\"\nimport {\n    BrowserRouter as Router,\n    Route,\n} from \"react-router-dom\";\nimport {Routes} from \"react-router-dom\";\nimport UserPage from \"./page/UserPage\";\n\n//Configure the Routers for Conditional Rendering\nfunction App() {\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<HomePage />} />\n                {/* <Route path=\"/login\" element={<LoginPage />} /> */}\n                {/* <Route path=\"/registercustomer\" element={<RegisterPage initializeType='customer' />} />\n                <Route path=\"/registerstaff\" element={<RegisterPage initializeType='airlineStaff'/>}/>\n                <Route path=\"/registeragent\" element={<RegisterPage initializeType='bookingAgent'/>}/> */}\n                <Route path=\"/customer\" element={<UserPage initializingTab='customer' />} />\n                <Route path=\"/agent\" element={<UserPage initializingTab='agent'/> }  />\n                <Route path=\"/staff\" element={<UserPage initializingTab='staff'/> } />\n                <Route path=\"/global\" element={<UserPage initializingTab='global'/> } />\n            </Routes>\n        </Router>\n    )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}