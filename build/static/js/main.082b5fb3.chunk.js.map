{"version":3,"sources":["homepage.js","component/login/LoginCard.js","lib/dateFormat.js","component/login/RegisterCard.js","reportWebVitals.js","component/customer/CustomerSidebar.js","lib/statusTag.js","lib/flightData.js","component/flight/PurchaseModals/CustomerModal.js","component/flight/PurchaseModals/AgentModal.js","component/flight/SearchFlights.js","component/customer/PurchaseTicket.js","component/customer/SpendingChart.js","component/agent/AgentSidebar.js","component/agent/TopCustomerChart.js","component/agent/CommissionStatistics.js","component/staff/StaffSidebar.js","component/staff/EditAirport.js","component/staff/EditAirplane.js","component/global/GlobalSidebar.js","component/staff/CRUDElements/CreateForm.js","component/staff/CRUDElements/UpdateForm.js","component/staff/CRUDElements/DetailsForm.js","component/staff/FlightCRUD.js","component/staff/ViewAgents.js","component/staff/ViewReports.js","component/staff/TopDestinations.js","component/staff/RevenueComparsion.js","component/staff/ViewFrequent.js","component/staff/AddAgents.js","component/staff/GrantPermission.js","page/UserPage.js","index.js"],"names":["Title","Typography","HomePage","style","textAlign","width","position","top","type","shape","size","to","ArrowRightOutlined","LoginCard","props","setInitializeType","setRegisterModalVisible","setLoginModalVisible","navigate","useNavigate","Form","useForm","form","useState","activeTab","setActiveTab","usernameMessage","customer","agent","staff","display","marginLeft","marginRight","tabList","key","tab","onTabChange","resetFields","name","className","onFinish","values","axios","url","method","data","userType","then","response","response_msg","replace","setFields","errors","console","log","onFinishedFailed","alert","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","htmlType","onClick","dateFormat","RegisterCard","initializeType","Option","Select","airlineList","setAirlineList","prefixSelector","noStyle","value","autoCompleteResult","map","website","label","title","labelCol","xs","span","sm","wrapperCol","initialValues","residence","scrollToFirstError","validator","inititalizeType","callback","params","valid","catch","error","validateTrigger","hasFeedback","rule","min","max","pattern","getFieldValue","_","Promise","reject","Error","resolve","Password","dependencies","tooltip","whitespace","format","addonBefore","onFocus","item","TextArea","showCount","maxLength","offset","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SubMenu","Menu","CustomerSidebar","updateSelection","setActionType","defaultData","setFlightResult","tagList","actionTypeMapping","useEffect","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","icon","CarryOutOutlined","SettingOutlined","statusColor","globalInterfaceColumns","dataIndex","render","tags","status","color","toUpperCase","CustomerModal","customerModalVis","setCustomerModalVis","rowRecord","setRowRecord","showStatus","setStatus","purchaseInfo","setPurchaseInfo","FormItem","description","bodyStyle","padding","destroyOnClose","visible","footer","airlineName","flightNum","email","bookingAgentId","onCancel","airline","flight_id","disabled","itemtlayout","dataSource","renderItem","Meta","AgentModal","agentModalVis","setAgentModalVis","checkEmail","Input","Search","FlightsResultTable","actionType","columns","DatePicker","RangePicker","text","record","full","dataMap","dept","sourceAirportName","arri","destAirportName","dept_time","departureTime","arri_time","arrivalTime","price","ticketId","ticket_id","customerEmail","filter","SearchFlights","actionTab","flightsResult","undefined","deptAirport","setDeptAirport","arriAirport","setArriAirport","deptDate","setDeptDate","deptDate2","setDeptDate2","searchResult","setSearchResult","flightID","searchAirport","options","handleSearch","setTimeout","handleChange","callBack","Group","showSearch","defaultActiveFirstOption","showArrow","filterOption","onSearch","onChange","notFoundContent","allowClear","SwapOutlined","tmp","paddingLeft","picker","sendObject","qs","stringify","sourceAirport","destAirport","startDate","Date","endDate","header","SpendingChart","spendingData","setSpendingData","moment","subtract","setStart","setEnd","timestamp","start","end","length","setStartDate","setEndDate","chartConfig","appendPadding","angleField","colorField","radius","meta","alias","formatter","v","toString","defaultValue","AgentSidebar","TopCustomerChart","setData","topK","setTopK","searchTickets","formattedData","ticketsFromAgent","totalCommission","tabBarExtraContent","xField","yField","seriesField","columnWidthRatio","fill","opacity","xAxis","autoHide","autoRotate","slice","uid","sum","CommissionStatistics","commissionData","setCommissionData","avgcommissionData","setAvgCommissionData","totalTickets","setTotalTickets","loadingHolder","Boolean","loadingHolderForAvg","loadingHolderForTickets","commissionFees","averageCommissionFees","ticketBooked","direction","dateString","loading","precision","StaffSidebar","SendOutlined","FundViewOutlined","EditAirport","success","content","marginTop","onFinishFailed","id","airplaneId","seats","GlobalSidebar","formLayout","CreateForm","modalVisible","handleCreateModalVisible","onSubmit","handleCreate","formVals","setFormVals","disabledDate","current","endOf","optionsData","handleNext","a","validateFields","fieldsValue","showTime","UpdateForm","updateModalVisible","handleUpdateModalVisible","handleUpdate","DetailsTable","detailModalVisible","handleDetailModalVisible","passengers","scroll","x","textWrap","ellipsis","fixed","FlightCRUD","createModalVisible","selectedRows","setSelectedRows","stepFormValues","setStepFormValues","radioValue","actionRef","useRef","defaultRef","fetchFlightData","query","fetchFilteredFlightData","handleDelete","airline_name","reload","flight_info","cancel","e","valueType","hideInSearch","EditOutlined","fontSize","onConfirm","confirm","okText","cancelText","danger","DeleteOutlined","getData","sort","pageIndex","records","total","request","rowKey","index","rowSelection","onchange","toolBarRender","PlusOutlined","FooterToolbar","extra","fontWeight","reloadAndRest","Object","keys","ViewAgents","past","setPast","topSalesData","sales","config","legend","barBackground","interactions","enable","get","K","commission","addonAfter","hoverable","onReady","plot","chart","on","evt","ViewReports","sampleData","renderLastYear","renderLastMonth","TopDestinations","renderLast3Month","RevenueComparison","labelHeight","ViewFrequent","modalVisiblibity","setModalVisibility","modalEmail","setModalEmail","tableData","setTableData","tickets","tableSampleData","onNumberChange","handleClick","event","placement","QuestionCircleOutlined","AddAgents","setEmail","GrantPermission","optionsMapped","Header","Layout","Content","Sider","Footer","UserPage","initializingTab","loginInfo","navigateBar","setNavigateBar","sidebar","setSidebar","collapsed","setCollapsed","loginModalVisible","registerModalVisible","sidebarList","global","userContent","menu","zIndex","theme","selectedKeys","page","overlay","minHeight","collapsible","onCollapse","margin","charAt","marginBottom","App","path","element","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.082b5fb3.chunk.js","sourcesContent":["import {Button, Typography} from \"antd\";\nimport {ArrowRightOutlined} from \"@ant-design/icons\";\nimport {Link} from \"react-router-dom\"\nimport RcQueueAnim from \"rc-queue-anim\";\n\nconst {Title} = Typography;\n\nexport default function HomePage() {\n    // Add Link to \"/login\"\n    return (\n        <div style={{textAlign: 'center', width: '100%', position: 'absolute', top: '40vh'}}>\n            <RcQueueAnim type=\"left\" >\n                <Title key=\"ele1\" style={{}}>Welcome to Our Airline System</Title>\n                <Button key=\"ele2\" type=\"primary\" shape=\"circle\" size=\"large\">\n                    <Link to=\"/global\">\n                        <ArrowRightOutlined />\n                    </Link>\n                </Button>\n            </RcQueueAnim>\n        </div>\n    )\n}\n\n","import {Card, Form, Input, Button} from 'antd';\nimport React, {useState} from \"react\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function LoginCard(props) {\n\n    const {setInitializeType,setRegisterModalVisible,setLoginModalVisible} = props;\n    let navigate = useNavigate();\n\n    const [form] = Form.useForm();\n\n    const [activeTab, setActiveTab] = useState('customer');\n\n    const onTabChange = (key) => {\n        setActiveTab(key);\n        form.resetFields();\n    }\n\n\n    //字段验证成功，准备做登录校验\n    const onFinish = (values) => {\n        // loginRequest(values.username, md5(values.password), activeTab)\n        \n        axios({\n            url:\"http://localhost:8080/login\",\n            method:\"post\",\n            data:{userType:activeTab,...values}\n        }).then(function(response){\n            const response_msg = response.data;\n            if(response_msg===\"success\"){\n                //登录成功,后台session中有用户信息\n                setLoginModalVisible(false);\n                \n                navigate(\"/\"+activeTab,{replace:true});\n            }else{\n                //诊断失败原因\n                if(response_msg===\"User Not Found!\"){\n                    form.setFields([\n                        {\n                            name:activeTab===\"customer\"?\"email\":\"username\",\n                            errors:[ \"User Not Found! Please Register First!\"]\n                        }\n                    ])\n                }else if(response_msg===\"Password Error!\"){\n                    form.setFields([\n                        {\n                            name:\"password\",\n                            errors:[response.data]\n                        }\n                    ])\n                }else if(response_msg===\"BookingId Error!\"){\n                    form.setFields([\n                        {\n                            name:\"bookingAgentId\",\n                            errors:[response.data]\n                        }\n                    ])\n                }\n            }\n            \n        })\n        console.log(values);\n        // eslint-disable-next-line no-restricted-globals\n        // navigate(\"/\" + activeTab, {replace: true})\n    }\n\n    //说的是字段的值验证失败\n    const onFinishFailed=()=>{\n        alert(\"字段有误\");\n        console.log(\"haha\");\n    }\n\n\n\n    const tabList = [\n        {key: 'customer', tab: 'Customer'},\n        {key: 'agent', tab: 'Booking Agent'},\n        {key: 'staff', tab: 'Airline Staff'}\n    ]\n\n    const usernameMessage = {\n        customer: \"E-mail\",\n        agent: \"E-mail\",\n        staff: \"Username\"\n    }\n\n    return (\n        <Card\n            style={{width: '100%', display: 'block', marginLeft: 'auto', marginRight: 'auto'}}\n            tabList={tabList}\n            activeTab={activeTab}\n            // tabBarExtraContent={<a href=\"/\">Back</a>}\n            onTabChange={onTabChange}\n        >\n            <Form\n                form={form}\n                name=\"login\"\n                className=\"login-form\"\n                onFinish={onFinish}\n                onFinishedFailed={onFinishFailed}\n            >\n\n            {\n                activeTab===\"staff\"&&(<Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your \" + usernameMessage[activeTab]\n                         },\n                         ]}\n                         >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={usernameMessage[activeTab]} />\n                </Form.Item>)}\n\n                {\n                activeTab!=\"staff\"&&(<Form.Item\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your email\"\n                         },\n                         { \n                             type:\"email\",\n                             message:\"This is not a valid email type\"\n                         }\n                         ]}\n                         >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={\"E-mail\"} />\n                </Form.Item>)}\n            \n                \n                <Form.Item\n                    name=\"password\"\n                    rules={[{required: true, message: \"Please input your password\"}]}>\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\" />\n                </Form.Item>\n                {activeTab===\"agent\"&&(\n                <Form.Item\n                    name=\"bookingAgentId\"\n                    rules={[{required: true, message: \"Please input your booking agent Id\"}]}>\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={\"Agent Id\"} />\n                </Form.Item>)}\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Log in</Button>\n                    <Button type=\"primary\" className=\"register-form-button\" style={{marginLeft:\"270px\"}} onClick={()=>{\n                        // navigate(\"/register\"+activeTab)\n                        setRegisterModalVisible(true);\n                        setInitializeType(activeTab);\n                    }}>Register</Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    )\n}","export const dateFormat = \"DD/MM/YYYY\";","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {dateFormat} from \"../../lib/dateFormat\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport qs from \"qs\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Cascader,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Select,\r\n  Button,\r\n  AutoComplete,\r\n  DatePicker,\r\n  message\r\n} from 'antd';\r\n\r\nexport default function RegisterCard({initializeType,setRegisterModalVisible}){\r\n  console.log(initializeType);\r\n    const { Option } = Select;\r\n    const navigate = useNavigate();\r\n    const residences = [\r\n      {\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        children: [\r\n          {\r\n            value: 'hangzhou',\r\n            label: 'Hangzhou',\r\n            children: [\r\n              {\r\n                value: 'xihu',\r\n                label: 'West Lake',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        children: [\r\n          {\r\n            value: 'nanjing',\r\n            label: 'Nanjing',\r\n            children: [\r\n              {\r\n                value: 'zhonghuamen',\r\n                label: 'Zhong Hua Men',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {\r\n          span: 24,\r\n        },\r\n        sm: {\r\n          span: 8,\r\n        },\r\n      },\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n        },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    \r\n      const [form] = Form.useForm();\r\n\r\n      const [airlineList,setAirlineList] = useState([]);\r\n    \r\n      const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n        axios({\r\n          method:'POST',\r\n          url:initializeType===\"customer\"?'http://localhost:8080/register/registerCustomer'\r\n          :initializeType===\"staff\"?'http://localhost:8080/register/registerAirlineStaff':\r\n          'http://localhost:8080/register/registerBookingAgent',\r\n          data:values\r\n        }).then(function(response){\r\n            if(response.data===\"success\"){\r\n              navigate(\"/login\");\r\n            }\r\n        })\r\n      };\r\n    \r\n      const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"86\">+86</Option>\r\n            <Option value=\"87\">+87</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n      const suffixSelector = (\r\n        <Form.Item name=\"suffix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"USD\">$</Option>\r\n            <Option value=\"CNY\">¥</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n      const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n    \r\n      const onWebsiteChange = (value) => {\r\n        if (!value) {\r\n          setAutoCompleteResult([]);\r\n        } else {\r\n          setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n        }\r\n      };\r\n    \r\n      const websiteOptions = autoCompleteResult.map((website) => ({\r\n        label: website,\r\n        value: website,\r\n      }));\r\n\r\n      const checkUserName = (rule,value,callback)=>{\r\n            axios({\r\n                method:'GET',\r\n                url:'http://localhost:8080/register/validateAirlineStaff',\r\n                params:{\"username\":value}\r\n            }).then(function(response){\r\n                console.log(response);\r\n                if(response.data.valid===false){\r\n                    callback(\"Staff already registered!\");\r\n                    console.log(\"草\");\r\n                }else{\r\n                    callback();\r\n                    console.log(\"haha\");\r\n                }\r\n            }).catch(function(error){\r\n                console.log(\"error\")\r\n            })\r\n      }\r\n\r\n      const checkEmail = (inititalizeType,value,callback)=>{\r\n        axios({\r\n            method:'GET',\r\n            url:(initializeType===\"agent\")?'http://localhost:8080/register/validateBookingAgent':\r\n            \"http://localhost:8080/register/validateCustomer\",\r\n            params:{\"email\":value}\r\n        }).then(function(response){\r\n            console.log(response);\r\n            if(response.data.valid===false){\r\n                if(initializeType===\"agent\"){\r\n                callback(\"Agent already registered!\");}\r\n                else{\r\n                    callback(\"Customer already registered!\")\r\n                }\r\n                console.log(\"草\");\r\n            }else{\r\n                callback();\r\n                console.log(\"haha\");\r\n            }\r\n        }).catch(function(error){\r\n            console.log(\"error\")\r\n        })\r\n      }\r\n\r\n      const getAirlineList = ()=>{\r\n        axios({\r\n          method:'GET',\r\n          url:\"http://localhost:8080/register/getAirlineList\"\r\n      }).then(function(response){\r\n        console.log(response.data);\r\n          setAirlineList(response.data);\r\n          console.log(\"data injection completed\")\r\n      }).catch(function(error){\r\n          console.log(\"error\")\r\n      })\r\n      }\r\n\r\n\r\n      return (\r\n          <Card  title=\"Please input your personal information to register\">\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name=\"register\"\r\n          onFinish={onFinish}\r\n          initialValues={{\r\n            residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n            prefix: '86',\r\n          }}\r\n          scrollToFirstError\r\n        > {initializeType!==\"staff\"&&(\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n              {\r\n                  validator:checkEmail\r\n              },\r\n              \r\n            ]}\r\n            validateTrigger='onBlur'\r\n            hasFeedback\r\n          >\r\n            <Input style={{width:'80%'}}/>\r\n          </Form.Item>)\r\n        }\r\n\r\n        { initializeType===\"staff\"&&(\r\n          <Form.Item\r\n          name= \"username\"\r\n          label= \"Username\"\r\n          validateTrigger='onBlur'\r\n          hasFeedback\r\n          rules={\r\n              [{\r\n                  required :true,\r\n                  message: 'Please input your username',\r\n              },\r\n              {\r\n                  validator:checkUserName\r\n              }\r\n              ]\r\n          }>\r\n            <Input style={{width:'80%'}}></Input>\r\n          </Form.Item>\r\n         ) }\r\n\r\n         { initializeType===\"customer\"&&(\r\n          <Form.Item\r\n          name= \"name\"\r\n          label= \"Name\"\r\n          rules={\r\n              [{\r\n                  required :true,\r\n                  message: 'Please input your name',\r\n              },\r\n              ]\r\n          }\r\n          hasFeedback>\r\n            <Input style={{width:'80%'}}></Input>\r\n          </Form.Item>\r\n         ) }\r\n    \r\n          <Form.Item\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!'\r\n                },\r\n                {\r\n                  min:6,\r\n                  message: \"The length of the password cannot be less than 6 characters!\"\r\n                },\r\n                {\r\n                max:20,\r\n                message: \"The length of the password cannot be more than 20 characters!\"},\r\n                {\r\n                pattern:/^[a-zA-Z]\\w+/,\r\n                message:'The password must start with alphabat'\r\n                },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('email') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('Email cannot be the same as the password!'));\r\n                },\r\n              }),\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password style={{width:'80%'}}/>\r\n          </Form.Item>\r\n    \r\n          <Form.Item\r\n            name=\"confirm\"\r\n            label=\"Confirm Password\"\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>\r\n    \r\n\r\n          {initializeType===\"staff\"&&(\r\n          <Form.Item\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            tooltip=\"What do you want others to call you?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:\"Please input your last name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input  style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>)\r\n          }\r\n\r\n          {initializeType===\"staff\"&&(\r\n          <Form.Item\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            tooltip=\"What do you want others to call you?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:\"Please input your last name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>)}\r\n  \r\n          {initializeType!==\"agent\"&&(\r\n          <Form.Item\r\n          name=\"birthday\"\r\n          label=\"Birth Day\"\r\n          tooltip=\"Click the calendar button to select a date\"\r\n          rules={[\r\n                {required: true,\r\n                message:\"Please input your birth day!\",\r\n               }\r\n          ]}>  \r\n          <DatePicker format={dateFormat} style={{width:200}} />\r\n            </Form.Item>)}\r\n\r\n            {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"phoneNumber\"\r\n            label=\"Phone Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your phone number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              addonBefore={prefixSelector}\r\n              style={{\r\n                width: '80%',\r\n              }}\r\n            />\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"staff\"&&(\r\n          <Form.Item\r\n            name=\"airlineName\"\r\n            label=\"Airline Name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input donation amount!',\r\n              },\r\n            ]}\r\n          >\r\n          <Select onFocus={getAirlineList} placeholder=\"Please select a country\" style={{width:\"80%\"}}>\r\n            {airlineList.map((item)=>\r\n               (<Option value={item} key={item}>{item}</Option>)\r\n            )}\r\n          </Select>\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"buildingNumber\"\r\n            label=\"Building Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your building number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"street\"\r\n            label=\"Street Info\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your street info!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"city\"\r\n            label=\"City\"\r\n            tooltip=\"Could register with abbreviation\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your city!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"livingState\"\r\n            label=\"State\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your state info!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportNumber\"\r\n            label=\"Passport Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportExpiration\"\r\n            label=\"Passport Expiration Date\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport expiration date!',\r\n              },\r\n            ]}\r\n          >\r\n             <DatePicker format={dateFormat} style={{width:200}} />\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportCountry\"\r\n            label=\"Passport Country\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport country!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"agent\"&&(\r\n          <Form.Item\r\n            name=\"bookingAgentId\"\r\n            label=\"Agent Id\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your agent ID!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n\r\n\r\n          <Form.Item\r\n            name=\"intro\"\r\n            label=\"Intro\"\r\n          >\r\n            <Input.TextArea showCount maxLength={100}  style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>\r\n    \r\n          {/* <Form.Item\r\n            name=\"gender\"\r\n            label=\"Gender\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please select gender!',\r\n              },\r\n            ]}\r\n          >\r\n            <Select placeholder=\"select your gender\">\r\n              <Option value=\"male\">Male</Option>\r\n              <Option value=\"female\">Female</Option>\r\n              <Option value=\"other\">Other</Option>\r\n            </Select>\r\n          </Form.Item> */}\r\n    \r\n          {/* <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n            <Row gutter={8}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"captcha\"\r\n                  noStyle\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input the captcha you got!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Button>Get captcha</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item> */}\r\n    \r\n          {/* <Form.Item\r\n            name=\"agreement\"\r\n            valuePropName=\"checked\"\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n              },\r\n            ]}\r\n            {...tailFormItemLayout}\r\n          >\r\n            <Checkbox>\r\n              I have read the <a href=\"\">agreement</a>\r\n            </Checkbox>\r\n          </Form.Item>*/}\r\n          <Form.Item {...tailFormItemLayout}> \r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register\r\n            </Button>\r\n            <Button type=\"primary\" onClick={()=>{setRegisterModalVisible(false);}}>\r\n              Back\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        </Card>\r\n  );\r\n};\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst {SubMenu} = Menu;\n\nexport default function CustomerSidebar({updateSelection,defaultData,setActionType,setFlightResult}) {\n    const tagList = {\n        \"1\": \"Search flights\",\n        \"2\": \"Purchase tickets\",\n        \"3\": \"My flights\",\n        \"4\": \"Track spending\",\n        \"5\": \"Logout\",\n    }\n    const navigate = useNavigate();\n\n    const actionTypeMapping={\n        \"1\":\"search\",\n        \"2\":\"purchase\",\n        \"3\":\"view\"\n    }\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // clear local account information\n            navigate(\"/\", {replace: true})\n        }\n        updateSelection(tagList[item.key]);\n\n            setFlightResult(null);\n        setActionType(actionTypeMapping[item.key]);\n    }\n\n    useEffect(() => {\n        updateSelection(\"Search flights\");\n        setActionType(\"search\");\n\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Booking\">\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Mine\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"4\">{tagList['4']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"5\">{tagList['5']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","export const statusColor = {\n    \"finished\": \"purple\",\n    \"upcoming\": \"blue\",\n    \"cancelled\":\"gray\",\n    \"onBoarding\": \"green\",\n    \"delayed\": \"red\"\n}","import {Button, Space, Tag} from \"antd\";\nimport {statusColor} from \"./statusTag\";\nimport React from \"react\";\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\n\n\nexport const ticketColumns = [\n    // title是列的名称\n    // dataIndex:是后续用于指定<Table>组件columns中的对应关系\n    // key就是用于区分所有的列\n    {\n        title: \"Ticket No.\",\n        dataIndex: \"ticket_id\",\n        key: \"ticket\"\n    },\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n];\n\n\nexport const staffViewFLightColumns = [\n    {\n        title: \"Flight Number\",\n        dataIndex:\"flight_id\",\n        key:\"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        hideInSearch:true,\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        hideInSearch:true,\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n    {\n        title: \"Action\",\n        key: 'action',\n        hideInSearch:true,\n        render: (text, record) => (\n            <Space size=\"middle\">\n            <Button>Details</Button>\n            <Button onClick={()=>{console.log(\"haha\");}} type={'primary'} size={'small'} >\n              <EditOutlined style={{fontSize: '15px'}} />\n            </Button>\n            <Button onClick={()=>{console.log(\"xixi\");}} type={'primary'} size={'small'} danger >\n              <DeleteOutlined style={{fontSize: '15px'}} />\n            </Button>\n          </Space>\n    \n        )\n    }\n]\n\nexport const customerInterfaceColumns = [\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n    {\n        title: \"Action\",\n        key: 'action',\n        render: (text, record) => (\n            <Space size={\"middle\"}>\n                <Button disabled={record.status==(\"finished\"||\"onBoarding\")} >Book {record.flight_id}</Button>\n            </Space>\n        )\n    }\n];\n\nexport const agentInterfaceColumns = [\n    {\n        title: \"User ID\",\n        dataIndex: 'uid',\n        key: 'uid',\n    },\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },  {\n        title: \"Action\",\n        key: 'action',\n        render: (text, record) => (\n            <Space size={\"middle\"}>\n                <Button disabled={record.status==(\"finished\"||\"onBoarding\")} >Book {record.flight_id}</Button>\n            </Space>\n        )\n    }\n]\n\nexport const globalInterfaceColumns = [\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n]\n\n\n","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message,List} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CustomerModal(props){\r\n\r\n    const {customerModalVis,setCustomerModalVis,rowRecord,setRowRecord} = props;\r\n    const [showStatus,setStatus] = useState(\"purchase\"); //用于控制显示购票成功的信息\r\n    // 展示随机生成的TicketId, 航班信息，购买时间\r\n    const [purchaseInfo,setPurchaseInfo] = useState({});\r\n\r\n    const formLayout = {\r\n        labelCol: { span: 7 },\r\n        wrapperCol: { span: 13 },\r\n      };\r\n    \r\n    const FormItem = Form.Item;\r\n    \r\n    const [form] = Form.useForm();\r\n\r\n    const data = [\r\n      {\r\n        title: 'Airline Name',\r\n        description: purchaseInfo[\"airlineName\"]\r\n      },\r\n      {\r\n        title: 'Flight No.',\r\n        description: purchaseInfo[\"flightNum\"]\r\n      },\r\n      {\r\n        title: 'Purchase Date',\r\n        description: purchaseInfo[\"purchaseDate\"]\r\n      },\r\n      {\r\n        title: 'Ticket ID',\r\n        description: purchaseInfo[\"ticketNum\"]\r\n      },\r\n    ];\r\n\r\n\r\n    const purchaseCustomer = ()=>{\r\n        console.log({\r\n            airlineName:form.getFieldValue(\"airlineName\"),\r\n            flightNum:form.getFieldValue('flightNum'),\r\n              email:\"12345@qq.com\",\r\n              bookingAgentId:null\r\n          });\r\n        axios({\r\n            url:\"http://localhost:8080/customer/purchaseTicket\",\r\n            method:\"POST\",\r\n            data:{\r\n              airlineName:form.getFieldValue(\"airlineName\"),\r\n              flightNum:form.getFieldValue('flightNum'),\r\n                email:\"12345@qq.com\",\r\n                bookingAgentId:null\r\n            }\r\n        }).then(function(response){\r\n            //购票成功, 展示数据\r\n            if(response.data){\r\n                setStatus(\"confirm\");\r\n                setPurchaseInfo(response.data);\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    const renderContent = () => {\r\n\r\n        if(showStatus === \"purchase\"){\r\n          return (\r\n            <>\r\n              <FormItem\r\n                name=\"flightNum\"\r\n                label=\"Flight Number\"\r\n                rules={[{ required: true, message: 'Please input flight number!' }]}\r\n              >\r\n                <Input disabled={true}  />\r\n              </FormItem>\r\n              <FormItem\r\n                name=\"airlineName\"\r\n                label=\"Airline Name\"\r\n                rules={[{ required: true, message: 'Please input airline name!' }]}\r\n              >\r\n                <Input disabled={true}  />\r\n              </FormItem>\r\n            </>\r\n          );\r\n\r\n        }else if(showStatus === \"confirm\"){\r\n          return (<>\r\n            <List \r\n              itemtlayout = {\"horizontal\"}\r\n              dataSource={data}\r\n              renderItem={item=>\r\n              (<List.Item\r\n                  >\r\n                  <List.Item.Meta\r\n                  title={item.title}\r\n                  description={item.description}>\r\n\r\n                  </List.Item.Meta>\r\n              </List.Item>)}>\r\n            </List>\r\n          </>)\r\n        }\r\n\r\n        \r\n      };\r\n    \r\n    const renderFooter = () => {\r\n        if(showStatus === \"purchase\"){\r\n        return (\r\n          <>\r\n            <Button onClick={() => setCustomerModalVis(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => purchaseCustomer()}>\r\n              Purchase\r\n            </Button>\r\n          </>\r\n        );}else if(showStatus===\"confirm\"){\r\n          return (<>\r\n            <Button type=\"primary\" onClick={()=>{setCustomerModalVis(false);setStatus(\"purchase\");}}>\r\n              Confirm\r\n            </Button>\r\n          </>)\r\n        }\r\n      };\r\n\r\n\r\n    return (<Modal width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title={showStatus===\"purchase\"?\"Purchase Ticket\":\"Purchasement Info\"}\r\n        visible={customerModalVis}\r\n        footer={renderFooter()}\r\n        onCancel={() => {setCustomerModalVis(false);setRowRecord(false);}}>\r\n         <Form\r\n          {...formLayout}\r\n          form={form}\r\n            initialValues={{\r\n                airlineName:rowRecord.airline,\r\n                flightNum:rowRecord.flight_id\r\n            }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n        \r\n    </Modal>)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n}","import React, { useState,useEffect } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message, List} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function AgentModal(props){\r\n\r\n    const {agentModalVis,setAgentModalVis,rowRecord,setRowRecord} = props;\r\n    const [showStatus,setStatus] = useState(\"purchase\"); //用于控制显示购票成功的信息\r\n    // 展示随机生成的TicketId, 被代理人的Email, 和赚取的Commission Fee.\r\n    const [purchaseInfo,setPurchaseInfo] = useState({});\r\n\r\n    const formLayout = {\r\n        labelCol: { span: 7 },\r\n        wrapperCol: { span: 13 },\r\n      };\r\n    \r\n    const FormItem = Form.Item;\r\n    \r\n    const [form] = Form.useForm();\r\n\r\n    const data = [\r\n      {\r\n        title: 'Airline Name',\r\n        description: purchaseInfo[\"airlineName\"]\r\n      },\r\n      {\r\n        title: 'Flight No.',\r\n        description: purchaseInfo[\"flightNum\"]\r\n      },\r\n      {\r\n        title: 'Customer on behalf',\r\n        description: purchaseInfo[\"email\"]\r\n      },\r\n      {\r\n        title: 'Commission Fee Earned',\r\n        description: purchaseInfo[\"commissionFee\"]\r\n      },\r\n      {\r\n        title: 'Purchase Date',\r\n        description: purchaseInfo[\"purchaseDate\"]\r\n      },\r\n      {\r\n        title: 'Ticket ID',\r\n        description: purchaseInfo[\"ticketNum\"]\r\n      },\r\n    ];\r\n\r\n    const purchaseAgent = ()=>{\r\n        axios({\r\n            url:\"http://localhost:8080/bookingAgent/purchaseTicket\",\r\n            method:\"POST\",\r\n            data:{\r\n              airlineName:form.getFieldValue(\"airlineName\"),\r\n              flightNum:form.getFieldValue('flightNum'),\r\n                email:form.getFieldValue(\"email\"),\r\n                bookingAgentId:13123123,\r\n            }\r\n        }).then(function(response){\r\n            //购票成功, 展示数据\r\n            if(response.data){\r\n                setStatus(\"confirm\");\r\n                setPurchaseInfo(response.data);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const checkEmail = (inititalizeType,value,callback)=>{\r\n      axios({\r\n          method:'GET',\r\n          url:\"http://localhost:8080/bookingAgent/validateCustomer\",\r\n          params:{\"email\":value}\r\n      }).then(function(response){\r\n          if(response.data.valid===false){\r\n            console.log(\"false\");\r\n              callback(\"Customer Email not found!\");\r\n          }else{\r\n              callback();\r\n          }\r\n      })\r\n    }\r\n\r\n    const renderContent = () => {\r\n\r\n        if(showStatus === \"purchase\"){\r\n          return (\r\n            <>\r\n              <FormItem\r\n                name=\"flightNum\"\r\n                label=\"Flight Number\"\r\n                rules={[{ required: true, message: 'Please input flight number!' }]}\r\n              >\r\n                <Input disabled={true} placeholder=\"请输入\" />\r\n              </FormItem>\r\n              <FormItem\r\n                name=\"airlineName\"\r\n                label=\"Airline Name\"\r\n                rules={[{ required: true, message: 'Please input airline name!' }]}\r\n              >\r\n                <Input disabled={true} placeholder=\"请输入\" />\r\n              </FormItem>\r\n              <FormItem\r\n              name=\"email\"\r\n              label=\"Customer Email\"\r\n              rules={[{\r\n                required:true, message:\"Please input the customer email that you want to purchase on behalf of\"\r\n              },{\r\n                    validator:checkEmail\r\n                },]}>\r\n                <Input placeholder=\"Please input customer email\"></Input>\r\n              </FormItem>\r\n            </>\r\n          );\r\n\r\n        }else if(showStatus === \"confirm\"){\r\n          return (<>\r\n            <List \r\n              itemtlayout = {\"horizontal\"}\r\n              dataSource={data}\r\n              renderItem={item=>\r\n              (<List.Item\r\n                  >\r\n                  <List.Item.Meta\r\n                  title={item.title}\r\n                  description={item.description}>\r\n\r\n                  </List.Item.Meta>\r\n              </List.Item>)}>\r\n            </List>\r\n          </>)\r\n        }\r\n\r\n        \r\n      };\r\n    \r\n    const renderFooter = () => {\r\n        if(showStatus === \"purchase\"){\r\n        return (\r\n          <>\r\n            <Button onClick={() => setAgentModalVis(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => purchaseAgent()}>\r\n              Purchase\r\n            </Button>\r\n          </>\r\n        );}else if(showStatus===\"confirm\"){\r\n          return (<>\r\n            <Button type=\"primary\" onClick={()=>{setAgentModalVis(false);setStatus(\"purchase\");}}>\r\n              Confirm\r\n            </Button>\r\n          </>)\r\n        }\r\n      };\r\n\r\n      console.log(rowRecord.airline);\r\n    return (<Modal width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title={showStatus===\"purchase\"?\"Purchase Ticket\":\"Purchasement Info\"}\r\n        visible={agentModalVis}\r\n        footer={renderFooter()}\r\n        onCancel={() => {setAgentModalVis(false);setRowRecord(false)}}>\r\n         <Form\r\n          {...formLayout}\r\n          form={form}\r\n            initialValues={{\r\n                airlineName:rowRecord.airline,\r\n                flightNum:rowRecord.flight_id\r\n            }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n        \r\n    </Modal>)\r\n\r\n\r\n\r\n\r\n}","import {Input, Space, DatePicker, Select, Card, Button, Divider, Tag, Table,Modal} from 'antd';\nimport React, {useState,useEffect} from \"react\";\nimport {SwapOutlined} from \"@ant-design/icons\";\nimport {statusColor} from \"../../lib/statusTag\";\nimport {dateFormat} from \"../../lib/dateFormat\";\nimport {globalInterfaceColumns, ticketColumns} from \"../../lib/flightData\";\nimport CustomerModal from \"./PurchaseModals/CustomerModal\";\nimport AgentModal from \"./PurchaseModals/AgentModal\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport qs from \"qs\";\nimport {v4 as uuidv4} from \"uuid\";\n\nconst {Search} = Input;\nconst {Option} = Select;\n\nexport function FlightsResultTable(props) \n{\n    const {data,userType,actionType,setRowRecord,setCustomerModalVis,setAgentModalVis} = props;\n    const {RangePicker} = DatePicker;\n\n    const agentInterfaceColumns = [\n        {\n            title:\"Ticket Id\",\n            dataIndex:\"ticket_id\",\n            key:\"ticket\"\n        },\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {   \n            title:\"Airline Name\",\n            dataIndex:\"airline\",\n            key:\"airline\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\"\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\"\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Customer Email\",\n            dataIndex: \"customerEmail\",\n            key: \"customerEmail\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        },  {\n            title: \"Action\",\n            key: 'action',\n            render: (text, record) => (\n                <Space size={\"middle\"}>\n                    <Button disabled={(record.status==(\"finished\"||\"onBoarding\"))||record.full===true} onClick={()=>{\n                        \n                        setAgentModalVis(true);\n                        setRowRecord(record);\n                        \n                        }} >Book {record.flight_id}</Button>\n                </Space>\n            )\n        }\n    ]\n\n    const customerInterfaceColumns = [\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\"\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\"\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        },\n        {\n            title: \"Action\",\n            key: 'action',\n            render: (text, record) => (\n                <Space size={\"middle\"}>\n                    <Button disabled={record.status==(\"finished\"||\"onBoarding\")} \n                    onClick={()=>{\n                        \n                        setCustomerModalVis(true);\n                        setRowRecord(record);\n                        \n                        }}>Book {record.flight_id}</Button>\n                </Space>\n            )\n        }\n    ];\n\n    const defaultColumns = [\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {   \n            title:\"Airline Name\",\n            dataIndex:\"airline\",\n            key:\"airline\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\"\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\"\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        }\n    ]\n    \n\n    let columns = userType===\"customer\"? customerInterfaceColumns:userType===\"agent\"?agentInterfaceColumns:globalInterfaceColumns;\n    let dataMap = data;\n    if(actionType!==\"view\"){\n     dataMap = data.map(item=>{\n        return({key:[item.airlineName,item.flightNum],\n        flight_id:item.flightNum,\n        airline:item.airlineName,\n        dept:item.sourceAirportName,\n        arri:item.destAirportName,\n        dept_time:item.departureTime,\n        arri_time:item.arrivalTime,\n        price:item.price,\n        status:[item.status]\n        })\n    })}else if(actionType===\"view\"){\n        console.log(data);\n         dataMap = data.map(item=>{\n            return({\n                key:item.ticketId,\n                ticket_id:item.ticketId,\n                flight_id:item.flightNum,\n                airline:item.airlineName,\n                dept:item.sourceAirportName,\n                arri:item.destAirportName,\n                dept_time:item.departureTime,\n                arri_time:item.arrivalTime,\n                price:item.price,\n                customerEmail:item.customerEmail,\n                status:[item.status]\n            })\n        })\n    }\n\n    console.log(dataMap);\n    if(actionType!==\"view\"){\n        columns = columns.filter((item)=>(item.title!=\"Ticket Id\")&&(item.title!==\"Customer Email\"));\n    }\n    //根据actionTab 过滤展示的列\n    if(actionType!==\"purchase\"){\n        columns = columns.filter((item)=>item.title!=\"Action\")\n    }\n\n    if(actionType===\"search\"){\n        columns = columns.filter((item)=>item.title!=\"User ID\");\n    }\n    return (\n        <Table columns={columns} dataSource={dataMap} size=\"middle\"/>\n    )\n}\n\nexport default function SearchFlights({userType,actionTab,flightsResult,setFlightResult,actionType}) {\n\n    const {RangePicker} = DatePicker;\n\n    const [deptAirport, setDeptAirport] = useState(undefined);\n    const [arriAirport, setArriAirport] = useState(undefined);\n    const [deptDate, setDeptDate] = useState(\"\"); //today\n    const [deptDate2,setDeptDate2] = useState(\"\");\n    const [searchResult, setSearchResult] = useState([]);\n    // const [flightsResult, setFlightResult] = useState(null);\n    const [flightID, setFlightID] = useState(undefined);\n    // 设置点击购买按钮后的数据\n    const [rowRecord,setRowRecord] = useState(undefined);\n\n    // 设置模态对话框用于提交购买信息\n    const [agentModalVis,setAgentModalVis] = useState(false);\n    const [customerModalVis,setCustomerModalVis] = useState(false);\n\n\n    \n\n    const searchAirport=()=>{\n        axios({\n            url:\"http://localhost:8080/index/searchAirports\",\n            type:\"GET\",\n        }).then(function(response){\n            if(response.data){\n                setSearchResult(response.data);\n            }else{\n                console.log(\"No Results\");\n            }\n        })\n    };\n\n    const options = searchResult.map(item => <Option key={item}>{item}</Option>);\n\n    const handleSearch = (value) => {\n        if (value) {\n            setTimeout(searchAirport, 500);\n        } else {\n            setSearchResult([]);\n        }\n    }\n\n    //callback就是传入的回调函数，value就是一个参数为value的，调用了callback的函数\n    const handleChange = (callBack) => (value) => {\n        callBack(value);\n    }\n\n    const swapDeptArri = () => {\n        let tmp = deptAirport;\n        setDeptAirport(arriAirport);\n        setArriAirport(tmp);\n    }\n\n    const handleSearchFlights = () => {\n        // search flights\n        console.log(\"xixi\");\n        axios({\n            url:\"http://localhost:8080/index/searchFlights\",\n            method:\"POST\",\n            data: {sourceAirportName:deptAirport,\n                destAirportName:arriAirport,\n                departureTime:deptDate}\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                setFlightResult(response.data);\n            }else{\n                console.log(\"No Results\");\n            }\n        }).catch(function(response){\n            console.log(\"haha\");\n        })\n\n    }\n\n    const handleSearchPurchase = () => {\n        console.log(\"xixi\");\n        axios({\n            url:\"http://localhost:8080/bookingAgent/getAllAvailableFlights\",\n            method:\"POST\",\n            data: {}\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                setFlightResult(response.data);\n            }else{\n                console.log(\"No Results\");\n            }\n        })\n\n    }\n\n    const handleExactSearch = () => {\n        setFlightResult(\"testing\");\n    }\n\n\n    // 处理和ViewFlights相关的请求\n    const handleViewFlights = ()=>{\n        let sendObject = null;\n        console.log(\"xixi\");\n        if(deptDate===\"\"&&deptDate2===\"\"){\n            sendObject = qs.stringify({\n                sourceAirport:deptAirport,\n                destAirport:arriAirport,\n                email:\"abababababa@gmail.com\",\n            })\n        }else{\n            sendObject= qs.stringify({\n                sourceAirport:deptAirport,\n                destAirport:arriAirport,\n                email:\"abababababa@gmail.com\",\n                startDate:new Date(deptDate),\n                endDate:new Date(deptDate2)\n            })\n        }\n        axios({\n            url:userType===\"customer\"?\"http://localhost:8080/customer/getMyFlights\":\"http://localhost:8080/bookingAgent/getMyFlights\",\n            method:\"POST\",\n            header:{\n                \"Content-Type\":\"application/x-www-form-urlencoded;charset=UTF-8\"\n            },\n            data:sendObject\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                setFlightResult(response.data);\n            }else{\n            }\n        }).catch(function(response){\n            console.log(\"出错了\");\n        })\n    }\n\n    return (\n        <Card title={actionTab!==\"view\"?\"Start planning your journey, Username!\":\"Welcome you\"}>\n            <Input.Group>\n                <b>From:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"From\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Departure Airport\"}\n                    value={deptAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setDeptAirport)}\n                    notFoundContent={null}\n                    allowClear\n                >\n                    {options}\n                </Select>\n                <Button shape=\"circle\" icon={<SwapOutlined />} onClick={swapDeptArri} />\n                <b style={{paddingLeft: 10}}>To:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"To\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Arrival Airport\"}\n                    value={arriAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setArriAirport)}\n                    notFoundContent={null}\n                    allowClear\n                >\n                    {options}\n                </Select>\n                {actionType===\"view\"?<RangePicker onChange={()=>{handleChange(setDeptDate);handleChange(setDeptDate2)}} picker=\"day\" style={{width:200}} placeholder={[\"Begin With\",\"End With\"]}></RangePicker>:\n                <DatePicker format={dateFormat} onChange={handleChange(setDeptDate)} style={{width:200}} placeholder={\"Depate After\"} />}\n                \n                <span style={{padding: 10}}> </span>\n                <Button type=\"primary\" onClick={actionType===\"view\"?handleViewFlights:actionType===\"purchase\"?handleSearchPurchase:handleSearchFlights}>Search</Button>\n            </Input.Group>\n            \n            {(actionTab===\"purchase\")&&(\n                <div>\n            <p>Or use exact searching:</p>\n            <Input\n                addonBefore=\"Flight Number\"\n                placeholder=\"Airline Code + Digits\"\n                value={flightID}\n                allowClear\n                maxLength={6}\n                style={{width: '50vw'}}\n            />\n            <b style={{padding: 10}}> </b>\n            <Button type={\"primary\"} onClick={handleExactSearch}>Exact Searching</Button></div>)}\n            <Divider />\n            {flightsResult ? <FlightsResultTable data={flightsResult}  userType={userType} actionType={actionType} setRowRecord={setRowRecord} setAgentModalVis={setAgentModalVis} setCustomerModalVis={setCustomerModalVis}/> : null}\n            \n            {rowRecord? <AgentModal agentModalVis={agentModalVis} setAgentModalVis={setAgentModalVis} rowRecord={rowRecord} setRowRecord={setRowRecord}></AgentModal>:null}\n\n            {rowRecord? <CustomerModal customerModalVis={customerModalVis} setCustomerModalVis={setCustomerModalVis} rowRecord={rowRecord} setRowRecord={setRowRecord}></CustomerModal>:null}\n                \n        </Card>\n    )\n}","import {FlightsResultTable} from \"../flight/SearchFlights\";\nimport React, {useState} from \"react\";\nimport {Button, Card, DatePicker, Divider, Input, Select} from \"antd\";\nimport {SwapOutlined} from \"@ant-design/icons\";\nimport {dateFormat} from \"../../lib/dateFormat\";\n\nconst {Option} = Select;\n\nexport default function PurchaseTicket() {\n    // result body:\n    // [{most match: city if city, airport if airport},\n    // {cities if city, airports if airport}, ...,\n    // {airports if city, cities if airport}, {}]\n\n    const [deptAirport, setDeptAirport] = useState(undefined);\n    const [arriAirport, setArriAirport] = useState(undefined);\n    const [deptDate, setDeptDate] = useState(\"\"); //today\n    const [searchResult, setSearchResult] = useState([]);\n    const [flightsResult, setFlightResult] = useState(null);\n    const [flightID, setFlightID] = useState(undefined);\n\n    //for testing ONLY\n    const test = () => {setSearchResult([\"Shanghai\", \"Shangrao\", \"Bashang\", \"SHA\", \"PVG\", \"SQD\", \"ZQZ\"])};\n\n    const options = searchResult.map(item => <Option key={item}>{item}</Option>);\n\n    const handleSearch = (value) => {\n        if (value) {\n            setTimeout(test, 500);\n        } else {\n            setSearchResult([]);\n        }\n    }\n    const handleChange = (callBack) => (value) => {\n        callBack(value);\n    }\n\n    const swapDeptArri = () => {\n        let tmp = deptAirport;\n        setDeptAirport(arriAirport);\n        setArriAirport(tmp);\n    }\n\n    const handleSearchFlights = () => {\n        // search flights\n        setFlightResult(\"testing\");\n    }\n\n    const handleExactSearch = () => {\n        setFlightResult(\"testing\");\n    }\n\n\n    return (\n        <Card title=\"Start planning your journey, Username!\">\n            <Input.Group>\n                <b>From:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"From\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Departure Airport\"}\n                    value={deptAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setDeptAirport)}\n                    notFoundContent={null}\n                >\n                    {options}\n                </Select>\n                <Button shape=\"circle\" icon={<SwapOutlined />} onClick={swapDeptArri} />\n                <b style={{paddingLeft: 10}}>To:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"To\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Arrival Airport\"}\n                    value={arriAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setArriAirport)}\n                    notFoundContent={null}\n                >\n                    {options}\n                </Select>\n                <DatePicker format={dateFormat} onChange={handleChange(setDeptDate)} style={{width:200}} />\n                <span style={{padding: 10}}> </span>\n                <Button type=\"primary\" onClick={handleSearchFlights}>Search</Button>\n            </Input.Group>\n            <p>Or use exact searching:</p>\n            <Input\n                addonBefore=\"Flight Number\"\n                placeholder=\"Airline Code + Digits\"\n                value={flightID}\n                allowClear\n                maxLength={6}\n                style={{width: '50vw'}}\n            />\n            <b style={{padding: 10}}> </b>\n            <Button type={\"primary\"} onClick={handleExactSearch}>Exact Searching</Button>\n\n            <Divider />\n            {flightsResult ? <FlightsResultTable data={flightsResult} /> : null}\n        </Card>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Pie} from \"@ant-design/charts\";\nimport {Input, Space, DatePicker, Select, Card, Button, Divider, Tag, Table} from 'antd';\nimport {dateFormat} from \"../../lib/dateFormat\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nexport default function SpendingChart() {\n\n    const [spendingData, setSpendingData] = useState([]);\n    const [startDate,setStart] = useState(moment().subtract(30, 'days'));\n    const [endDate,setEnd] = useState(moment());\n\n    useEffect(()=>{\n        axios({\n            url:\"http://localhost:8080/customer/trackSpending\",\n            method:\"POST\",\n            data:{startDate:startDate,\n                endDate:endDate,\n                email:\"12345@qq.com\"},\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n            const dataMap = response.data.map((item)=>({type:item.timestamp,value:item.value}))\n            setSpendingData(dataMap);}\n        })\n    },[])\n\n    const setStartDate = (value)=>{\n        setStart(value);\n    }\n\n    const setEndDate = (value)=>{\n        setEnd(value);\n    }\n\n    const handleSubmit=()=>{\n        console.log(startDate);\n        console.log(endDate);\n\n        \n    }\n\n    const handleChange = (value,type)=>{\n        let start = 0;\n        let end = 0;\n        if(type==\"start\"){\n            start = value\n            end = endDate;}\n            else{\n                start = startDate;\n                end = value;}\n        axios({\n            url:\"http://localhost:8080/customer/trackSpending\",\n            method:\"POST\",\n            data:{startDate:start,\n                endDate:end,\n                email:\"12345@qq.com\"},\n        }).then(function(response){\n            if(response.data.length>0){\n                console.log(response.data);\n            const dataMap = response.data.map((item)=>({type:item.timestamp,value:item.value}))\n            setSpendingData(dataMap);\n            if(type==\"start\"){\n            setStartDate(start);}\n            else{\n            setEndDate(end);}}else{\n                setSpendingData([{item:\"9\",value:9999}])\n            }\n        })\n    }\n\n    const chartConfig = {\n        appendPadding: 10,\n        data: spendingData, // TODO: use props or ask for the server\n        angleField: 'value',\n        colorField: 'type',\n        radius: 0.9,\n        meta: {\n            type: {\n                alias: 'Month',\n            },\n            value: {\n                alias: 'Total Spending',\n                formatter: (v) => (\"$\" + v.toString()),\n            },\n        },\n        label: {\n            type: 'inner',\n            offset: '-30%',\n        }\n    }\n\n    return (\n        <Card title=\"See your amazing trips, Username!\">\n            <Input.Group>\n\n            <DatePicker format={dateFormat} placeholder={\"startDate\"} defaultValue={startDate} onChange={(value)=>{handleChange(value,\"start\");}} style={{width:200}} />\n            <b style={{padding: 190}}> </b>\n            <DatePicker format={dateFormat} placeholder={\"endDate\"} defaultValue={endDate} onChange={(value)=>{handleChange(value,\"end\")}} style={{width:200}} />\n            <b style={{padding: 160}}> </b>\n            </Input.Group>\n            <Pie {...chartConfig} />\n        </Card>\n    )\n}","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst {SubMenu} = Menu;\n\nexport default function AgentSidebar({updateSelection,defaultData,setActionType,setFlightResult}) {\n    const tagList = {\n        \"1\": \"Search flights\",\n        \"2\": \"Create order\",\n        \"3\": \"My customer orders\",\n        \"4\": \"Commission statistics\",\n        \"5\": \"Top customers\",\n        \"6\": \"Logout\"\n    }\n    const navigate = useNavigate();\n\n    const actionTypeMapping={\n        \"1\":\"search\",\n        \"2\":\"purchase\",\n        \"3\":\"view\"\n    }\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // clear local account information\n            navigate(\"/\", {replace: true})\n        }\n        updateSelection(tagList[item.key]);\n            setFlightResult(null);\n        setActionType(actionTypeMapping[item.key]);\n\n    }\n\n    useEffect(() => {\n        updateSelection(\"Commission statistics\")\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['4']}\n            defaultOpenKeys={['sub2']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Booking\">\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Mine\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"4\">{tagList['4']}</Menu.Item>\n                <Menu.Item key=\"5\">{tagList['5']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"6\">{tagList['6']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","import React, {useState} from \"react\";\nimport {Column} from \"@ant-design/charts\";\nimport {Card, Divider, Typography,InputNumber} from \"antd\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport axios from \"axios\";\n\nconst {Title} = Typography;\n\nexport default function TopCustomerChart() {\n    const [customerTicketCount, setCustomerTicketCount] = useState(null);\n    const [customerCommission, setCustomerCommission] = useState(null);\n    const [activeTab,setActiveTab] = useState(\"tickets\");\n    const [data,setData]=useState([]);\n    const [topK,setTopK] = useState(5);\n\n    const tabList = [\n        {key: 'tickets', tab: 'Tickets Ranking'},\n        {key: 'commission', tab: 'Commission Ranking'},\n    ]\n\n    useEffect((()=>{\n        searchTickets();\n        // setData(testTicket);\n    }),[])\n\n\n    // for testing ONLY\n    const testTicket = [\n        {\n            uid: \"123\",\n            sum: 15,\n        },\n        {\n            uid: \"234\",\n            sum: 11,\n        },\n        {\n            uid: \"471\",\n            sum: 9,\n        },\n        {\n            uid: \"602\",\n            sum: 7,\n        },\n        {\n            uid: \"866\",\n            sum: 5,\n        },\n    ];\n    const testCommission = [\n        {\n            uid: \"123\",\n            sum: 9806.3,\n        },\n        {\n            uid: \"234\",\n            sum: 7503.5,\n        },\n        {\n            uid: \"471\",\n            sum: 6602.6,\n        },\n        {\n            uid: \"602\",\n            sum: 1025.2,\n        },\n        {\n            uid: \"866\",\n            sum: 897.8,\n        },\n    ]\n\n    const columnConfig = {\n        xField: 'email',\n        yField: \"sum\",\n        seriesField: '',\n        columnWidthRatio: 0.5,\n        label: {\n            position: 'middle',\n            style: {\n                fill: '#FFFFFF',\n                opacity: 0.8\n            }\n        },\n        xAxis: {\n            label: {\n                autoHide: true,\n                autoRotate: false,\n            }\n        },\n    }\n\n\n    const searchCommission = ()=>{\n        axios({\n            method:'GET',\n            url:\"http://localhost:8080/bookingAgent/getTopKCommission\",\n            params:{\"K\":topK}\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                const formattedData = response.data.map((item)=>({\"email\":item.email,\"sum\":item.totalCommission}))\n                setData(formattedData);\n            }\n        })\n    }\n\n    const searchTickets = ()=>{\n        axios({\n            method:'GET',\n            url:\"http://localhost:8080/bookingAgent/getTopKTickets\",\n            params:{\"K\":topK}\n        }).then(function(response){\n            if(response.data){\n                const formattedData = response.data.map((item)=>({\"email\":item.email,\"sum\":item.ticketsFromAgent}))\n                setData(formattedData);\n            }\n        })\n    }\n\n    const onTabChange = (key)=>{\n        setActiveTab(key);\n        if(key===\"tickets\"){\n            searchTickets();\n            // setData(testTicket)\n        }else{\n            searchCommission();\n            // setData(testCommission);\n        }\n    }\n\n    const onNumberChange=(value)=>{\n        //更新图标\n        setTopK(value);\n    }\n    \n\n    return (\n        <Card title=\"Customer Statistics\"\n              tabList={tabList}\n              activeTab={activeTab}\n        onTabChange={onTabChange}\n        tabBarExtraContent={<><span style={{marginRight:5}}>Top</span><InputNumber min={1} onChange={onNumberChange} defaultValue={5}></InputNumber><span style={{marginLeft:5}}>Agents</span></>}\n        >\n            <Column {...columnConfig}\n                    data={data.slice(0,topK)}\n                    meta={{uid: {alias: 'User ID'}, sum: {alias:activeTab===\"tickets\"?'Ticket Number':'Total Commission'}}} />\n        </Card>\n    )\n}","import {DatePicker, Statistic, Card, Space} from \"antd\";\nimport React, {useEffect, useState} from \"react\";\n//后续可通过moment()获取当前的时间\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nconst {RangePicker} = DatePicker;\n\nexport default function CommissionStatistics() {\n    const [commissionData, setCommissionData] = useState(null);\n    const [avgcommissionData,setAvgCommissionData] = useState(null);\n    const [totalTickets,setTotalTickets] = useState(null);\n\n    const handleDateRangeChange = (value,dateString) => {\n        console.log(value);\n        // console.log(dateString);\n        axios({\n            url:\"http://localhost:8080/bookingAgent/getCommissionInfo\",\n            method:\"GET\",\n            params:{\n                email:\"cathayEmp01@csair.com\",\n                startDate:new Date(value[0]),\n                endDate:new Date(value[1])\n            }\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                 setCommissionData(response.data.commissionFees);\n                 setAvgCommissionData(response.data.averageCommissionFees);\n                 setTotalTickets(response.data.ticketBooked);\n            }\n        })\n     \n\n       \n    }\n\n    const loadingHolder = Boolean(commissionData);\n    const loadingHolderForAvg = Boolean(avgcommissionData);\n    const loadingHolderForTickets = Boolean(totalTickets);\n\n    useEffect(() => {\n        axios({\n            url:\"http://localhost:8080/bookingAgent/getCommissionInfo\",\n            method:\"GET\",\n            params:{\n                email:\"cathayEmp01@csair.com\",\n                startDate:new Date(moment().subtract(30, 'days')),\n                endDate:new Date(moment())\n            }\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                 setCommissionData(response.data.commissionFees);\n                 setAvgCommissionData(response.data.averageCommissionFees);\n                 setTotalTickets(response.data.ticketBooked);\n            }\n        })\n    }, []);\n\n    return (\n        <Card title=\"Checking Total Commission for Username\">\n            <Space direction=\"vertical\" size='large' style={{width: '100%'}}>\n                <RangePicker\n                    onChange={handleDateRangeChange}\n                    defaultValue={[moment().subtract(30, 'days'), moment()]}\n                />\n                <div style={{textAlign: 'center', width: '100%'}}>\n                    <Statistic\n                        title=\"Total Commission in (USD)\"\n                        value={commissionData}\n                        loading={!loadingHolder}\n                        precision={2}\n                        style={{width: '100%'}}\n                    />\n                    <Statistic\n                        title=\"Average Commission in (USD)\"\n                        value={avgcommissionData}\n                        loading={!loadingHolderForAvg}\n                        precision={2}\n                        style={{width: '100%'}}\n                    />\n                    <Statistic\n                        title=\"Total Tickets Booked On Behalf of the customer\"\n                        value={totalTickets}\n                        loading={!loadingHolderForTickets}\n                        style={{width: '100%'}}\n                    />\n                </div>\n            </Space>\n        </Card>\n    )\n\n}","import {CarryOutOutlined, FundViewOutlined, SendOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst {SubMenu} = Menu;\n\nexport default function StaffSidebar({updateSelection}) {\n    const tagList = {\n        // Flight Management\n        \"2\": \"Flight CRUD\",\n        \"4\": \"Add airplane\",\n        \"5\": \"Add airport\",\n        // Statistics\n        \"3\": \"View Agents\",\n        \"6\": \"Frequent customers\",\n        \"7\": \"Revenue Comparison\",\n        \"8\": \"Top destinations\",\n        \"9\": \"View Reports\",\n        // Operation\n        \"10\": \"Add booking agent\",\n        \"11\": \"Grant permission\",\n        \"12\": \"Logout\",\n\n    }\n    const navigate = useNavigate();\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // clear local account information\n            navigate(\"/\", {replace: true})\n        }\n        updateSelection(tagList[item.key])\n    }\n\n    useEffect(() => {\n        updateSelection(\"View Reports\");\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['9']}\n            defaultOpenKeys={['sub2']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<SendOutlined />} title=\"Flight Management\">\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n                <Menu.Item key=\"4\">{tagList['4']}</Menu.Item>\n                <Menu.Item key=\"5\" disabled={false}>{tagList['5']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<FundViewOutlined />} title=\"Statistics\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"6\">{tagList['6']}</Menu.Item>\n                <Menu.Item key=\"7\">{tagList['7']}</Menu.Item>\n                <Menu.Item key=\"8\">{tagList['8']}</Menu.Item>\n                <Menu.Item key=\"9\">{tagList['9']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"10\">{tagList['10']}</Menu.Item>\n                <Menu.Item key=\"11\">{tagList['11']}</Menu.Item>\n                <Menu.Item key=\"12\">{tagList['12']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","import React, {useState} from \"react\";\nimport {Input, Card, Button,Form,message} from \"antd\";\nimport qs from \"qs\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nexport default function EditAirport() {\n\n    const onFinish =(values)=>{\n      console.log(values);\n      axios({\n        url:\"http://localhost:8080/airlineStaff/addNewAirport\",\n        method:\"post\",\n        data:values\n      }).then(function(response){\n        if(response.data===\"success\"){\n          message.success({\n            content: 'Insertion Completed',\n            className: 'custom-class',\n            style: {\n              marginTop: '40vh',\n            },\n          });\n        }else{\n          message.error({\n            content: 'You have already inserted this airport!',\n            className: 'custom-class',\n            style: {\n              marginTop: '40vh',\n            },\n          });\n        }\n      })\n    }\n\n    const onFinishFailed = ()=>{\n      console.log(\"xixi\");\n    }\n\n    const onReset = ()=>{\n      form.resetFields();\n    }\n\n    const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n\n    const [form] = Form.useForm();\n    return (\n        <Card title=\"Airport Information Management\">\n           <Form\n           form={form}\n            name=\"airport form\"\n            className=\"airport_form\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            scrollToFirstError>\n           \n            <Form.Item\n            name=\"airportName\"\n            label=\"Airport Name\"\n            rules={[\n                {\n                  required:true,\n                message:\"Airport Name should not be empty!\"\n                }\n            ]}\n            validateTrigger='onBlur'\n            hasFeedback>\n\n                <Input ></Input>\n            </Form.Item>\n\n            <Form.Item\n            name=\"airportCity\"\n            label=\"Airport City\"\n            validateTrigger='onBlur'\n            rules={\n              [\n                {\n                  required:true,\n                message:\"Airport City should not be empty!\"}\n            ]}\n            hasFeedback>\n\n                <Input></Input>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}> \n            <Button type=\"primary\" htmlType=\"submit\">\n              Add\n            </Button>\n            <Button type=\"primary\" onClick={onReset}>\n              Reset\n            </Button>\n          </Form.Item>\n          </Form>\n\n\n        </Card>\n    )\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,InputNumber,message} from \"antd\";\r\nimport qs from \"qs\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport default function EditAirport() {\r\n\r\n    const onFinish =(values)=>{\r\n      console.log(values);\r\n      axios({\r\n        url:\"http://localhost:8080/airlineStaff/addNewAirplane\",\r\n        method:\"post\",\r\n        data:{airline:values.airlineName,\r\n              id:values.airplaneId,\r\n              seats:values.seats\r\n              }\r\n      }).then(function(response){\r\n        if(response.data===\"success\"){\r\n          message.success({\r\n            content: 'Insertion Completed',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '40vh',\r\n            },\r\n          });\r\n        }else{\r\n          message.error({\r\n            content: 'You have already inserted this airplane information!',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '40vh',\r\n            },\r\n          });\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n    const onFinishFailed = ()=>{\r\n        console.log(\"验证失败\");\r\n    }\r\n\r\n    const onReset = ()=>{\r\n      form.resetFields();\r\n    }\r\n\r\n    const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Card title=\"Airplane Information Management\">\r\n           <Form\r\n           form={form}\r\n            name=\"airplane\"\r\n            className=\"airplane-form\"\r\n            onFinish={onFinish}\r\n            onFinishedFailed={onFinishFailed}>\r\n           \r\n            <Form.Item\r\n            name=\"airlineName\"\r\n            label=\"Airline Name\"\r\n            rules={[\r\n                {required:true,\r\n                message:\"Aiport Name should not be empty!\"}\r\n            ]}>\r\n\r\n                <Input ></Input>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n            name=\"airplaneId\"\r\n            label=\"Airplane Id\"\r\n            rules={[\r\n                {required:true,\r\n                message:\"Aiport Id should not be empty!\"}\r\n            ]}>\r\n\r\n                <Input></Input>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n            name=\"seats\"\r\n            label=\"Seat Number\"\r\n            >\r\n\r\n                <InputNumber defaultValue={200} ></InputNumber>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}> \r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Add\r\n            </Button>\r\n            <Button type=\"primary\" onClick={onReset}>\r\n              Reset\r\n            </Button>\r\n          </Form.Item>\r\n          </Form>\r\n\r\n        </Card>\r\n    )\r\n}","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {Menu,Avatar} from \"antd\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nexport default function GlobalSidebar({updateSelection}){\r\n    const tagList = {\r\n        \"1\": \"Search flights\",\r\n        \"2\": \"Exit the System\",\r\n    }\r\n    const navigate = useNavigate();\r\n\r\n    const handleSidebarClick = (item) => {\r\n        if (tagList[item.key] == \"Exit the System\") {\r\n            // clear local account information\r\n            //Todo\r\n            navigate(\"/\", {replace: true})\r\n        }\r\n        updateSelection(tagList[item.key])\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateSelection(\"Search flights\")\r\n    }, [])\r\n\r\n    return (\r\n        <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1']}\r\n            onClick={handleSidebarClick}\r\n            style={{height: '100%', borderRight: 0}}\r\n        >\r\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Operation\">\r\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\r\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\r\n            </SubMenu>\r\n        </Menu>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nconst formLayout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 13 },\r\n  };\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function CreateForm(props){\r\n    const{modalVisible,onCancel,onSubmit,handleCreateModalVisible,handleCreate} = props;\r\n    const[formVals,setFormVals] = useState({}); //用于批量添加，暂时用不到\r\n\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const disabledDate = (current) => {\r\n      // Can not select days before today and today\r\n      return current && current < moment().endOf('day');\r\n    }\r\n\r\n    const options = [\"upcoming\",\"finished\",\"cancelled\",\"onBoarding\",\"delayed\"];\r\n    const optionsData = options.map((item)=><Option key={item}>{item}</Option>)\r\n\r\n    \r\n\r\n    const handleNext = async () => {\r\n        const fieldsValue = await form.validateFields();\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/validateNewAirplane\",\r\n          method:\"POST\",\r\n          data:{\r\n            id:fieldsValue.airplaneId,\r\n            airline:fieldsValue.airlineName\r\n          }\r\n        }).then(function(response){\r\n          if(response.data===\"success\"){\r\n            setFormVals({ ...formVals, ...fieldsValue});\r\n            handleCreate({ ...formVals, ...fieldsValue});\r\n          }else{\r\n            message.error({\r\n              content: 'This airline name and airplane id is not found in the database!',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n          }\r\n        })\r\n        \r\n      };\r\n\r\n    const renderContent = () => {\r\n        return (\r\n          < >\r\n            <FormItem\r\n              name=\"flightNum\"\r\n              label=\"Flight Number\"\r\n              rules={[{ required: true, message: 'Please input flight number!' }]}\r\n            >\r\n              <Input placeholder=\"e.g. MU672\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"airlineName\"\r\n              label=\"Airline Name\"\r\n              rules={[{ required: true, message: 'Please input airline name' }]}\r\n            >\r\n              <Input placeholder=\"e.g. Cathay Pacific\" />\r\n            </FormItem>\r\n    \r\n            <FormItem\r\n              name=\"sourceAirportName\"\r\n              label=\"Departure Airport\"\r\n              rules={[{ required: true, message: 'Please Input Departure Airport' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (value && getFieldValue('destAirportName') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The arrivalAirport should not be the same as the departure Airport!'));\r\n                },\r\n              }),]}\r\n            >\r\n              <Input placeholder=\"e.g. PVG\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"departureTime\"\r\n              label=\"Departure Time\"\r\n              rules={[{ required: true, message: 'Please input Departure Time' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  console.log(\"xixi\");\r\n                  if (moment(value)<moment(getFieldValue(\"arrivalTime\"))) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('You cannot set the departure time to be later than arrival time!'));\r\n                },}),\r\n\r\n              ]}\r\n              >\r\n              <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n               disabledDate={disabledDate}\r\n               showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }\r\n              \r\n              }></DatePicker>\r\n            </FormItem>\r\n\r\n\r\n            <FormItem\r\n              name=\"destAirportName\"\r\n              label=\"Arrival Airport\"\r\n              rules={[{ required: true, message: 'Please Input Arrival Airport' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (value && getFieldValue('sourceAirportName') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The arrival airport should not be the same as the departure airport!'));\r\n                },\r\n              }),]}\r\n            >\r\n              <Input placeholder=\"e.g. SZX\" />\r\n            </FormItem>\r\n\r\n\r\n            <FormItem\r\n              name=\"arrivalTime\"\r\n              label=\"Arrival Time\"\r\n              rules={[{ required: true, message: 'Please input Arrival Time' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (moment(value)>moment(getFieldValue(\"departureTime\"))) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('You cannot set the arrival time to be earlier than  the departure time!'));\r\n                },\r\n              }),]}\r\n              >\r\n              <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n               disabledDate={disabledDate}\r\n               showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}></DatePicker>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"price\"\r\n              label=\"price\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please indicate the price of this flight!\"\r\n              }]}>\r\n              <InputNumber min={1} max={999999999} precision={2} style={{width:130}}></InputNumber>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"status\"\r\n              label=\"status\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please select the status of this flight!\"\r\n              }]}>\r\n              <Select >{optionsData}</Select>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"airplaneId\"\r\n              label=\"Airplane Id\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please select the airplane id for this flight!\"\r\n              }]}>\r\n              <Input placeholder=\"e.g. A380\"></Input>\r\n            </FormItem>\r\n\r\n\r\n          </>\r\n        );\r\n      };\r\n\r\n      const renderFooter = () => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleCreateModalVisible(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => handleNext()}>\r\n              Submit\r\n            </Button>\r\n          </>\r\n        );\r\n      };\r\n\r\n    return (\r\n        <Modal\r\n      destroyOnClose\r\n      title=\"Add Flight\"\r\n      visible={modalVisible}\r\n      onCancel={() => onCancel()}\r\n      footer={renderFooter()}\r\n      \r\n    >\r\n      {/* {props.children} */}\r\n\r\n      <Form\r\n          {...formLayout}\r\n          form={form}\r\n          name=\"flight\"\r\n          className=\"flight-form\"\r\n        >{renderContent()}\r\n        </Form>\r\n\r\n    </Modal>\r\n    )\r\n\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { ConsoleSqlOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst formLayout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 13 },\r\n  };\r\n\r\nexport default function UpdateForm(props){\r\n    const {onCancel,onSubmit,updateModalVisible,handleUpdateModalVisible,values,handleUpdate}=props;\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const disabledDate = (current) => {\r\n      // Can not select days before today and today\r\n      return current && current < moment().endOf('day');\r\n    }\r\n\r\n    const [formVals,setFormVals] = useState({\r\n        ...props.values,\r\n    });\r\n\r\n    const handleNext = async () => {\r\n        const fieldsValue = await form.validateFields();\r\n        setFormVals({ ...formVals, ...fieldsValue});\r\n        handleUpdate({ ...formVals, ...fieldsValue});\r\n      };\r\n\r\n      const renderContent = () => {\r\n        return (\r\n          <>\r\n            <FormItem\r\n              name=\"flightNum\"\r\n              label=\"Flight Number\"\r\n              rules={[{ required: true, message: 'Please input flight number!' }]}\r\n            >\r\n              <Input placeholder=\"请输入\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"airlineName\"\r\n              label=\"Airline Name\"\r\n              rules={[{ required: true, message: 'Please input airline name!' }]}\r\n            >\r\n              <Input placeholder=\"请输入\" />\r\n            </FormItem>\r\n    \r\n            {(<FormItem\r\n              name=\"sourceAirportName\"\r\n              label=\"Departure Airport\"\r\n              rules={[{ required: true, message: 'Please Input Departure Airport' }]}\r\n            >\r\n              <Input placeholder=\"请输入\" />\r\n            </FormItem>)}\r\n            {/* {(<FormItem\r\n            name=\"departureTime\"\r\n            label=\"Departure Time\"\r\n            rules={[{ required: true, message: 'Please input Departure Time' }]}\r\n            >\r\n            <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n              //  disabledDate={disabledDate}\r\n               showTime={{format:\"YYYY-MM-DD HH:mm:ss\"}}></DatePicker>\r\n            </FormItem>)} */}\r\n\r\n            <FormItem\r\n            name=\"destAirportName\"\r\n            label=\"Arrival Airport\"\r\n            rules={[{ required: true, message: 'Please input  Arrival Airport' }]}\r\n            >\r\n            <Input placeholder=\"请输入\" />\r\n            </FormItem>\r\n\r\n            {/* <FormItem\r\n            name=\"arrivalTime\"\r\n            label=\"Arrival Time\"\r\n            rules={[{ required: true, message: 'Please input Departure Time' }]}\r\n            >\r\n            <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n              //  disabledDate={disabledDate}\r\n               showTime={{format:\"YYYY-MM-DD HH:mm:ss\"}}></DatePicker>\r\n            </FormItem> */}\r\n\r\n            <FormItem\r\n            name=\"price\"\r\n            label=\"price\"\r\n            rules={[{ required: true, message: 'Please input the price' }]}\r\n            >\r\n            <Input placeholder=\"请输入\" />\r\n            </FormItem>\r\n            <FormItem\r\n            name=\"status\"\r\n            label=\"status\"\r\n            rules={[{ required: true, message: 'Please input the status' }]}\r\n            >\r\n            <Input placeholder=\"请输入\" />\r\n            </FormItem>\r\n          </>\r\n        );\r\n      };\r\n    \r\n      const renderFooter = () => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleUpdateModalVisible(false, values)}>取消</Button>\r\n            <Button type=\"primary\" onClick={() => handleNext()}>\r\n              提交\r\n            </Button>\r\n          </>\r\n        );\r\n      };\r\n  \r\n    return (\r\n    <Modal\r\n        width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title=\"Update Flight\"\r\n        visible={updateModalVisible}\r\n        footer={renderFooter()}\r\n        onCancel={() => handleUpdateModalVisible()}\r\n      >\r\n  \r\n        <Form\r\n          {...formLayout}\r\n          form={form}\r\n          initialValues={{\r\n            flightNum: formVals.flightNum,\r\n            airlineName: formVals.airlineName,\r\n            sourceAirportName: formVals.sourceAirportName,\r\n            // departureTime:formVals.dept_time,\r\n            destAirportName: formVals.destAirportName,\r\n            // arrivalTime:formVals.arri_time,\r\n            price:formVals.price,\r\n            status:formVals.status\r\n          }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n      </Modal>)\r\n}","import React, { useState } from 'react';\r\nimport { Table, Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport default function DetailsTable(props){\r\n    const {detailModalVisible,onCancel,handleDetailModalVisible,values} = props;\r\n\r\n    console.log(values);\r\n    \r\n    // const dataSource = [{\r\n    //     email:\"asda\",\r\n    //     name:\"Jack\",\r\n    //     building_num:\"No.10\",\r\n    //     street:\"Baker Street\",\r\n    //     city:\"NYC\",\r\n    //     state:\"USA\",\r\n    //     phone:\"1231231234\",\r\n    //     passportNumber:\"E1231414\",\r\n    //     passportExpiration:\"2029-10-21\",\r\n    //     passportCountry:\"China\",\r\n    //     birthday:\"1999-02-02\"\r\n    // }]\r\n\r\n    const dataSource = values.passengers;\r\n\r\n    const columns=[\r\n        {\r\n            title:\"Email\",\r\n            dataIndex:\"email\",\r\n            key:\"email\",\r\n            textWrap:\"word-break\",\r\n            width:150,\r\n            ellipsis:true,\r\n            fixed:\"left\"\r\n        },{\r\n            title:\"Name\",\r\n            dataIndex:\"name\",\r\n            key:\"name\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            \r\n        },\r\n        {\r\n            title:\"Building Number\",\r\n            dataIndex:\"buildingNumber\",\r\n            key:\"building\"\r\n        },\r\n        {\r\n            title:\"Street\",\r\n            dataIndex:\"street\",\r\n            key:\"street\"\r\n        },\r\n        {\r\n            title:\"City\",\r\n            dataIndex:\"city\",\r\n            key:\"city\"\r\n        },{\r\n            title:\"State\",\r\n            dataIndex:\"livingState\",\r\n            key:\"state\"\r\n        },{\r\n            title:\"Phone No.\",\r\n            dataIndex:\"phoneNumber\",\r\n            key:\"phone\",\r\n            textWrap:\"word-break\",\r\n            width:150,\r\n            ellipsis:true,\r\n        },{\r\n            title:\"Passport No.\",\r\n            dataIndex:\"passportNumber\",\r\n            key:\"passportnum\"\r\n        },{\r\n            title:\"Passport Exp.\",\r\n            dataIndex:\"passportExpiration\",\r\n            key:\"passportexp\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },{\r\n            title:\"Passport Country\",\r\n            dataIndex:\"passportCountry\",\r\n            key:\"passportCountry\"\r\n        },{\r\n            title:\"Birthday\",\r\n            dataIndex:\"birthday\",\r\n            key:\"birthday\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    return (\r\n    <>\r\n    <Modal \r\n    destroyOnClose\r\n      title=\"Customer Details\"\r\n      visible={detailModalVisible}\r\n      onCancel={() => onCancel()}\r\n      width={1300}\r\n      footer={[]}\r\n      >\r\n    <Table scroll={{x:1300}} columns={columns} dataSource={dataSource}>\r\n\r\n    </Table></Modal></>\r\n    )\r\n}","import React,{useEffect,useState,useRef} from \"react\";\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\nimport axios from \"axios\";\r\nimport {dateFormat} from \"../../lib/dateFormat\";\r\nimport \"antd/dist/antd.css\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport ProTable from '@ant-design/pro-table';\r\nimport { PageContainer, FooterToolbar } from '@ant-design/pro-layout';\r\nimport {PlusOutlined,DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport {Button, Space, Tag,Popconfirm, message} from \"antd\";\r\nimport { statusColor } from \"../../lib/statusTag\";\r\nimport CreateForm from \"./CRUDElements/CreateForm\";\r\nimport UpdateForm from \"./CRUDElements/UpdateForm\";\r\nimport DetailsTable from \"./CRUDElements/DetailsForm\";\r\n\r\nexport default function FlightCRUD(){\r\n\r\n    //控制添加Modal的可视\r\n    const [createModalVisible,handleCreateModalVisible] = useState(false);\r\n    //控制更新Modal的可视，由于需要数据回显，故和createModal分开写\r\n    const [updateModalVisible,handleUpdateModalVisible] = useState(false);\r\n    const [detailModalVisible,handleDetailModalVisible] = useState(false);\r\n    const [selectedRows,setSelectedRows] = useState([]);\r\n    //设置回显的数据\r\n    const [stepFormValues, setStepFormValues] = useState({});\r\n    //用于判断是否能够多选\r\n    const [radioValue, setRadioValue] = useState('read');\r\n    //从后台api获取的数据\r\n    const [apiData, setApiData] = useState([]);\r\n    //全局变量，在整个生命周期都有效\r\n    const actionRef = useRef();\r\n    //全局变量，用于控制是否加载默认数据\r\n    const defaultRef = useRef(true);\r\n\r\n    console.log(defaultRef);\r\n    \r\n    //异步方法提交数据, 注意这里返回一个异步函数\r\n    const fetchFlightData = async (query)=>{\r\n        return axios({\r\n          url:\"http://localhost:8080/airlineStaff/findAllFlights\",\r\n          method:\"GET\"\r\n        }).then(function(response){\r\n          if(response.data){\r\n            console.log(response.data);\r\n              defaultRef.current = false;\r\n              return {\"data\":{...response.data},\"success\":true};\r\n          }else{\r\n             return {\"data\":{},\"success\":false};\r\n          }\r\n        }).catch(function(){\r\n          console.log(\"返回默认数据\")\r\n          return {\"data\":dataSource,\"success\":true};\r\n        })  \r\n       \r\n    }\r\n\r\n    const fetchFilteredFlightData = async (query)=>{\r\n      console.log(query);\r\n      return axios({\r\n        url:\"http://localhost:8080/airlineStaff/findAllFilteredFlights\",\r\n        method:\"POST\",\r\n        data:query\r\n      }).then(function(response){\r\n        if(response.data){\r\n          console.log(response.data);\r\n            return {\"data\":{...response.data},\"success\":true};\r\n        }else{\r\n           return {\"data\":{},\"success\":false};\r\n        }\r\n      }).catch(function(){\r\n        console.log(\"返回默认数据\")\r\n        return {\"data\":dataSource,\"success\":true};\r\n      })  \r\n     \r\n  }\r\n\r\n    const dataSource = {\r\n      \"records\":[\r\n        {\r\n          flightNum: \"MU12243234\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"upcoming\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        {\r\n          flightNum: \"MU1224\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"upcoming\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        {\r\n          flightNum: \"MU234\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"upcoming\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        \r\n      ],\"total\":12,\"success\":true};\r\n\r\n\r\n    const handleDelete= (flight_id,airline_name)=>{\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/deleteFlight\",\r\n          method:\"POST\",\r\n          data:qs.stringify({\r\n            flightNum:flight_id,\r\n            airlineName:airline_name\r\n          })\r\n        }).then(function(response){\r\n          if(response.data){\r\n            actionRef.current.reload();\r\n\r\n        message.success(\"Click on Yes\");\r\n          }\r\n        }).catch(function(response){\r\n          message.success(\"Delete Failed\");\r\n        });\r\n        \r\n    }\r\n\r\n    const handleUpdate = (flight_info)=>{\r\n        console.log(\"update\");\r\n    }\r\n\r\n    const handleUpdateMany =()=>{\r\n      \r\n    }\r\n\r\n    //用于提交数据之后\r\n    const handleCreate = (values)=>{\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/addNewFlight\",\r\n          method:\"post\",\r\n          data:{...values,\r\n            departureTime:new Date(moment(values.departureTime)),\r\n            arrivalTime:new Date(moment(values.arrivalTime))}\r\n        }).then(function(response){\r\n          if(response.data===\"success\"){\r\n            message.success({\r\n              content: 'Insertion Completed',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n            handleCreateModalVisible(false);\r\n            actionRef.current.reload();\r\n          }else{\r\n            message.error({\r\n              content: 'You have already inserted this airplane information!',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n          }\r\n        })\r\n        \r\n    }\r\n\r\n    const handleDetails =()=>{\r\n        console.log(\"show info\");\r\n    }\r\n\r\n    const confirm = (e,record)=>{\r\n        handleDelete(record.flightNum,record.airlineName);\r\n    }\r\n\r\n    const cancel = (e)=>{\r\n        console.log(e);\r\n        message.error(\"Click on No\");\r\n\r\n    }\r\n\r\n\r\n    // 表格列配置项\r\n    const columns = [\r\n        {\r\n            title: \"Flight Number\",\r\n            dataIndex:\"flightNum\",\r\n            key:\"flightNum\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            fixed:\"left\",\r\n            \r\n        },\r\n        {\r\n            title: \"Airline Name\",\r\n            dataIndex:\"airlineName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key:\"airlineName\"\r\n        },\r\n        {\r\n            title: \"Dept. Airport\",\r\n            dataIndex: \"sourceAirportName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key: \"sourceAirportName\"\r\n        },\r\n        {\r\n            title: \"Arri. Airport\",\r\n            dataIndex: \"destAirportName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key: \"destAirportName\"\r\n        },\r\n        {\r\n            title: \"Dept. Time\",\r\n            dataIndex: \"departureTime\",\r\n            valueType:\"dateTime\",\r\n            // textWrap:\"word-break\",\r\n            width:150,\r\n            ellipsis:true,\r\n            key: \"departureTime\"\r\n        },\r\n        {\r\n            title: \"Arri. Time\",\r\n            dataIndex: \"arrivalTime\",\r\n            valueType:\"dateTime\",\r\n            key: \"arrivalTime\",\r\n            width:150,\r\n            // textWrap:\"word-break\",\r\n       \r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            dataIndex: \"price\",\r\n            hideInSearch:true,\r\n            key: \"price\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Airplane ID\",\r\n            dataIndex: \"airplaneId\",\r\n            hideInSearch:true,\r\n            key: \"airplaneId\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Status\",\r\n            dataIndex: \"status\",\r\n            hideInSearch:true,\r\n            key: \"status\",\r\n            render: tags => (\r\n                <>\r\n                    {\r\n                        <Tag color={statusColor[tags]} key={tags}>\r\n                            {tags.toUpperCase()}\r\n                        </Tag>\r\n                    }\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            key: 'action',\r\n            hideInSearch:true,\r\n            fixed:\"right\",\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                <Button onClick={()=>{\r\n                  handleDetailModalVisible(true);\r\n                  setStepFormValues(record);\r\n                }}>Details</Button>\r\n                <Button onClick={()=>{\r\n                    handleUpdateModalVisible(true);\r\n                    setStepFormValues(record);\r\n                }} type={'primary'} size={'small'} >\r\n                  <EditOutlined style={{fontSize: '15px'}} />\r\n                </Button>\r\n                <Popconfirm\r\n                     title=\"Are you sure to delete this row?\"\r\n                    onConfirm={(e)=>{confirm(e,record);}}\r\n                    onCancel={cancel}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                >\r\n                <Button onClick={()=>{\r\n                }} type={'primary'} size={'small'} danger >\r\n                  <DeleteOutlined style={{fontSize: '15px'}} />\r\n                </Button></Popconfirm>\r\n              </Space>\r\n        \r\n            )\r\n        }\r\n    ]\r\n\r\n    // 获取数据 \r\n    const getData = async (params,sort,filter) => {\r\n        // 组装查询参数，比如这里用 pageIndex 代替了 current\r\n        if(defaultRef.current==true){\r\n              console.log(\"调用getData\");\r\n            const query = {\r\n                ...params,\r\n                pageIndex: params.current\r\n            };\r\n            delete query.current;\r\n\r\n            // 发起请求\r\n            console.log(\"发起请求\")\r\n            const {data,success} = await fetchFlightData(query); //这里需要返回一个异步函数\r\n            \r\n            // 格式化返回数据\r\n            return {\r\n                data: data.records,\r\n                success,\r\n                total: data.total,\r\n            };\r\n        }else{\r\n          console.log(defaultRef);\r\n            console.log(\"调用getFilteredData\");\r\n            const query = {\r\n                ...params,\r\n                pageIndex: params.current\r\n            };\r\n            delete query.current;\r\n    \r\n            // 发起请求\r\n            console.log(\"发起请求\");\r\n            console.log(params);\r\n            const {data,success} = await fetchFilteredFlightData(query); //这里需要返回一个异步函数\r\n            \r\n            // 格式化返回数据\r\n            return {\r\n                data: data.records,\r\n                success,\r\n                total: data.total,\r\n            };\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <ProTable\r\n            columns={columns}\r\n            actionRef={actionRef}\r\n            request={getData}\r\n            rowKey={(record,index)=>index}\r\n            scroll={{\"y\":300,x:1300}}\r\n            form={{span:8}}\r\n            size={\"middle\"}\r\n            rowSelection={{\r\n                onchange:(_,selectedRows)=>setSelectedRows(selectedRows),\r\n            }}\r\n            toolBarRender={() => [\r\n            <Button key=\"3\" type=\"primary\" onClick={()=>{\r\n                handleCreateModalVisible(true);\r\n\r\n            }}>\r\n                <PlusOutlined />\r\n                Add Flight\r\n            </Button>,\r\n        ]}\r\n        />\r\n\r\n        {selectedRows?.length > 0 && (\r\n        <FooterToolbar\r\n          extra={\r\n            <div>\r\n              已选择 <a style={{ fontWeight: 600 }}>{selectedRows.length}</a> 项&nbsp;&nbsp;\r\n            </div>\r\n          }\r\n        >\r\n          { radioValue === 'read' && (<Button\r\n            danger\r\n            type=\"primary\"\r\n            onClick={async () => {\r\n              await handleDelete(selectedRows);\r\n              setSelectedRows([]);\r\n              // @ts-ignore\r\n              actionRef.current?.reloadAndRest();\r\n            }}\r\n          >\r\n            批量删除\r\n          </Button>)}\r\n          { radioValue === 'upload'&&(<Button\r\n            type=\"primary\"\r\n            onClick={async () => {\r\n              await handleUpdateMany(selectedRows);\r\n              setSelectedRows([]);\r\n            }}\r\n          >\r\n            批量新增\r\n          </Button>)}\r\n        </FooterToolbar>\r\n      )}\r\n        \r\n\r\n      <CreateForm onSubmit={async (value) => {\r\n            // 发送请求到后端\r\n            const success = await handleUpdate(value);\r\n            if (success) {\r\n              //请求成功推出Modal页面\r\n              handleUpdateModalVisible(false);\r\n              //重置表单数据\r\n              setStepFormValues({});\r\n              //重新刷新子页面\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          onCancel={() => handleCreateModalVisible(false)} \r\n          modalVisible={createModalVisible}\r\n          handleCreateModalVisible={handleCreateModalVisible}\r\n          handleCreate={handleCreate}\r\n          className={\"createForm\"}>\r\n        {/* <ProTable\r\n          onSubmit={async (value) => {\r\n            const success = await handleCreate(value);\r\n            if (success) {\r\n              handleCreateModalVisible(false);\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          rowKey={[\"flight_id\",\"airline\"]}\r\n          type=\"form\"\r\n          columns={columns}\r\n          rowSelection={{}}\r\n        /> */}\r\n      </CreateForm>\r\n         \r\n      {stepFormValues && Object.keys(stepFormValues).length ? (\r\n        <UpdateForm\r\n        className=\"updateForm\"\r\n          onSubmit={async (value) => {\r\n            // 发送请求到后端\r\n            const success = await handleUpdate(value);\r\n            if (success) {\r\n              //请求成功推出Modal页面\r\n              handleUpdateModalVisible(false);\r\n              //重置表单数据\r\n              setStepFormValues({});\r\n              //重新刷新子页面\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          //取消update操作\r\n          onCancel={() => {\r\n              // 推出Modal\r\n            handleUpdateModalVisible(false);\r\n            //重置表单内容\r\n            setStepFormValues({});\r\n          }}\r\n          handleUpdateModalVisible={handleUpdateModalVisible}\r\n          updateModalVisible={updateModalVisible}\r\n          values={stepFormValues}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : null}\r\n\r\n      {stepFormValues && Object.keys(stepFormValues).length ? (\r\n        <DetailsTable className={\"DetailForm\"}\r\n          handleDetailModalVisible={handleDetailModalVisible}\r\n          detailModalVisible={detailModalVisible}\r\n          onCancel={() => {\r\n              // 推出Modal\r\n            handleDetailModalVisible(false);\r\n            //重置表单内容\r\n            setStepFormValues({});\r\n          }}\r\n          values={stepFormValues}\r\n        ></DetailsTable>):null}\r\n      \r\n    </div>\r\n        \r\n\r\n\r\n\r\n    );\r\n};\r\n","import {Card, Form, Input, Button,Table,InputNumber,Space} from 'antd';\r\nimport {Bar} from \"@ant-design/charts\";\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nexport default function ViewAgents(){\r\n\r\n    // sales 和 commission\r\n    const [activeTab,setActiveTab] = useState(\"sales\");\r\n    const [past,setPast] = useState(\"month\");\r\n    const [topK,setTopK] = useState(5);\r\n    const [data,setData]=useState([]);\r\n\r\n    const topSalesData =[\r\n        {\r\n            type:\"22@23.com\",\r\n            sales:34\r\n        },\r\n        {\r\n            type:\"22@25.com\",\r\n            sales:38\r\n        },\r\n        {\r\n            type:\"aa@23.com\",\r\n            sales:30\r\n        },\r\n        {\r\n            type:\"s2a@43.com\",\r\n            sales:12\r\n        },\r\n        {\r\n            type:\"12@23.com\",\r\n            sales:56\r\n        }\r\n    ]\r\n\r\n    useEffect(()=>{\r\n        setData(topSalesData);\r\n    },[])\r\n\r\n    const topCommissionData=[\r\n        {\r\n            type:\"22@23.com\",\r\n            commission:340\r\n        },\r\n        {\r\n            type:\"22@25.com\",\r\n            commission:380\r\n        },\r\n        {\r\n            type:\"aa@23.com\",\r\n            commission:100\r\n        },\r\n        {\r\n            type:\"s2a@43.com\",\r\n            commission:120\r\n        },\r\n        {\r\n            type:\"12@23.com\",\r\n            commission:560\r\n        }\r\n    ];\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Ranking'},\r\n        {key: 'commission', tab: 'Commission Ranking'},\r\n    ]\r\n\r\n    const handleSearchSales=()=>{\r\n        axios.get(\"http://localhost:8080/airlineStaff/getTopK\",{\r\n            params:{\r\n                type:\"sales\",\r\n                K:topK,\r\n                past:past\r\n            }\r\n        }).then(function(response){\r\n            if(response.data){\r\n                const dataMap = response.data.map((item)=>({type:item.email,sales:item.value}));\r\n                setData(dataMap);\r\n            }\r\n        }).catch(function(response){})\r\n    }\r\n\r\n    const handleSearchCommission=()=>{\r\n\r\n        axios.get(\"http://localhost:8080/airlineStaff/getTopK\",{\r\n            params:{\r\n                type:\"commission\",\r\n                K:topK,\r\n            }\r\n        }).then(function(response){\r\n            if(response.data){\r\n                const dataMap = response.data.map((item)=>({type:item.email,commission:item.value}));\r\n                setData(dataMap);\r\n            }\r\n        }).catch(function(response){})\r\n\r\n    }\r\n\r\n    const onTabChange = (key)=>{\r\n        setActiveTab(key);\r\n        setPast(\"month\");\r\n        if(key===\"sales\"){\r\n            // setData(topSalesData);\r\n            handleSearchSales();\r\n        }else{\r\n            // setData(topCommissionData);\r\n            handleSearchCommission();\r\n        }\r\n    }\r\n\r\n    const onNumberChange=(value)=>{\r\n        //更新图标\r\n        setTopK(value);\r\n    }\r\n\r\n\r\n    var config = {\r\n        data: data.slice(0,topK),\r\n        xField: activeTab===\"sales\"?'sales':\"commission\",\r\n        yField: 'type',\r\n        legend: { position: 'top-left' },\r\n        barBackground: { style: { fill: 'rgba(0,0,0,0.1)' } },\r\n        interactions: [\r\n          {\r\n            type: 'active-region',\r\n            enable: false,\r\n          },\r\n        ],\r\n      };\r\n     \r\n\r\n    return (\r\n    <Card tabList={tabList}\r\n        activeTab={activeTab}\r\n        onTabChange={onTabChange}\r\n        tabBarExtraContent={<>\r\n        {activeTab===\"sales\"&&(<Space ><Button type={\"primary\"} onClick={()=>{setPast(\"month\")}}>Past Month</Button>\r\n        <Button  type={\"primary\"} onClick={()=>{setPast(\"year\")}}>Past Year</Button></Space>)}\r\n        <Space><span style={{marginRight:5,marginLeft:10}}>Top</span><InputNumber addonBefore=\"+\" addonAfter=\"$\" min={1} onChange={onNumberChange} defaultValue={5}></InputNumber><span style={{marginLeft:5}}>Agents</span></Space>\r\n        </>}\r\n        hoverable={true}>\r\n\r\n\r\n        \r\n        <Bar \r\n        {...config}\r\n        sort \r\n        onReady={(plot)=>{\r\n                plot.chart.on(\"element:click\",(evt)=>{\r\n                });\r\n            }}\r\n        />;\r\n\r\n\r\n\r\n    </Card>)\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space} from 'antd';\r\nimport { Column } from '@ant-design/charts';\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nexport default function ViewReports(){\r\n    const [data,setData]=useState([]);\r\n    const [startDate,setStartDate]=useState(undefined);\r\n    const [endDate,setEndDate] = useState(undefined);\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{\r\n      setData(sampleData);\r\n    },[]);\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Report'},\r\n    ]\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '家具家电',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '粮油副食',\r\n          sales: 52,\r\n        },\r\n        {\r\n          type: '生鲜水果',\r\n          sales: 61,\r\n        },\r\n        {\r\n          type: '美容洗护',\r\n          sales: 145,\r\n        },\r\n        {\r\n          type: '母婴用品',\r\n          sales: 48,\r\n        },\r\n        {\r\n          type: '进口食品',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '食品饮料',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '家庭清洁',\r\n          sales: 38,\r\n        },\r\n      ];\r\n      var config = {\r\n        data: data,\r\n        xField: 'type',\r\n        yField: 'sales',\r\n        label: {\r\n          position: 'middle',\r\n          style: {\r\n            fill: '#FFFFFF',\r\n            opacity: 0.6,\r\n          },\r\n        },\r\n        xAxis: {\r\n          label: {\r\n            autoHide: true,\r\n            autoRotate: false,\r\n          },\r\n        },\r\n        meta: {\r\n          type: { alias: '类别' },\r\n          sales: { alias: '销售额' },\r\n        },\r\n      };\r\n\r\n\r\n      const renderLastYear = ()=>{\r\n\r\n      }\r\n\r\n      const renderLastMonth = ()=>{\r\n\r\n\r\n      }\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button>\r\n            <RangePicker picker=\"month\"></RangePicker></Space>\r\n        )\r\n      }\r\n\r\n\r\n\r\n      return (\r\n      <Card title=\"Here is the brief report\"\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}\r\n      >\r\n      <Column {...config} /></Card>);\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space} from 'antd';\r\nimport { Column } from '@ant-design/charts';\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nexport default function TopDestinations(){\r\n    const [data,setData]=useState();\r\n    const [startDate,setStartDate]=useState(undefined);\r\n    const [endDate,setEndDate] = useState(undefined);\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{},[]);\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Report'},\r\n    ]\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '家具家电',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '粮油副食',\r\n          sales: 52,\r\n        },\r\n        {\r\n          type: '生鲜水果',\r\n          sales: 61,\r\n        },\r\n        {\r\n          type: '美容洗护',\r\n          sales: 145,\r\n        },\r\n        {\r\n          type: '母婴用品',\r\n          sales: 48,\r\n        },\r\n        {\r\n          type: '进口食品',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '食品饮料',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '家庭清洁',\r\n          sales: 38,\r\n        },\r\n      ];\r\n      var config = {\r\n        data: sampleData,\r\n        xField: 'type',\r\n        yField: 'sales',\r\n        label: {\r\n          position: 'middle',\r\n          style: {\r\n            fill: '#FFFFFF',\r\n            opacity: 0.6,\r\n          },\r\n        },\r\n        xAxis: {\r\n          label: {\r\n            autoHide: true,\r\n            autoRotate: false,\r\n          },\r\n        },\r\n        meta: {\r\n          type: { alias: '类别' },\r\n          sales: { alias: '销售额' },\r\n        },\r\n      };\r\n\r\n\r\n      const renderLastYear = ()=>{\r\n\r\n      }\r\n\r\n      const renderLast3Month = ()=>{\r\n\r\n\r\n      }\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLast3Month} type={\"primary\"}>Last 3 Months</Button>\r\n            <RangePicker picker=\"day\"></RangePicker></Space>\r\n        )\r\n      }\r\n\r\n\r\n\r\n      return (\r\n      <Card title=\"Here is the brief report\"\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}\r\n      >\r\n      <Column {...config} /></Card>);\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space} from 'antd';\r\nimport { Pie } from '@ant-design/charts';\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nexport default function RevenueComparison(){\r\n\r\n    const [data,setData]=useState();\r\n    const [startDate,setStartDate]=useState(undefined);\r\n    const [endDate,setEndDate] = useState(undefined);\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{},[]);\r\n\r\n    const tabList = [\r\n        {key: 'revenue', tab: 'Revenue Comparison'},\r\n    ]\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '分类一',\r\n          value: 27,\r\n        },\r\n        {\r\n          type: '分类二',\r\n          value: 25,\r\n        },\r\n        {\r\n          type: '分类三',\r\n          value: 18,\r\n        },\r\n        {\r\n          type: '分类四',\r\n          value: 15,\r\n        },\r\n        {\r\n          type: '分类五',\r\n          value: 10,\r\n        },\r\n        {\r\n          type: '其他',\r\n          value: 5,\r\n        },\r\n      ];\r\n      var config = {\r\n        appendPadding: 10,\r\n        data: sampleData,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        radius: 0.75,\r\n        label: {\r\n          type: 'spider',\r\n          labelHeight: 28,\r\n          content: '{name}\\n{percentage}',\r\n        },\r\n        interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\r\n      };\r\n\r\n      const renderLastYear = ()=>{\r\n\r\n    }\r\n\r\n        const renderLastMonth = ()=>{\r\n\r\n\r\n    }\r\n\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button>\r\n            <RangePicker picker=\"day\"></RangePicker></Space>\r\n        )\r\n      }\r\n\r\n\r\n      return (\r\n      <Card title=\"Here is the brief report\"\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}>\r\n        <Pie {...config} />\r\n      </Card>);\r\n}","import {Card, Modal,Form, Input,Tooltip, Button,Table,DatePicker,InputNumber,Space} from 'antd';\r\nimport {Bar} from \"@ant-design/charts\";\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined,QuestionCircleOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nconst {RangePicker} = DatePicker;\r\n\r\nexport default function ViewFrequent(){\r\n     // sales 和 commission\r\n     const [activeTab,setActiveTab] = useState(\"sales\");\r\n     const [topK,setTopK] = useState(5);\r\n     const [data,setData]=useState([]);\r\n     const [modalVisiblibity,setModalVisibility] = useState(false);\r\n     const [modalEmail,setModalEmail] = useState(\"\");\r\n     const [tableData,setTableData] = useState([]);\r\n\r\n \r\n     const topSalesData =[\r\n         {\r\n             customer:\"22@23.com\",\r\n             tickets:2\r\n         },\r\n         {\r\n            customer:\"22@25.com\",\r\n            tickets:8\r\n         },\r\n         {\r\n            customer:\"aa@23.com\",\r\n            tickets:3\r\n         },\r\n         {\r\n            customer:\"s2a@43.com\",\r\n            tickets:12\r\n         },\r\n         {\r\n            customer:\"12@23.com\",\r\n            tickets:5\r\n         }\r\n     ]\r\n\r\n\r\n     const tableSampleData = [\r\n         {\r\n             key:\"1\",\r\n             flight_id:\"MA1234\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090\r\n         },\r\n         {\r\n             key:\"2\",\r\n             flight_id:\"MH3455\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090\r\n         },\r\n         {\r\n             key:\"3\",\r\n             flight_id:\"MK5888\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090\r\n         },{\r\n            key:\"4\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"5\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"6\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"7\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"8\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"9\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"10\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"11\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"12\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        }\r\n     ]\r\n\r\n\r\n     const tableColumns = [\r\n        {\r\n            title:\"Flight Number\",\r\n            dataIndex: \"flight_id\",\r\n            key:\"flight_id\"\r\n        },\r\n        {   \r\n            title:\"Airline\",\r\n            dataIndex:\"airline\",\r\n            key:\"airline\"\r\n        },\r\n        {\r\n            title: \"Dept. Time\",\r\n            dataIndex: \"dept_time\",\r\n            key: \"dept_time\"\r\n        },\r\n        {\r\n            title: \"Arri. Time\",\r\n            dataIndex: \"arri_time\",\r\n            key: \"arri_time\"\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            dataIndex: \"price\",\r\n            key: \"price\"\r\n        }\r\n     ]\r\n \r\n     useEffect(()=>{\r\n         setData(topSalesData);\r\n     },[])\r\n \r\n     const tabList = [\r\n         {key: 'customer', tab: 'Most Frequent Customers'},\r\n     ]\r\n \r\n \r\n     const onNumberChange=(value)=>{\r\n         //更新图标\r\n         setTopK(value);\r\n     }\r\n\r\n\r\n     const renderLastYear = ()=>{\r\n\r\n    }\r\n\r\n    const renderLastMonth = ()=>{\r\n\r\n\r\n    }\r\n\r\n    const renderTabExtra = ()=>{\r\n\r\n\r\n      return (\r\n          <Space direction=\"horizontal\" size={10}>\r\n          <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n          <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button>\r\n          <RangePicker picker=\"month\"></RangePicker>\r\n          <>\r\n          <span style={{marginRight:2}}>Top</span>\r\n            <InputNumber min={1} onChange={onNumberChange} defaultValue={5}></InputNumber>\r\n          <span style={{marginLeft:2}}>Agents</span>\r\n          </>\r\n          <Tooltip placement=\"topLeft\" title=\"Click the bar to check the flights taken\"><QuestionCircleOutlined/></Tooltip>\r\n          </Space>\r\n      )\r\n    }\r\n \r\n \r\n     var config = {\r\n         data: data.slice(0,topK),\r\n         xField: \"tickets\",\r\n         yField: 'customer',\r\n         legend: { position: 'top-left' },\r\n         barBackground: { style: { fill: 'rgba(0,0,0,0.1)' } },\r\n         interactions: [\r\n           {\r\n             type: 'active-region',\r\n             enable: false,\r\n           },\r\n         ],\r\n        };\r\n       \r\n\r\n\r\n    // 编写图例点击事件\r\n    const handleClick =(event)=>{\r\n        setTableData(tableSampleData);\r\n        setModalEmail(event.data.data.customer);\r\n        setModalVisibility(true);\r\n        \r\n        // console.log(event);\r\n        // console.log(modalVisiblibity);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        // 推出Modal\r\n        setModalVisibility(false);\r\n    }\r\n\r\n\r\n    return (<Card tabList={tabList}\r\n        tabBarExtraContent={renderTabExtra()}\r\n        hoverable={true}>\r\n        \r\n        <Bar \r\n        {...config}\r\n        sort \r\n        onReady={(plot)=>{\r\n            plot.chart.on(\"element:click\",handleClick\r\n                );\r\n            }}\r\n        />\r\n        <Modal\r\n        destroyOnClose\r\n        title={\"Flight details with \"+ modalEmail}\r\n        visible={modalVisiblibity}\r\n        onCancel={handleCancel}>\r\n            <Card >\r\n                <Table columns={tableColumns} dataSource={tableData} size={\"middle\"}>\r\n\r\n                </Table>\r\n            </Card>\r\n\r\n        </Modal>\r\n        \r\n    </Card>)\r\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,Select} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\nconst {Search} = Input;\r\n\r\nconst {Option} = Select;\r\n\r\nexport default function AddAgents() {\r\n\r\n    const [email,setEmail] = useState(undefined);\r\n    const [searchResult,setSearchResult] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSearch=()=>{\r\n        axios({\r\n            url:\"\",\r\n            method:\"POST\",\r\n            data:{}\r\n        }).then(function(response){\r\n            if(response.data){\r\n                setSearchResult(response.data);\r\n            }else{\r\n                console.log(\"请求无结果\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleChange = (value)=>{\r\n        setEmail(value);\r\n        console.log(\"changed\");\r\n    }\r\n\r\n\r\n    const onFinish =()=>{\r\n\r\n    }\r\n\r\n    const options = searchResult.map((item,index)=>(<Option key={index}>{item}</Option>));\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 8,\r\n          },\r\n        },\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n          },\r\n        },\r\n      };\r\n\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n\r\n    return (\r\n        <Card title=\"Add Booking Agents\">\r\n            <Form\r\n            {...formItemLayout}\r\n                form={form}\r\n                name=\"Add Agents\"\r\n                onFinish={onFinish}\r\n                 scrollToFirstError>\r\n                <Form.Item name=\"email\" label=\"Agent Email\">\r\n                    <Select\r\n                        showSearch\r\n                        style={{width: 300, padding: 10}}\r\n                        placeholder={\"Email\"}\r\n                        value={email}\r\n                        defaultActiveFirstOption={false}\r\n                        showArrow={false}\r\n                        filterOption={false}\r\n                        onSearch={handleSearch}\r\n                        onChange={handleChange}\r\n                        notFoundContent={null}\r\n                        allowClear\r\n                    >\r\n                        {options}\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item {...tailFormItemLayout}> \r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Add\r\n                </Button>\r\n            </Form.Item>\r\n            </Form>\r\n\r\n        </Card>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,Select} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\nconst {Search} = Input;\r\n\r\nconst {Option} = Select;\r\n\r\nexport default function GrantPermission(){\r\n\r\n    const [searchResult,setSearchResult] = useState([]);\r\n    const [email,setEmail] = useState();\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const options = [\"Admin\",\"Operator\"];\r\n    \r\n    const optionsMapped = options.map((item,index)=><Option key={index}>{item}</Option>)\r\n\r\n\r\n    const onFinish=(values)=>{\r\n        //提交请求\r\n        console.log(\"papa\");\r\n\r\n    }\r\n\r\n    const onFinishFailed = ()=>{\r\n        console.log(\"\");\r\n    }\r\n\r\n\r\n\r\n    const handleSearch = ()=>{\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleChange = ()=>{\r\n\r\n    }\r\n\r\n\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 8,\r\n          },\r\n        },\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n          },\r\n        },\r\n      };\r\n\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n\r\n\r\n    return (<Card title=\"Grant Permission\">\r\n        <Form \r\n        {...formItemLayout}\r\n                form={form}\r\n                name=\"Add Agents\"\r\n                onFinish={onFinish}\r\n                 scrollToFirstError>\r\n        <Form.Item name=\"email\" label=\"Agent Email\">\r\n            <Select showSearch\r\n                style={{width: 300, padding: 10}}\r\n                placeholder={\"Email\"}\r\n                value={email}\r\n                defaultActiveFirstOption={false}\r\n                showArrow={false}\r\n                filterOption={false}\r\n                onSearch={handleSearch}\r\n                onChange={handleChange}\r\n                notFoundContent={null}\r\n                allowClear>\r\n            </Select>\r\n\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"permission\" label=\"Permission Type\">\r\n        <Select\r\n            showSearch\r\n                style={{width: 300, padding: 10}}\r\n                placeholder={\"Permission Type\"}\r\n                defaultActiveFirstOption={false}\r\n                showArrow={false}\r\n                filterOption={false}\r\n                allowClear>\r\n                {optionsMapped}\r\n            </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}> \r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Grant Permission\r\n                </Button>\r\n            </Form.Item>\r\n\r\n\r\n        </Form>\r\n\r\n\r\n\r\n\r\n    </Card>)\r\n}","import React, {useEffect, useState,useRef} from \"react\"\nimport {Layout, Menu, Breadcrumb,Dropdown,Avatar,Button,Space,Modal} from \"antd\";\nimport {CarryOutOutlined, SendOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {useNavigate} from \"react-router-dom\";\nimport CustomerSidebar from \"../component/customer/CustomerSidebar\";\nimport ViewFlights from \"../component/flight/ViewFlights\";\nimport SearchFlights from \"../component/flight/SearchFlights\";\nimport PurchaseTicket from \"../component/customer/PurchaseTicket\";\nimport SpendingChart from \"../component/customer/SpendingChart\";\nimport AgentSidebar from \"../component/agent/AgentSidebar\";\nimport TopCustomerChart from \"../component/agent/TopCustomerChart\";\nimport CustomerOrders from \"../component/agent/CustomerOrders\";\nimport CommissionStatistics from \"../component/agent/CommissionStatistics\";\nimport StaffSidebar from \"../component/staff/StaffSidebar\";\nimport EditAirport from \"../component/staff/EditAirport\";\nimport EditAirplane from \"../component/staff/EditAirplane\";\nimport GlobalSidebar from \"../component/global/GlobalSidebar\";\nimport FlightCRUD from \"../component/staff/FlightCRUD\";\nimport ViewAgents from \"../component/staff/ViewAgents\"\nimport ViewReports from \"../component/staff/ViewReports\";\nimport TopDestinations from \"../component/staff/TopDestinations\";\nimport RevenueComparison from \"../component/staff/RevenueComparsion\";\nimport ViewFrequent from \"../component/staff/ViewFrequent\";\nimport AddAgents from \"../component/staff/AddAgents\";\nimport GrantPermission from \"../component/staff/GrantPermission\";\nimport axios from \"axios\";\nimport LoginCard from \"../component/login/LoginCard\";\nimport RegisterCard from \"../component/login/RegisterCard\";\n\nconst {Header, Content, Sider, Footer} = Layout;\nconst {SubMenu} = Menu;\n\nexport default function UserPage({initializingTab,loginInfo}) {\n    let navigate = useNavigate();\n\n    const [navigateBar, setNavigateBar] = useState(\"customer\");\n    const [sidebar, setSidebar] = useState(\"\");\n    const [collapsed,setCollapsed] =useState(false);\n    const [flightsResult, setFlightResult] = useState(null);\n    const [actionType,setActionType] = useState(\"\");\n    const [loginModalVisible,setLoginModalVisible] = useState(false);\n    const [registerModalVisible,setRegisterModalVisible] = useState(false);\n    const [initializeType,setInitializeType] = useState(\"customer\");\n    const defaultData = useRef(null);\n\n    useEffect(()=>{\n        console.log(\"xixi\");\n        axios({\n            url:\"http://localhost:8080/index/findAllFlights\",\n            method:\"GET\",\n        }).then(function(response){\n            if(response.data){\n                console.log(\"haha\");\n                defaultData.current = response.data;\n            }else{\n                console.log(\"No Results\");\n            }\n        }).catch(function(response){\n            console.log(\"haha\");\n        })\n    },[])\n  \n\n    const handleNavigateBar = (page) => {\n        setNavigateBar(page.key);\n        navigate(\"/\" + page.key, {replace: true});\n    }\n\n    const sidebarList = {\n        customer: <CustomerSidebar updateSelection={setSidebar} setActionType={setActionType} defaultData={defaultData} setFlightResult={setFlightResult} />,\n        agent: <AgentSidebar updateSelection={setSidebar} setActionType={setActionType} defaultData={defaultData} setFlightResult={setFlightResult}/>,\n        staff: <StaffSidebar updateSelection={setSidebar} setActionType={setActionType}  setFlightResult={setFlightResult}/>,\n        global: <GlobalSidebar updateSelection={setSidebar} setActionType={setActionType}  setFlightResult={setFlightResult}/>,\n    }\n\n\n    const userContent = {\n        \"Flight CRUD\":<FlightCRUD/>,\n        \"My flights\": <SearchFlights userType={initializingTab} actionTab={\"view\"} \n                                    flightsResult={flightsResult} \n                                    setFlightResult={setFlightResult} \n                                    actionType={actionType}/>,\n        \"Search flights\": <SearchFlights userType={initializingTab} \n                                        loginInfo={loginInfo} \n                                        actionTab={\"search\"} \n                                        flightsResult={flightsResult} \n                                        setFlightResult={setFlightResult} \n                                        actionType={actionType}/>,\n        \"Purchase tickets\": <SearchFlights userType={initializingTab} \n                                           loginInfo={loginInfo} \n                                           actionTab={\"purchase\"} \n                                           flightsResult={flightsResult} \n                                           setFlightResult={setFlightResult} \n                                           actionType={actionType}/>,\n        \"Track spending\": <SpendingChart />,\n        \"Top customers\": <TopCustomerChart />,\n        \"Create order\": <SearchFlights userType={initializingTab}\n                                       loginInfo={loginInfo}  \n                                       actionTab={\"purchase\"} \n                                       flightsResult={flightsResult}\n                                       setFlightResult={setFlightResult}\n                                       actionType={actionType}/>,\n        \"My customer orders\": <SearchFlights userType={initializingTab} \n                                            loginInfo={loginInfo} \n                                            actionTab={\"search\"} \n                                            flightsResult={flightsResult} \n                                            setFlightResult={setFlightResult} \n                                            actionType={actionType}/>,\n        \"Commission statistics\": <CommissionStatistics />,\n        \"Add airport\": <EditAirport />,\n        \"Add airplane\": <EditAirplane/>,\n        \"Add booking agent\":<AddAgents/>,\n        \"View Agents\":<ViewAgents />,\n        \"View Reports\":<ViewReports/>,\n        \"Top destinations\":<TopDestinations/>,\n        \"Revenue Comparison\":<RevenueComparison/>,\n        \"Frequent customers\":<ViewFrequent/>,\n        \"Grant permission\":<GrantPermission/>\n    }\n\n    useEffect(() => {\n        setNavigateBar(initializingTab)\n    }, [])\n\n\n    const menu = (<Menu>\n        <Menu.Item icon={<SettingOutlined />}>\n          <a onClick={()=>{setLoginModalVisible(true);}}>Log In</a>\n        </Menu.Item>\n      </Menu>);\n\n    const onCancelLogin = ()=>{\n        setLoginModalVisible(false);\n    }\n\n    const onCancelRegister =()=>{\n        setRegisterModalVisible(false);\n    }\n    return (\n\n        <Layout>\n            {<Modal \n                destroyOnClose\n                title=\"Login\"\n                visible={loginModalVisible}\n                onCancel={() => {onCancelLogin()}}\n                footer={[]}\n                >\n                <LoginCard setInitializeType={setInitializeType}  setLoginModalVisible={setLoginModalVisible} setRegisterModalVisible={setRegisterModalVisible}/>\n            </Modal>}\n            {<Modal \n                destroyOnClose\n                title=\"Login\"\n                visible={registerModalVisible}\n                onCancel={() => {onCancelRegister()}}\n                footer={[]}\n                >\n                <RegisterCard initializeType={initializeType} setRegisterModalVisible={setRegisterModalVisible} />\n            </Modal>}\n            <Header className={\"header\"} style={{position: 'fixed', zIndex: 2, width: '100%'}}>\n                \n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={[initializingTab]}\n                    selectedKeys={[navigateBar]}\n                    onClick={handleNavigateBar}\n                    style={{marginLeft:\"100px\"}}\n                >\n                    <Menu.Item key=\"customer\">Customer</Menu.Item>\n                    <Menu.Item key=\"agent\">Agent</Menu.Item>\n                    <Menu.Item key=\"staff\">Staff</Menu.Item>\n                    <Menu.Item key=\"global\">Global</Menu.Item>\n                    \n                </Menu>\n                \n            </Header>\n            <Dropdown overlay={menu}>\n                    <Avatar style={{marginLeft:\"1200px\",zIndex:3,position: 'fixed',top:\"10px\"}} size=\"large\" icon={<UserOutlined />}/>\n                </Dropdown>\n            <Layout style={{minHeight: '100vh', marginTop: 64}}>\n                <Sider width={250} height={100} className=\"site-layout-background\" collapsible collapsed={collapsed} onCollapse={setCollapsed}>\n                    {sidebarList[navigateBar]}\n                </Sider>\n                <Layout style={{padding: '0 24px 24px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>{navigateBar.charAt(0).toUpperCase() + navigateBar.slice(1)}</Breadcrumb.Item>\n                        <Breadcrumb.Item>{sidebar}</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{padding: 24, margin: 0}}\n                    >\n                        {userContent[sidebar]}\n                    </Content>\n                </Layout>\n            </Layout>\n            <Layout style={{textAlign: 'center', marginBottom: 0}}>\n                <Footer>\n                    2021 Global Airline All rights reserved.\n                </Footer>\n            </Layout>\n\n        </Layout>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomePage from \"./homepage\";\nimport LoginPage from \"./page/LoginPage\";\nimport RegisterPage from \"./page/RegisterPage\";\nimport reportWebVitals from './reportWebVitals';\nimport \"antd/dist/antd.css\"\nimport {\n    BrowserRouter as Router,\n    Route,\n} from \"react-router-dom\";\nimport {Routes} from \"react-router-dom\";\nimport UserPage from \"./page/UserPage\";\n\n//Configure the Routers for Conditional Rendering\nfunction App() {\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<HomePage />} />\n                {/* <Route path=\"/login\" element={<LoginPage />} /> */}\n                {/* <Route path=\"/registercustomer\" element={<RegisterPage initializeType='customer' />} />\n                <Route path=\"/registerstaff\" element={<RegisterPage initializeType='airlineStaff'/>}/>\n                <Route path=\"/registeragent\" element={<RegisterPage initializeType='bookingAgent'/>}/> */}\n                <Route path=\"/customer\" element={<UserPage initializingTab='customer' loginInfo={\"\"}/>} />\n                <Route path=\"/agent\" element={<UserPage initializingTab='agent'/> } loginInfo={\"\"} />\n                <Route path=\"/staff\" element={<UserPage initializingTab='staff'/> } loginInfo={\"\"}/>\n                <Route path=\"/global\" element={<UserPage initializingTab='global'/> } loginInfo={\"\"}/>\n            </Routes>\n        </Router>\n    )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}