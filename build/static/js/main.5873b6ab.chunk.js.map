{"version":3,"sources":["homepage.js","component/login/LoginCard.js","page/LoginPage.js","lib/dateFormat.js","component/login/RegisterCard.js","page/RegisterPage.js","reportWebVitals.js","component/customer/CustomerSidebar.js","lib/statusTag.js","lib/flightData.js","component/flight/PurchaseModals/CustomerModal.js","component/flight/PurchaseModals/AgentModal.js","component/flight/SearchFlights.js","component/customer/PurchaseTicket.js","component/customer/SpendingChart.js","component/agent/AgentSidebar.js","component/agent/TopCustomerChart.js","component/agent/CommissionStatistics.js","component/staff/StaffSidebar.js","component/staff/EditAirport.js","component/staff/EditAirplane.js","component/global/GlobalSidebar.js","component/staff/CRUDElements/CreateForm.js","component/staff/CRUDElements/UpdateForm.js","component/staff/CRUDElements/DetailsForm.js","component/staff/FlightCRUD.js","component/staff/ViewAgents.js","component/staff/ViewReports.js","component/staff/TopDestinations.js","component/staff/RevenueComparsion.js","component/staff/ViewFrequent.js","component/staff/AddAgents.js","component/staff/GrantPermission.js","page/UserPage.js","index.js"],"names":["Title","Typography","HomePage","style","textAlign","width","position","top","type","shape","size","to","ArrowRightOutlined","LoginCard","navigate","useNavigate","Form","useForm","form","useState","activeTab","setActiveTab","usernameMessage","customer","agent","staff","display","marginLeft","marginRight","tabList","key","tab","tabBarExtraContent","href","onTabChange","resetFields","name","className","onFinish","values","axios","url","method","data","userType","then","response","response_msg","replace","setFields","errors","console","log","onFinishedFailed","alert","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","htmlType","onClick","LoginPage","dateFormat","RegisterCard","initializeType","Option","Select","airlineList","setAirlineList","prefixSelector","noStyle","value","autoCompleteResult","map","website","label","title","labelCol","xs","span","sm","wrapperCol","initialValues","residence","scrollToFirstError","validator","inititalizeType","callback","params","valid","catch","error","validateTrigger","hasFeedback","rule","min","max","pattern","getFieldValue","_","Promise","reject","Error","resolve","Password","dependencies","tooltip","whitespace","format","addonBefore","onFocus","item","TextArea","showCount","maxLength","offset","RegisterPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SubMenu","Menu","CustomerSidebar","updateSelection","setActionType","setFlightResult","tagList","actionTypeMapping","useEffect","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","icon","CarryOutOutlined","SettingOutlined","statusColor","ticketColumns","dataIndex","render","tags","status","color","toUpperCase","globalInterfaceColumns","CustomerModal","props","customerModalVis","setCustomerModalVis","rowRecord","AgentModal","agentModalVis","setAgentModalVis","ticketIds","setTicketIds","FormItem","options","ticket_id","searchTicketId","sendObject","qs","stringify","airlineName","airline","flightNum","flight_id","headers","bodyStyle","padding","destroyOnClose","visible","footer","onCancel","disabled","showSearch","onSearch","allowClear","Input","Search","FlightsResultTable","actionType","setRowRecord","DatePicker","RangePicker","columns","text","record","full","dataMap","dept","sourceAirportName","arri","destAirportName","dept_time","departureTime","arri_time","arrivalTime","price","ticketId","flightNumber","departAirportName","arrivalAirportName","filter","dataSource","SearchFlights","actionTab","flightsResult","undefined","deptAirport","setDeptAirport","arriAirport","setArriAirport","deptDate","setDeptDate","searchResult","setSearchResult","flightID","searchAirport","handleSearch","setTimeout","handleChange","callBack","Group","defaultActiveFirstOption","showArrow","filterOption","onChange","notFoundContent","SwapOutlined","tmp","paddingLeft","sourceAirport","destAirport","email","startDate","Date","header","SpendingChart","chartConfig","appendPadding","angleField","colorField","radius","meta","alias","formatter","v","toString","AgentSidebar","TopCustomerChart","setData","topK","setTopK","testTicket","uid","sum","testCommission","defaultValue","xField","yField","seriesField","columnWidthRatio","fill","opacity","xAxis","autoHide","autoRotate","slice","CommissionStatistics","commissionData","setCommissionData","loadingHolder","Boolean","direction","moment","subtract","loading","precision","StaffSidebar","SendOutlined","FundViewOutlined","EditAirport","success","content","marginTop","onFinishFailed","id","airplaneId","seats","GlobalSidebar","formLayout","CreateForm","modalVisible","handleCreateModalVisible","onSubmit","handleCreate","formVals","setFormVals","disabledDate","current","endOf","optionsData","handleNext","a","validateFields","fieldsValue","showTime","UpdateForm","updateModalVisible","handleUpdateModalVisible","handleUpdate","DetailsTable","detailModalVisible","handleDetailModalVisible","building_num","street","city","state","phone","passportNumber","passportExpiration","passportCountry","birthday","FlightCRUD","createModalVisible","selectedRows","setSelectedRows","stepFormValues","setStepFormValues","radioValue","actionRef","useRef","fetchFlightData","query","flight_info","confirm","e","cancel","textWrap","ellipsis","fixed","valueType","hideInSearch","EditOutlined","fontSize","onConfirm","okText","cancelText","danger","DeleteOutlined","getData","pageIndex","records","total","request","rowKey","index","scroll","x","rowSelection","onchange","toolBarRender","PlusOutlined","length","FooterToolbar","extra","fontWeight","reloadAndRest","reload","Object","keys","ViewAgents","topSalesData","sales","topCommissionData","commission","config","legend","barBackground","interactions","enable","addonAfter","hoverable","sort","onReady","plot","chart","on","evt","ViewReports","sampleData","renderLastYear","renderLastMonth","picker","TopDestinations","renderLast3Month","RevenueComparison","labelHeight","ViewFrequent","modalVisiblibity","setModalVisibility","modalEmail","setModalEmail","tableData","setTableData","tickets","tableSampleData","onNumberChange","handleClick","event","placement","QuestionCircleOutlined","AddAgents","setEmail","GrantPermission","optionsMapped","Header","Layout","Content","Sider","Footer","UserPage","initializingTab","loginInfo","navigateBar","setNavigateBar","sidebar","setSidebar","collapsed","setCollapsed","sidebarList","global","userContent","zIndex","theme","selectedKeys","page","maginLeft","minHeight","collapsible","onCollapse","margin","charAt","marginBottom","App","path","element","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5873b6ab.chunk.js","sourcesContent":["import {Button, Typography} from \"antd\";\nimport {ArrowRightOutlined} from \"@ant-design/icons\";\nimport {Link} from \"react-router-dom\"\nimport RcQueueAnim from \"rc-queue-anim\";\n\nconst {Title} = Typography;\n\nexport default function HomePage() {\n    // Add Link to \"/login\"\n    return (\n        <div style={{textAlign: 'center', width: '100%', position: 'absolute', top: '40vh'}}>\n            <RcQueueAnim type=\"left\" >\n                <Title key=\"ele1\" style={{}}>Welcome to Our Airline System</Title>\n                <Button key=\"ele2\" type=\"primary\" shape=\"circle\" size=\"large\">\n                    <Link to=\"/login\">\n                        <ArrowRightOutlined />\n                    </Link>\n                </Button>\n            </RcQueueAnim>\n        </div>\n    )\n}\n\n","import {Card, Form, Input, Button} from 'antd';\nimport React, {useState} from \"react\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function LoginCard() {\n    let navigate = useNavigate();\n\n    const [form] = Form.useForm();\n\n    const [activeTab, setActiveTab] = useState('customer');\n\n    const onTabChange = (key) => {\n        setActiveTab(key);\n        form.resetFields();\n    }\n\n\n    //字段验证成功，准备做登录校验\n    const onFinish = (values) => {\n        // loginRequest(values.username, md5(values.password), activeTab)\n        \n        axios({\n            url:\"http://localhost:8080/login\",\n            method:\"post\",\n            data:{userType:activeTab,...values}\n        }).then(function(response){\n            const response_msg = response.data;\n            if(response_msg===\"success\"){\n                //登录成功\n                navigate(\"/\"+activeTab,{replace:true});\n            }else{\n                //诊断失败原因\n                if(response_msg===\"User Not Found!\"){\n                    form.setFields([\n                        {\n                            name:activeTab===\"customer\"?\"email\":\"username\",\n                            errors:[ \"User Not Found! Please Register First!\"]\n                        }\n                    ])\n                }else if(response_msg===\"Password Error!\"){\n                    form.setFields([\n                        {\n                            name:\"password\",\n                            errors:[response.data]\n                        }\n                    ])\n                }else if(response_msg===\"BookingId Error!\"){\n                    form.setFields([\n                        {\n                            name:\"bookingAgentId\",\n                            errors:[response.data]\n                        }\n                    ])\n                }\n            }\n            \n        })\n        console.log(values);\n        // eslint-disable-next-line no-restricted-globals\n        // navigate(\"/\" + activeTab, {replace: true})\n    }\n\n    //说的是字段的值验证失败\n    const onFinishFailed=()=>{\n        alert(\"字段有误\");\n        console.log(\"haha\");\n    }\n\n\n\n    const tabList = [\n        {key: 'customer', tab: 'Customer'},\n        {key: 'agent', tab: 'Booking Agent'},\n        {key: 'staff', tab: 'Airline Staff'}\n    ]\n\n    const usernameMessage = {\n        customer: \"E-mail\",\n        agent: \"E-mail\",\n        staff: \"Username\"\n    }\n\n    return (\n        <Card\n            style={{width: '30%', display: 'block', marginLeft: 'auto', marginRight: 'auto'}}\n            tabList={tabList}\n            activeTab={activeTab}\n            tabBarExtraContent={<a href=\"/\">Back</a>}\n            onTabChange={onTabChange}\n        >\n            <Form\n                form={form}\n                name=\"login\"\n                className=\"login-form\"\n                onFinish={onFinish}\n                onFinishedFailed={onFinishFailed}\n            >\n\n            {\n                activeTab===\"staff\"&&(<Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your \" + usernameMessage[activeTab]\n                         },\n                         ]}\n                         >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={usernameMessage[activeTab]} />\n                </Form.Item>)}\n\n                {\n                activeTab!=\"staff\"&&(<Form.Item\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your email\"\n                         },\n                         { \n                             type:\"email\",\n                             message:\"This is not a valid email type\"\n                         }\n                         ]}\n                         >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={\"E-mail\"} />\n                </Form.Item>)}\n            \n                \n                <Form.Item\n                    name=\"password\"\n                    rules={[{required: true, message: \"Please input your password\"}]}>\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\" />\n                </Form.Item>\n                {activeTab===\"agent\"&&(\n                <Form.Item\n                    name=\"bookingAgentId\"\n                    rules={[{required: true, message: \"Please input your booking agent Id\"}]}>\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                           placeholder={\"Agent Id\"} />\n                </Form.Item>)}\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Log in</Button>\n                    <Button type=\"primary\" className=\"register-form-button\" style={{marginLeft:\"130px\"}} onClick={()=>{navigate(\"/register\"+activeTab)}}>Register</Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    )\n}","import React, {useState} from \"react\";\nimport LoginCard from \"../component/login/LoginCard\";\n\nexport default function LoginPage() {\n    return (\n        <div style={{width: '100vw', position: 'absolute', top: '30vh'}}>\n            <LoginCard />\n        </div>\n    )\n}","export const dateFormat = \"DD/MM/YYYY\";","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {dateFormat} from \"../../lib/dateFormat\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport qs from \"qs\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Cascader,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Select,\r\n  Button,\r\n  AutoComplete,\r\n  DatePicker,\r\n  message\r\n} from 'antd';\r\n\r\nexport default function RegisterCard({initializeType}){\r\n\r\n    const { Option } = Select;\r\n    const navigate = useNavigate();\r\n    const residences = [\r\n      {\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        children: [\r\n          {\r\n            value: 'hangzhou',\r\n            label: 'Hangzhou',\r\n            children: [\r\n              {\r\n                value: 'xihu',\r\n                label: 'West Lake',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        children: [\r\n          {\r\n            value: 'nanjing',\r\n            label: 'Nanjing',\r\n            children: [\r\n              {\r\n                value: 'zhonghuamen',\r\n                label: 'Zhong Hua Men',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {\r\n          span: 24,\r\n        },\r\n        sm: {\r\n          span: 8,\r\n        },\r\n      },\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n        },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    \r\n      const [form] = Form.useForm();\r\n\r\n      const [airlineList,setAirlineList] = useState([]);\r\n    \r\n      const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n        axios({\r\n          method:'POST',\r\n          url:initializeType===\"customer\"?'http://localhost:8080/register/registerCustomer'\r\n          :initializeType===\"airlineStaff\"?'http://localhost:8080/register/registerAirlineStaff':\r\n          'http://localhost:8080/register/registerBookingAgent',\r\n          data:values\r\n        }).then(function(response){\r\n            if(response.data===\"success\"){\r\n              navigate(\"/login\");\r\n            }\r\n        })\r\n      };\r\n    \r\n      const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"86\">+86</Option>\r\n            <Option value=\"87\">+87</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n      const suffixSelector = (\r\n        <Form.Item name=\"suffix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"USD\">$</Option>\r\n            <Option value=\"CNY\">¥</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n      const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n    \r\n      const onWebsiteChange = (value) => {\r\n        if (!value) {\r\n          setAutoCompleteResult([]);\r\n        } else {\r\n          setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n        }\r\n      };\r\n    \r\n      const websiteOptions = autoCompleteResult.map((website) => ({\r\n        label: website,\r\n        value: website,\r\n      }));\r\n\r\n      const checkUserName = (rule,value,callback)=>{\r\n            axios({\r\n                method:'GET',\r\n                url:'http://localhost:8080/register/validateAirlineStaff',\r\n                params:{\"username\":value}\r\n            }).then(function(response){\r\n                console.log(response);\r\n                if(response.data.valid===false){\r\n                    callback(\"Staff already registered!\");\r\n                    console.log(\"草\");\r\n                }else{\r\n                    callback();\r\n                    console.log(\"haha\");\r\n                }\r\n            }).catch(function(error){\r\n                console.log(\"error\")\r\n            })\r\n      }\r\n\r\n      const checkEmail = (inititalizeType,value,callback)=>{\r\n        axios({\r\n            method:'GET',\r\n            url:(initializeType===\"bookingAgent\")?'http://localhost:8080/register/validateBookingAgent':\r\n            \"http://localhost:8080/register/validateCustomer\",\r\n            params:{\"email\":value}\r\n        }).then(function(response){\r\n            console.log(response);\r\n            if(response.data.valid===false){\r\n                if(initializeType===\"bookingAgent\"){\r\n                callback(\"Agent already registered!\");}\r\n                else{\r\n                    callback(\"Customer already registered!\")\r\n                }\r\n                console.log(\"草\");\r\n            }else{\r\n                callback();\r\n                console.log(\"haha\");\r\n            }\r\n        }).catch(function(error){\r\n            console.log(\"error\")\r\n        })\r\n      }\r\n\r\n      const getAirlineList = ()=>{\r\n        axios({\r\n          method:'GET',\r\n          url:\"http://localhost:8080/register/getAirlineList\"\r\n      }).then(function(response){\r\n        console.log(response.data);\r\n          setAirlineList(response.data);\r\n          console.log(\"data injection completed\")\r\n      }).catch(function(error){\r\n          console.log(\"error\")\r\n      })\r\n      }\r\n\r\n\r\n      return (\r\n          <Card  title=\"Please input your personal information to register\">\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name=\"register\"\r\n          onFinish={onFinish}\r\n          initialValues={{\r\n            residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n            prefix: '86',\r\n          }}\r\n          scrollToFirstError\r\n        > {initializeType!==\"airlineStaff\"&&(\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n              {\r\n                  validator:checkEmail\r\n              },\r\n              \r\n            ]}\r\n            validateTrigger='onBlur'\r\n            hasFeedback\r\n          >\r\n            <Input style={{width:'80%'}}/>\r\n          </Form.Item>)\r\n        }\r\n\r\n        { initializeType===\"airlineStaff\"&&(\r\n          <Form.Item\r\n          name= \"username\"\r\n          label= \"Username\"\r\n          validateTrigger='onBlur'\r\n          hasFeedback\r\n          rules={\r\n              [{\r\n                  required :true,\r\n                  message: 'Please input your username',\r\n              },\r\n              {\r\n                  validator:checkUserName\r\n              }\r\n              ]\r\n          }>\r\n            <Input style={{width:'80%'}}></Input>\r\n          </Form.Item>\r\n         ) }\r\n\r\n         { initializeType===\"customer\"&&(\r\n          <Form.Item\r\n          name= \"name\"\r\n          label= \"Name\"\r\n          rules={\r\n              [{\r\n                  required :true,\r\n                  message: 'Please input your name',\r\n              },\r\n              ]\r\n          }\r\n          hasFeedback>\r\n            <Input style={{width:'80%'}}></Input>\r\n          </Form.Item>\r\n         ) }\r\n    \r\n          <Form.Item\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!'\r\n                },\r\n                {\r\n                  min:6,\r\n                  message: \"The length of the password cannot be less than 6 characters!\"\r\n                },\r\n                {\r\n                max:20,\r\n                message: \"The length of the password cannot be more than 20 characters!\"},\r\n                {\r\n                pattern:/^[a-zA-Z]\\w+/,\r\n                message:'The password must start with alphabat'\r\n                },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('email') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('Email cannot be the same as the password!'));\r\n                },\r\n              }),\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password style={{width:'80%'}}/>\r\n          </Form.Item>\r\n    \r\n          <Form.Item\r\n            name=\"confirm\"\r\n            label=\"Confirm Password\"\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>\r\n    \r\n\r\n          {initializeType===\"airlineStaff\"&&(\r\n          <Form.Item\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            tooltip=\"What do you want others to call you?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:\"Please input your last name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input  style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>)\r\n          }\r\n\r\n          {initializeType===\"airlineStaff\"&&(\r\n          <Form.Item\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            tooltip=\"What do you want others to call you?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:\"Please input your last name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>)}\r\n  \r\n          {initializeType!==\"bookingAgent\"&&(\r\n          <Form.Item\r\n          name=\"birthday\"\r\n          label=\"Birth Day\"\r\n          tooltip=\"Click the calendar button to select a date\"\r\n          rules={[\r\n                {required: true,\r\n                message:\"Please input your birth day!\",\r\n               }\r\n          ]}>  \r\n          <DatePicker format={dateFormat} style={{width:200}} />\r\n            </Form.Item>)}\r\n\r\n            {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"phoneNumber\"\r\n            label=\"Phone Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your phone number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              addonBefore={prefixSelector}\r\n              style={{\r\n                width: '80%',\r\n              }}\r\n            />\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"airlineStaff\"&&(\r\n          <Form.Item\r\n            name=\"airlineName\"\r\n            label=\"Airline Name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input donation amount!',\r\n              },\r\n            ]}\r\n          >\r\n          <Select onFocus={getAirlineList} placeholder=\"Please select a country\" style={{width:\"80%\"}}>\r\n            {airlineList.map((item)=>\r\n               (<Option value={item} key={item}>{item}</Option>)\r\n            )}\r\n          </Select>\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"buildingNumber\"\r\n            label=\"Building Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your building number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"street\"\r\n            label=\"Street Info\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your street info!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"city\"\r\n            label=\"City\"\r\n            tooltip=\"Could register with abbreviation\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your city!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"livingState\"\r\n            label=\"State\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your state info!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportNumber\"\r\n            label=\"Passport Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportExpiration\"\r\n            label=\"Passport Expiration Date\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport expiration date!',\r\n              },\r\n            ]}\r\n          >\r\n             <DatePicker format={dateFormat} style={{width:200}} />\r\n          </Form.Item>)}\r\n    \r\n          {initializeType===\"customer\"&&(\r\n          <Form.Item\r\n            name=\"passportCountry\"\r\n            label=\"Passport Country\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your passport country!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n          {initializeType===\"bookingAgent\"&&(\r\n          <Form.Item\r\n            name=\"bookingAgentId\"\r\n            label=\"Agent Id\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your agent ID!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input style={{width:\"80%\"}}></Input>\r\n          </Form.Item>)}\r\n\r\n\r\n\r\n          <Form.Item\r\n            name=\"intro\"\r\n            label=\"Intro\"\r\n          >\r\n            <Input.TextArea showCount maxLength={100}  style={{\"width\":\"80%\"}}/>\r\n          </Form.Item>\r\n    \r\n          {/* <Form.Item\r\n            name=\"gender\"\r\n            label=\"Gender\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please select gender!',\r\n              },\r\n            ]}\r\n          >\r\n            <Select placeholder=\"select your gender\">\r\n              <Option value=\"male\">Male</Option>\r\n              <Option value=\"female\">Female</Option>\r\n              <Option value=\"other\">Other</Option>\r\n            </Select>\r\n          </Form.Item> */}\r\n    \r\n          {/* <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n            <Row gutter={8}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"captcha\"\r\n                  noStyle\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input the captcha you got!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Button>Get captcha</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item> */}\r\n    \r\n          {/* <Form.Item\r\n            name=\"agreement\"\r\n            valuePropName=\"checked\"\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n              },\r\n            ]}\r\n            {...tailFormItemLayout}\r\n          >\r\n            <Checkbox>\r\n              I have read the <a href=\"\">agreement</a>\r\n            </Checkbox>\r\n          </Form.Item>*/}\r\n          <Form.Item {...tailFormItemLayout}> \r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register\r\n            </Button>\r\n            <Button type=\"primary\" onClick={()=>{navigate(\"/login\")}}>\r\n              Back\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        </Card>\r\n  );\r\n};\r\n\r\n\r\n","import React,{useState} from \"react\"\r\nimport RegisterCard from \"../component/login/RegisterCard\"\r\n\r\nexport default function RegisterPage({initializeType}){\r\n\r\n    \r\n\r\n    return (\r\n        <div style={{width: '100vw', position: 'absolute',top:'10vw'}}>\r\n            <RegisterCard initializeType={initializeType}/>\r\n        </div>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst {SubMenu} = Menu;\n\nexport default function CustomerSidebar({updateSelection,setActionType,setFlightResult}) {\n    const tagList = {\n        \"1\": \"Search flights\",\n        \"2\": \"Purchase tickets\",\n        \"3\": \"My flights\",\n        \"4\": \"Track spending\",\n        \"5\": \"Logout\",\n    }\n    const navigate = useNavigate();\n\n    const actionTypeMapping={\n        \"1\":\"search\",\n        \"2\":\"purchase\",\n        \"3\":\"view\"\n    }\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // clear local account information\n            navigate(\"/\", {replace: true})\n        }\n        updateSelection(tagList[item.key]);\n        setFlightResult(null);\n        setActionType(actionTypeMapping[item.key]);\n    }\n\n    useEffect(() => {\n        updateSelection(\"Search flights\");\n        setActionType(\"search\");\n\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Booking\">\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Mine\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"4\">{tagList['4']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"5\">{tagList['5']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","export const statusColor = {\n    \"finished\": \"purple\",\n    \"upcoming\": \"blue\",\n    \"cancelled\":\"gray\",\n    \"onBoarding\": \"green\",\n    \"delayed\": \"red\"\n}","import {Button, Space, Tag} from \"antd\";\nimport {statusColor} from \"./statusTag\";\nimport React from \"react\";\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\n\n\nexport const ticketColumns = [\n    // title是列的名称\n    // dataIndex:是后续用于指定<Table>组件columns中的对应关系\n    // key就是用于区分所有的列\n    {\n        title: \"Ticket No.\",\n        dataIndex: \"ticket_id\",\n        key: \"ticket\"\n    },\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n];\n\n\nexport const staffViewFLightColumns = [\n    {\n        title: \"Flight Number\",\n        dataIndex:\"flight_id\",\n        key:\"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        hideInSearch:true,\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        hideInSearch:true,\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n    {\n        title: \"Action\",\n        key: 'action',\n        hideInSearch:true,\n        render: (text, record) => (\n            <Space size=\"middle\">\n            <Button>Details</Button>\n            <Button onClick={()=>{console.log(\"haha\");}} type={'primary'} size={'small'} >\n              <EditOutlined style={{fontSize: '15px'}} />\n            </Button>\n            <Button onClick={()=>{console.log(\"xixi\");}} type={'primary'} size={'small'} danger >\n              <DeleteOutlined style={{fontSize: '15px'}} />\n            </Button>\n          </Space>\n    \n        )\n    }\n]\n\nexport const customerInterfaceColumns = [\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n    {\n        title: \"Action\",\n        key: 'action',\n        render: (text, record) => (\n            <Space size={\"middle\"}>\n                <Button disabled={record.status==(\"finished\"||\"onBoarding\")} >Book {record.flight_id}</Button>\n            </Space>\n        )\n    }\n];\n\nexport const agentInterfaceColumns = [\n    {\n        title: \"User ID\",\n        dataIndex: 'uid',\n        key: 'uid',\n    },\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"price\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },  {\n        title: \"Action\",\n        key: 'action',\n        render: (text, record) => (\n            <Space size={\"middle\"}>\n                <Button disabled={record.status==(\"finished\"||\"onBoarding\")} >Book {record.flight_id}</Button>\n            </Space>\n        )\n    }\n]\n\nexport const globalInterfaceColumns = [\n    {\n        title: \"Flight No.\",\n        dataIndex: \"flight_id\",\n        key: \"flight\"\n    },\n    {\n        title: \"Dept. Airport\",\n        dataIndex: \"dept\",\n        key: \"dept\"\n    },\n    {\n        title: \"Arri. Airport\",\n        dataIndex: \"arri\",\n        key: \"arri\"\n    },\n    {\n        title: \"Dept. Time\",\n        dataIndex: \"dept_time\",\n        key: \"dept_time\"\n    },\n    {\n        title: \"Arri. Time\",\n        dataIndex: \"arri_time\",\n        key: \"arri_time\"\n    },\n    {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: tags => (\n            <>\n                {tags.map(status => (\n                    <Tag color={statusColor[status]} key={status}>\n                        {status.toUpperCase()}\n                    </Tag>\n                ))\n                }\n            </>\n        )\n    },\n]\n\n\n","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CustomerModal(props){\r\n\r\n    const {customerModalVis,setCustomerModalVis,rowRecord} = props;\r\n\r\n\r\n    \r\n\r\n\r\n    const purchaseCustomer = ()=>{\r\n\r\n\r\n    }\r\n    \r\n\r\n    return (<></>)\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n}","import React, { useState,useEffect } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function AgentModal(props){\r\n\r\n    const {agentModalVis,setAgentModalVis,rowRecord} = props;\r\n\r\n    const [ticketIds,setTicketIds] = useState([]);\r\n\r\n    const formLayout = {\r\n        labelCol: { span: 7 },\r\n        wrapperCol: { span: 13 },\r\n      };\r\n    \r\n    const FormItem = Form.Item;\r\n    \r\n    const { Option } = Select;\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const options = ticketIds.map(item => <Option key={item}>{item.ticket_id}</Option>);\r\n\r\n    const purchaseAgent = ()=>{\r\n        axios({\r\n            url:\"http://localhost:8080/bookingAgent/purchaseTicket\",\r\n            method:\"POST\",\r\n            data:{\r\n                airlineName:rowRecord.airlineName,\r\n                flightNum:rowRecord.flightNum,\r\n                \r\n            }\r\n        }).then(function(response){\r\n            if(response.data){\r\n                console.log(\"haha\");\r\n                setTicketIds(response.data);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const searchTicketId = ()=>{\r\n        const sendObject = qs.stringify({\r\n            airlineName:rowRecord.airline,\r\n            flightNum:rowRecord.flight_id,\r\n        });\r\n        console.log(sendObject);\r\n        axios({\r\n            url:\"http://localhost:8080/bookingAgent/findAllAvailableTickets\",\r\n            method:\"POST\",\r\n            headers:{\r\n                \"content-type\":\"application/x-www-form-urlencoded\"\r\n            },\r\n            data:qs.stringify({\r\n                airlineName:rowRecord.airline,\r\n                flightNum:rowRecord.flight_id,\r\n            })\r\n        }).then(function(response){\r\n            if(response.data){\r\n                console.log(response.data);\r\n                setTicketIds(response.data);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const renderContent = () => {\r\n        return (\r\n          <>\r\n            <FormItem\r\n              name=\"flightNum\"\r\n              label=\"Flight Number\"\r\n              rules={[{ required: true, message: 'Please input flight number!' }]}\r\n            >\r\n              <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"airlineName\"\r\n              label=\"Airline Name\"\r\n              rules={[{ required: true, message: 'Please input airline name!' }]}\r\n            >\r\n              <Input disabled={true} placeholder=\"请输入\" />\r\n            </FormItem>\r\n            <FormItem \r\n                name=\"ticketNumber\"\r\n                label=\"Ticket No.\"\r\n                rules={[{required:true,message:\"Please select a ticket.\"}]}>\r\n                <Select \r\n                    style={{width: 300, padding: 0}}\r\n                    placeholder={\"Select Tickets No.\"}\r\n                    value={ticketIds}\r\n                    showSearch\r\n                    onSearch={searchTicketId}\r\n                    allowClear\r\n                >\r\n                    {options}\r\n                </Select>\r\n            </FormItem>\r\n\r\n          </>\r\n        );\r\n      };\r\n    \r\n    const renderFooter = () => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => setAgentModalVis(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => purchaseAgent()}>\r\n              Purchase\r\n            </Button>\r\n          </>\r\n        );\r\n      };\r\n\r\n\r\n    return (<Modal width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title=\"Purchase Ticket\"\r\n        visible={agentModalVis}\r\n        footer={renderFooter()}\r\n        onCancel={() => setAgentModalVis(false)}>\r\n         <Form\r\n          {...formLayout}\r\n          form={form}\r\n            initialValues={{\r\n                airlineName:rowRecord.airline,\r\n                flightNum:rowRecord.flight_id\r\n            }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n        \r\n    </Modal>)\r\n\r\n\r\n\r\n\r\n}","import {Input, Space, DatePicker, Select, Card, Button, Divider, Tag, Table,Modal} from 'antd';\nimport React, {useState} from \"react\";\nimport {SwapOutlined} from \"@ant-design/icons\";\nimport {statusColor} from \"../../lib/statusTag\";\nimport {dateFormat} from \"../../lib/dateFormat\";\nimport {globalInterfaceColumns, ticketColumns} from \"../../lib/flightData\";\nimport CustomerModal from \"./PurchaseModals/CustomerModal\";\nimport AgentModal from \"./PurchaseModals/AgentModal\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport qs from \"qs\";\n\nconst {Search} = Input;\nconst {Option} = Select;\n\nexport function FlightsResultTable(props) \n{\n    const {data,userType,actionType,setRowRecord,setCustomerModalVis,setAgentModalVis} = props;\n    const {RangePicker} = DatePicker;\n\n    //创建purchase 回调\n    console.log(data);\n\n    const agentInterfaceColumns = [\n        {\n            title: \"User ID\",\n            dataIndex: 'uid',\n            key: 'uid',\n        },\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {   \n            title:\"Airline Name\",\n            dataIndex:\"airline\",\n            key:\"airline\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\"\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\"\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        },  {\n            title: \"Action\",\n            key: 'action',\n            render: (text, record) => (\n                <Space size={\"middle\"}>\n                    <Button disabled={(record.status==(\"finished\"||\"onBoarding\"))||record.full===true} onClick={()=>{\n                        \n                        setAgentModalVis(true);\n                        setRowRecord(record);\n                        \n                        }} >Book {record.flight_id}</Button>\n                </Space>\n            )\n        }\n    ]\n\n    const customerInterfaceColumns = [\n        {\n            title: \"Flight No.\",\n            dataIndex: \"flight_id\",\n            key: \"flight\"\n        },\n        {\n            title: \"Dept. Airport\",\n            dataIndex: \"dept\",\n            key: \"dept\"\n        },\n        {\n            title: \"Arri. Airport\",\n            dataIndex: \"arri\",\n            key: \"arri\"\n        },\n        {\n            title: \"Dept. Time\",\n            dataIndex: \"dept_time\",\n            key: \"dept_time\"\n        },\n        {\n            title: \"Arri. Time\",\n            dataIndex: \"arri_time\",\n            key: \"arri_time\"\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\"\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"status\",\n            key: \"status\",\n            render: tags => (\n                <>\n                    {tags.map(status => (\n                        <Tag color={statusColor[status]} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    ))\n                    }\n                </>\n            )\n        },\n        {\n            title: \"Action\",\n            key: 'action',\n            render: (text, record) => (\n                <Space size={\"middle\"}>\n                    <Button disabled={record.status==(\"finished\"||\"onBoarding\")} \n                    onClick={()=>{\n                        \n                        setCustomerModalVis(true);\n                        setRowRecord(record);\n                        \n                        }}>Book {record.flight_id}</Button>\n                </Space>\n            )\n        }\n    ];\n    \n\n    let columns = userType===\"customer\"? customerInterfaceColumns:userType===\"agent\"?agentInterfaceColumns:globalInterfaceColumns;\n    let dataMap = data;\n    if(actionType!==\"view\"){\n     dataMap = data.map(item=>{\n        return({key:[item.airlineName,item.flightNum],\n        flight_id:item.flightNum,\n        airline:item.airlineName,\n        dept:item.sourceAirportName,\n        arri:item.destAirportName,\n        dept_time:item.departureTime,\n        arri_time:item.arrivalTime,\n        price:item.price,\n        status:[item.status]\n        })\n    })}else if(actionType===\"view\"){\n         columns = ticketColumns\n         dataMap = data.map(item=>{\n            return({\n                key:item.ticketId,\n                ticket_id:item.ticketId,\n                airline:item.airlineName,\n                flight_id:item.flightNumber,\n                dept:item.departAirportName,\n                arri:item.arrivalAirportName,\n                dept_time:item.departureTime,\n                arri_time:item.arrivalTime,\n                status:[item.status]\n            })\n        })\n    }\n\n    //根据actionTab 过滤展示的列\n    if(actionType!==\"purchase\"){\n        columns = columns.filter((item)=>item.title!=\"Action\")\n    }\n\n    if(actionType===\"search\"){\n        columns = columns.filter((item)=>item.title!=\"User ID\");\n    }\n    console.log(columns);\n    return (\n        <Table columns={columns} dataSource={dataMap} size=\"middle\"/>\n    )\n}\n\nexport default function SearchFlights({userType,actionTab,flightsResult,setFlightResult,actionType}) {\n    // result body:\n    // [{most match: city if city, airport if airport},\n    // {cities if city, airports if airport}, ...,\n    // {airports if city, cities if airport}, {}]\n\n    const {RangePicker} = DatePicker;\n\n    const [deptAirport, setDeptAirport] = useState(undefined);\n    const [arriAirport, setArriAirport] = useState(undefined);\n    const [deptDate, setDeptDate] = useState(\"\"); //today\n    const [deptDate2,setDeptDate2] = useState(\"\");\n    const [searchResult, setSearchResult] = useState([]);\n    // const [flightsResult, setFlightResult] = useState(null);\n    const [flightID, setFlightID] = useState(undefined);\n    // 设置点击购买按钮后的数据\n    const [rowRecord,setRowRecord] = useState(undefined);\n\n    // 设置模态对话框用于提交购买信息\n    const [agentModalVis,setAgentModalVis] = useState(false);\n    const [customerModalVis,setCustomerModalVis] = useState(false);\n    \n    console.log(actionType);\n\n    const searchAirport=()=>{\n        axios({\n            url:\"http://localhost:8080/index/searchAirports\",\n            type:\"GET\",\n        }).then(function(response){\n            if(response.data){\n                setSearchResult(response.data);\n            }else{\n                console.log(\"No Results\");\n            }\n        })\n    };\n\n    const options = searchResult.map(item => <Option key={item}>{item}</Option>);\n\n    const handleSearch = (value) => {\n        if (value) {\n            setTimeout(searchAirport, 500);\n        } else {\n            setSearchResult([]);\n        }\n    }\n\n    //callback就是传入的回调函数，value就是一个参数为value的，调用了callback的函数\n    const handleChange = (callBack) => (value) => {\n        callBack(value);\n    }\n\n    const swapDeptArri = () => {\n        let tmp = deptAirport;\n        setDeptAirport(arriAirport);\n        setArriAirport(tmp);\n    }\n\n    const handleSearchFlights = () => {\n        // search flights\n        console.log(\"xixi\");\n        // console.log(deptAirport);\n        // console.log(arriAirport);\n        // console.log(actionTab);\n        axios({\n            url:\"http://localhost:8080/index/searchFlights\",\n            method:\"POST\",\n            data: {sourceAirportName:deptAirport,\n                destAirportName:arriAirport,\n                departureTime:deptDate}\n        }).then(function(response){\n            if(response.data){\n                console.log(response.data);\n                setFlightResult(response.data);\n                // console.log(response.data);\n                // console.log(\"haha\");\n            }else{\n                console.log(\"No Results\");\n            }\n        })\n\n        // setFlightResult(\"testing\")\n    }\n\n    const handleExactSearch = () => {\n        setFlightResult(\"testing\");\n    }\n\n\n    // 处理买票请求\n    const handlePurchase = ()=>{\n        \n\n\n    }\n\n    // 处理和ViewFlights相关的请求\n    const handleViewFlights = ()=>{\n        let sendObject = null;\n        if(deptDate===\"\"){\n            sendObject = qs.stringify({\n                sourceAirport:deptAirport,\n                destAirport:arriAirport,\n                email:\"abababababa@gmail.com\",\n            })\n        }else{\n            sendObject= qs.stringify({\n                sourceAirport:deptAirport,\n                destAirport:arriAirport,\n                email:\"abababababa@gmail.com\",\n                startDate:new Date(deptDate),\n            })\n        }\n        axios({\n            url:userType===\"customer\"?\"http://localhost:8080/customer/getMyFlights\":\"http://localhost:8080/agent/getMyFlights\",\n            method:\"POST\",\n            header:{\n                \"Content-Type\":\"application/x-www-form-urlencoded;charset=UTF-8\"\n            },\n            data:sendObject\n        }).then(function(response){\n            if(response.data){\n                setFlightResult(response.data);\n            }else{\n            }\n        }).catch(function(response){\n            console.log(\"出错了\");\n        })\n    }\n\n    return (\n        <Card title={actionTab!==\"view\"?\"Start planning your journey, Username!\":\"Welcome you\"}>\n            <Input.Group>\n                <b>From:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"From\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Departure Airport\"}\n                    value={deptAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setDeptAirport)}\n                    notFoundContent={null}\n                    allowClear\n                >\n                    {options}\n                </Select>\n                <Button shape=\"circle\" icon={<SwapOutlined />} onClick={swapDeptArri} />\n                <b style={{paddingLeft: 10}}>To:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"To\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Arrival Airport\"}\n                    value={arriAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setArriAirport)}\n                    notFoundContent={null}\n                    allowClear\n                >\n                    {options}\n                </Select>\n                <DatePicker format={dateFormat} onChange={handleChange(setDeptDate)} style={{width:200}} />\n                {/* <RangePicker onChange={()=>{handleChange(setDeptDate);handleChange(setDeptDate2)}} picker=\"day\" style={{width:200}} placeholder={[\"deptTimeLeftRange\",\"deptTimeRightRange\"]}></RangePicker> */}\n                <span style={{padding: 10}}> </span>\n                <Button type=\"primary\" onClick={actionType===\"view\"?handleViewFlights:handleSearchFlights}>Search</Button>\n            </Input.Group>\n            \n            {(actionTab===\"purchase\")&&(\n                <div>\n            <p>Or use exact searching:</p>\n            <Input\n                addonBefore=\"Flight Number\"\n                placeholder=\"Airline Code + Digits\"\n                value={flightID}\n                allowClear\n                maxLength={6}\n                style={{width: '50vw'}}\n            />\n            <b style={{padding: 10}}> </b>\n            <Button type={\"primary\"} onClick={handleExactSearch}>Exact Searching</Button></div>)}\n            <Divider />\n            {flightsResult ? <FlightsResultTable data={flightsResult} userType={userType} actionType={actionType} setRowRecord={setRowRecord} setAgentModalVis={setAgentModalVis} setCustomerModalVis={setCustomerModalVis}/> : null}\n            \n            {rowRecord? <AgentModal agentModalVis={agentModalVis} setAgentModalVis={setAgentModalVis} rowRecord={rowRecord}></AgentModal>:null}\n\n            {rowRecord? <CustomerModal customerModalVis={customerModalVis} setCustomerModalVis={setCustomerModalVis} rowRecord={rowRecord}></CustomerModal>:null}\n                \n        </Card>\n    )\n}","import {FlightsResultTable} from \"../flight/SearchFlights\";\nimport React, {useState} from \"react\";\nimport {Button, Card, DatePicker, Divider, Input, Select} from \"antd\";\nimport {SwapOutlined} from \"@ant-design/icons\";\nimport {dateFormat} from \"../../lib/dateFormat\";\n\nconst {Option} = Select;\n\nexport default function PurchaseTicket() {\n    // result body:\n    // [{most match: city if city, airport if airport},\n    // {cities if city, airports if airport}, ...,\n    // {airports if city, cities if airport}, {}]\n\n    const [deptAirport, setDeptAirport] = useState(undefined);\n    const [arriAirport, setArriAirport] = useState(undefined);\n    const [deptDate, setDeptDate] = useState(\"\"); //today\n    const [searchResult, setSearchResult] = useState([]);\n    const [flightsResult, setFlightResult] = useState(null);\n    const [flightID, setFlightID] = useState(undefined);\n\n    //for testing ONLY\n    const test = () => {setSearchResult([\"Shanghai\", \"Shangrao\", \"Bashang\", \"SHA\", \"PVG\", \"SQD\", \"ZQZ\"])};\n\n    const options = searchResult.map(item => <Option key={item}>{item}</Option>);\n\n    const handleSearch = (value) => {\n        if (value) {\n            setTimeout(test, 500);\n        } else {\n            setSearchResult([]);\n        }\n    }\n    const handleChange = (callBack) => (value) => {\n        callBack(value);\n    }\n\n    const swapDeptArri = () => {\n        let tmp = deptAirport;\n        setDeptAirport(arriAirport);\n        setArriAirport(tmp);\n    }\n\n    const handleSearchFlights = () => {\n        // search flights\n        setFlightResult(\"testing\");\n    }\n\n    const handleExactSearch = () => {\n        setFlightResult(\"testing\");\n    }\n\n\n    return (\n        <Card title=\"Start planning your journey, Username!\">\n            <Input.Group>\n                <b>From:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"From\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Departure Airport\"}\n                    value={deptAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setDeptAirport)}\n                    notFoundContent={null}\n                >\n                    {options}\n                </Select>\n                <Button shape=\"circle\" icon={<SwapOutlined />} onClick={swapDeptArri} />\n                <b style={{paddingLeft: 10}}>To:</b>\n                <Select\n                    showSearch\n                    addonBefore=\"To\"\n                    style={{width: 300, padding: 10}}\n                    placeholder={\"Arrival Airport\"}\n                    value={arriAirport}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    onSearch={handleSearch}\n                    onChange={handleChange(setArriAirport)}\n                    notFoundContent={null}\n                >\n                    {options}\n                </Select>\n                <DatePicker format={dateFormat} onChange={handleChange(setDeptDate)} style={{width:200}} />\n                <span style={{padding: 10}}> </span>\n                <Button type=\"primary\" onClick={handleSearchFlights}>Search</Button>\n            </Input.Group>\n            <p>Or use exact searching:</p>\n            <Input\n                addonBefore=\"Flight Number\"\n                placeholder=\"Airline Code + Digits\"\n                value={flightID}\n                allowClear\n                maxLength={6}\n                style={{width: '50vw'}}\n            />\n            <b style={{padding: 10}}> </b>\n            <Button type={\"primary\"} onClick={handleExactSearch}>Exact Searching</Button>\n\n            <Divider />\n            {flightsResult ? <FlightsResultTable data={flightsResult} /> : null}\n        </Card>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Pie} from \"@ant-design/charts\";\nimport {Input, Space, DatePicker, Select, Card, Button, Divider, Tag, Table} from 'antd';\nimport {dateFormat} from \"../../lib/dateFormat\";\nimport axios from \"axios\";\n\nexport default function SpendingChart() {\n\n    const [spendingData, setSpendingData] = useState(null);\n\n    //for testing ONLY\n    const testData = [\n        {\n            type: 'January',\n            value: 2930.8,\n        },\n        {\n            type: 'February',\n            value: 1034.2,\n        },\n        {\n            type: 'March',\n            value: 3832.9,\n        },\n        {\n            type: 'April',\n            value: 1564.0,\n        },\n        {\n            type: 'May',\n            value: 3013.6,\n        },\n        {\n            type: 'June',\n            value: 4566.2,\n        },\n    ];\n\n\n    const handleSearch =()=>{\n\n    }\n\n    const handleSubmit=()=>{\n        axios({\n            url:\"http://\",\n            method:\"POST\",\n            data:\"\",\n        })\n    }\n\n    const chartConfig = {\n        appendPadding: 10,\n        data: testData, // TODO: use props or ask for the server\n        angleField: 'value',\n        colorField: 'type',\n        radius: 0.9,\n        meta: {\n            type: {\n                alias: 'Date Range',\n            },\n            value: {\n                alias: 'Total Spending',\n                formatter: (v) => (\"$\" + v.toString()),\n            },\n        },\n        label: {\n            type: 'inner',\n            offset: '-30%',\n        }\n    }\n\n    return (\n        <Card title=\"See your amazing trips, Username!\">\n            <Input.Group>\n\n            <DatePicker format={dateFormat} placeholder={\"startDate\"}  onChange={handleSearch} style={{width:200}} />\n            <b style={{padding: 90}}> </b>\n            <DatePicker format={dateFormat} placeholder={\"endDate\"} onChange={handleSearch} style={{width:200}} />\n            <b style={{padding: 90}}> </b>\n            <Button type={\"primary\"} onClick={handleSubmit}>Display</Button>\n            </Input.Group>\n            <Pie {...chartConfig} />\n        </Card>\n    )\n}","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst {SubMenu} = Menu;\n\nexport default function AgentSidebar({updateSelection,setActionType,setFlightResult}) {\n    const tagList = {\n        \"1\": \"Search flights\",\n        \"2\": \"Create order\",\n        \"3\": \"My customer orders\",\n        \"4\": \"Commission statistics\",\n        \"5\": \"Top customers\",\n        \"6\": \"Logout\"\n    }\n    const navigate = useNavigate();\n\n    \n    const actionTypeMapping={\n        \"1\":\"search\",\n        \"2\":\"purchase\",\n        \"3\":\"view\"\n    }\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // clear local account information\n            navigate(\"/\", {replace: true})\n        }\n        updateSelection(tagList[item.key]);\n        setFlightResult(null);\n        setActionType(actionTypeMapping[item.key]);\n\n    }\n\n    useEffect(() => {\n        updateSelection(\"Commission statistics\")\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['4']}\n            defaultOpenKeys={['sub2']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Booking\">\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Mine\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"4\">{tagList['4']}</Menu.Item>\n                <Menu.Item key=\"5\">{tagList['5']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"6\">{tagList['6']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","import React, {useState} from \"react\";\nimport {Column} from \"@ant-design/charts\";\nimport {Card, Divider, Typography,InputNumber} from \"antd\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nconst {Title} = Typography;\n\nexport default function TopCustomerChart() {\n    const [customerTicketCount, setCustomerTicketCount] = useState(null);\n    const [customerCommission, setCustomerCommission] = useState(null);\n    const [activeTab,setActiveTab] = useState(\"tickets\");\n    const [data,setData]=useState([]);\n    const [topK,setTopK] = useState(5);\n\n    const tabList = [\n        {key: 'tickets', tab: 'Tickets Ranking'},\n        {key: 'commission', tab: 'Commission Ranking'},\n    ]\n\n    useEffect((()=>{\n        setData(testTicket);\n    }))\n\n\n    // for testing ONLY\n    const testTicket = [\n        {\n            uid: \"123\",\n            sum: 15,\n        },\n        {\n            uid: \"234\",\n            sum: 11,\n        },\n        {\n            uid: \"471\",\n            sum: 9,\n        },\n        {\n            uid: \"602\",\n            sum: 7,\n        },\n        {\n            uid: \"866\",\n            sum: 5,\n        },\n    ];\n    const testCommission = [\n        {\n            uid: \"123\",\n            sum: 9806.3,\n        },\n        {\n            uid: \"234\",\n            sum: 7503.5,\n        },\n        {\n            uid: \"471\",\n            sum: 6602.6,\n        },\n        {\n            uid: \"602\",\n            sum: 1025.2,\n        },\n        {\n            uid: \"866\",\n            sum: 897.8,\n        },\n    ]\n\n    const columnConfig = {\n        xField: 'uid',\n        yField: 'sum',\n        seriesField: '',\n        columnWidthRatio: 0.5,\n        label: {\n            position: 'middle',\n            style: {\n                fill: '#FFFFFF',\n                opacity: 0.8\n            }\n        },\n        xAxis: {\n            label: {\n                autoHide: true,\n                autoRotate: false,\n            }\n        },\n    }\n\n\n    const onTabChange = (key)=>{\n        setActiveTab(key);\n        if(key===\"tickets\"){\n            setData(testTicket);\n        }else{\n            setData(testCommission);\n        }\n    }\n\n    const onNumberChange=(value)=>{\n        //更新图标\n        setTopK(value);\n    }\n    \n\n    return (\n        <Card title=\"Customer Statistics\"\n              tabList={tabList}\n              activeTab={activeTab}\n        onTabChange={onTabChange}\n        tabBarExtraContent={<><span style={{marginRight:5}}>Top</span><InputNumber min={1} onChange={onNumberChange} defaultValue={5}></InputNumber><span style={{marginLeft:5}}>Agents</span></>}\n        >\n            <Column {...columnConfig}\n                    data={data.slice(0,topK)}\n                    meta={{uid: {alias: 'User ID'}, sum: {alias:activeTab===\"tickets\"?'Ticket Number':'Total Commission'}}} />\n        </Card>\n    )\n}","import {DatePicker, Statistic, Card, Space} from \"antd\";\nimport React, {useEffect, useState} from \"react\";\n//后续可通过moment()获取当前的时间\nimport moment from \"moment\";\n\nconst {RangePicker} = DatePicker;\n\nexport default function CommissionStatistics() {\n    const [commissionData, setCommissionData] = useState(null);\n\n    const handleDateRangeChange = () => {\n        setCommissionData(29056);\n    }\n\n    const loadingHolder = Boolean(commissionData);\n\n    useEffect(() => {\n        setTimeout(() => {setCommissionData(29056);}, 3000);\n    }, []);\n\n    return (\n        <Card title=\"Checking Total Commission for Username\">\n            <Space direction=\"vertical\" size='large' style={{width: '100%'}}>\n                <RangePicker\n                    onChange={handleDateRangeChange}\n                    defaultValue={[moment().subtract(30, 'days'), moment()]}\n                />\n                <div style={{textAlign: 'center', width: '100%'}}>\n                    <Statistic\n                        title=\"Total Commission in XXX (USD)\"\n                        value={commissionData}\n                        loading={!loadingHolder}\n                        precision={2}\n                        style={{width: '100%'}}\n                    />\n                </div>\n            </Space>\n        </Card>\n    )\n\n}","import {CarryOutOutlined, FundViewOutlined, SendOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Menu} from \"antd\";\nimport React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst {SubMenu} = Menu;\n\nexport default function StaffSidebar({updateSelection}) {\n    const tagList = {\n        // Flight Management\n        \"2\": \"Flight CRUD\",\n        \"4\": \"Add airplane\",\n        \"5\": \"Add airport\",\n        // Statistics\n        \"3\": \"View Agents\",\n        \"6\": \"Frequent customers\",\n        \"7\": \"Revenue Comparison\",\n        \"8\": \"Top destinations\",\n        \"9\": \"View Reports\",\n        // Operation\n        \"10\": \"Add booking agent\",\n        \"11\": \"Grant permission\",\n        \"12\": \"Logout\",\n\n    }\n    const navigate = useNavigate();\n\n    const handleSidebarClick = (item) => {\n        if (tagList[item.key] == \"Logout\") {\n            // clear local account information\n            navigate(\"/\", {replace: true})\n        }\n        console.log(item);\n        updateSelection(tagList[item.key])\n    }\n\n    useEffect(() => {\n        updateSelection(\"View Reports\");\n    }, [])\n\n    return (\n        <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['9']}\n            defaultOpenKeys={['sub2']}\n            onClick={handleSidebarClick}\n            style={{height: '100%', borderRight: 0}}\n        >\n            <SubMenu key=\"sub1\" icon={<SendOutlined />} title=\"Flight Management\">\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\n                <Menu.Item key=\"4\">{tagList['4']}</Menu.Item>\n                <Menu.Item key=\"5\" disabled={false}>{tagList['5']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<FundViewOutlined />} title=\"Statistics\">\n                <Menu.Item key=\"3\">{tagList['3']}</Menu.Item>\n                <Menu.Item key=\"6\">{tagList['6']}</Menu.Item>\n                <Menu.Item key=\"7\">{tagList['7']}</Menu.Item>\n                <Menu.Item key=\"8\">{tagList['8']}</Menu.Item>\n                <Menu.Item key=\"9\">{tagList['9']}</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Operation\">\n                <Menu.Item key=\"10\">{tagList['10']}</Menu.Item>\n                <Menu.Item key=\"11\">{tagList['11']}</Menu.Item>\n                <Menu.Item key=\"12\">{tagList['12']}</Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}","import React, {useState} from \"react\";\nimport {Input, Card, Button,Form,message} from \"antd\";\nimport qs from \"qs\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nexport default function EditAirport() {\n\n    const onFinish =(values)=>{\n      console.log(values);\n      axios({\n        url:\"http://localhost:8080/airlineStaff/addNewAirport\",\n        method:\"post\",\n        data:values\n      }).then(function(response){\n        if(response.data===\"success\"){\n          message.success({\n            content: 'Insertion Completed',\n            className: 'custom-class',\n            style: {\n              marginTop: '40vh',\n            },\n          });\n        }else{\n          message.error({\n            content: 'You have already inserted this airport!',\n            className: 'custom-class',\n            style: {\n              marginTop: '40vh',\n            },\n          });\n        }\n      })\n    }\n\n    const onFinishFailed = ()=>{\n      console.log(\"xixi\");\n    }\n\n    const onReset = ()=>{\n      form.resetFields();\n    }\n\n    const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n\n    const [form] = Form.useForm();\n    return (\n        <Card title=\"Airport Information Management\">\n           <Form\n           form={form}\n            name=\"airport form\"\n            className=\"airport_form\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            scrollToFirstError>\n           \n            <Form.Item\n            name=\"airportName\"\n            label=\"Airport Name\"\n            rules={[\n                {\n                  required:true,\n                message:\"Airport Name should not be empty!\"\n                }\n            ]}\n            validateTrigger='onBlur'\n            hasFeedback>\n\n                <Input ></Input>\n            </Form.Item>\n\n            <Form.Item\n            name=\"airportCity\"\n            label=\"Airport City\"\n            validateTrigger='onBlur'\n            rules={\n              [\n                {\n                  required:true,\n                message:\"Airport City should not be empty!\"}\n            ]}\n            hasFeedback>\n\n                <Input></Input>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}> \n            <Button type=\"primary\" htmlType=\"submit\">\n              Add\n            </Button>\n            <Button type=\"primary\" onClick={onReset}>\n              Reset\n            </Button>\n          </Form.Item>\n          </Form>\n\n\n        </Card>\n    )\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,InputNumber,message} from \"antd\";\r\nimport qs from \"qs\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport default function EditAirport() {\r\n\r\n    const onFinish =(values)=>{\r\n      console.log(values);\r\n      axios({\r\n        url:\"http://localhost:8080/airlineStaff/addNewAirplane\",\r\n        method:\"post\",\r\n        data:{airline:values.airlineName,\r\n              id:values.airplaneId,\r\n              seats:values.seats\r\n              }\r\n      }).then(function(response){\r\n        if(response.data===\"success\"){\r\n          message.success({\r\n            content: 'Insertion Completed',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '40vh',\r\n            },\r\n          });\r\n        }else{\r\n          message.error({\r\n            content: 'You have already inserted this airplane information!',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '40vh',\r\n            },\r\n          });\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n    const onFinishFailed = ()=>{\r\n        console.log(\"验证失败\");\r\n    }\r\n\r\n    const onReset = ()=>{\r\n      form.resetFields();\r\n    }\r\n\r\n    const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Card title=\"Airplane Information Management\">\r\n           <Form\r\n           form={form}\r\n            name=\"airplane\"\r\n            className=\"airplane-form\"\r\n            onFinish={onFinish}\r\n            onFinishedFailed={onFinishFailed}>\r\n           \r\n            <Form.Item\r\n            name=\"airlineName\"\r\n            label=\"Airline Name\"\r\n            rules={[\r\n                {required:true,\r\n                message:\"Aiport Name should not be empty!\"}\r\n            ]}>\r\n\r\n                <Input ></Input>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n            name=\"airplaneId\"\r\n            label=\"Airplane Id\"\r\n            rules={[\r\n                {required:true,\r\n                message:\"Aiport Id should not be empty!\"}\r\n            ]}>\r\n\r\n                <Input></Input>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n            name=\"seats\"\r\n            label=\"Seat Number\"\r\n            >\r\n\r\n                <InputNumber defaultValue={200} ></InputNumber>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}> \r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Add\r\n            </Button>\r\n            <Button type=\"primary\" onClick={onReset}>\r\n              Reset\r\n            </Button>\r\n          </Form.Item>\r\n          </Form>\r\n\r\n        </Card>\r\n    )\r\n}","import {CarryOutOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {Menu} from \"antd\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nexport default function GlobalSidebar({updateSelection}){\r\n    const tagList = {\r\n        \"1\": \"Search flights\",\r\n        \"2\": \"Logout\",\r\n    }\r\n    const navigate = useNavigate();\r\n\r\n    const handleSidebarClick = (item) => {\r\n        if (tagList[item.key] == \"Logout\") {\r\n            // clear local account information\r\n            //Todo\r\n            navigate(\"/\", {replace: true})\r\n        }\r\n        updateSelection(tagList[item.key])\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateSelection(\"Search flights\")\r\n    }, [])\r\n\r\n    return (\r\n        <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1']}\r\n            onClick={handleSidebarClick}\r\n            style={{height: '100%', borderRight: 0}}\r\n        >\r\n            <SubMenu key=\"sub1\" icon={<CarryOutOutlined />} title=\"Operation\">\r\n                <Menu.Item key=\"1\">{tagList['1']}</Menu.Item>\r\n                <Menu.Item key=\"2\">{tagList['2']}</Menu.Item>\r\n            </SubMenu>\r\n        </Menu>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nconst formLayout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 13 },\r\n  };\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function CreateForm(props){\r\n    const{modalVisible,onCancel,onSubmit,handleCreateModalVisible,handleCreate} = props;\r\n    const[formVals,setFormVals] = useState({}); //用于批量添加，暂时用不到\r\n\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const disabledDate = (current) => {\r\n      // Can not select days before today and today\r\n      return current && current < moment().endOf('day');\r\n    }\r\n\r\n    const options = [\"upcoming\",\"finished\",\"cancelled\",\"onBoarding\",\"delayed\"];\r\n    const optionsData = options.map((item)=><Option key={item}>{item}</Option>)\r\n\r\n    \r\n\r\n    const handleNext = async () => {\r\n        const fieldsValue = await form.validateFields();\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/validateNewAirplane\",\r\n          method:\"POST\",\r\n          data:{\r\n            id:fieldsValue.airplaneId,\r\n            airline:fieldsValue.airlineName\r\n          }\r\n        }).then(function(response){\r\n          if(response.data===\"success\"){\r\n            setFormVals({ ...formVals, ...fieldsValue});\r\n            handleCreate({ ...formVals, ...fieldsValue});\r\n          }else{\r\n            message.error({\r\n              content: 'This airline name and airplane id is not found in the database!',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n          }\r\n        })\r\n        \r\n      };\r\n\r\n    const renderContent = () => {\r\n        return (\r\n          < >\r\n            <FormItem\r\n              name=\"flightNum\"\r\n              label=\"Flight Number\"\r\n              rules={[{ required: true, message: 'Please input flight number!' }]}\r\n            >\r\n              <Input placeholder=\"e.g. MU672\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"airlineName\"\r\n              label=\"Airline Name\"\r\n              rules={[{ required: true, message: 'Please input airline name' }]}\r\n            >\r\n              <Input placeholder=\"e.g. Cathay Pacific\" />\r\n            </FormItem>\r\n    \r\n            <FormItem\r\n              name=\"sourceAirportName\"\r\n              label=\"Departure Airport\"\r\n              rules={[{ required: true, message: 'Please Input Departure Airport' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (value && getFieldValue('destAirportName') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The arrivalAirport should not be the same as the departure Airport!'));\r\n                },\r\n              }),]}\r\n            >\r\n              <Input placeholder=\"e.g. PVG\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"departureTime\"\r\n              label=\"Departure Time\"\r\n              rules={[{ required: true, message: 'Please input Departure Time' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  console.log(\"xixi\");\r\n                  if (moment(value)<moment(getFieldValue(\"arrivalTime\"))) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('You cannot set the departure time to be later than arrival time!'));\r\n                },}),\r\n\r\n              ]}\r\n              >\r\n              <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n               disabledDate={disabledDate}\r\n               showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }\r\n              \r\n              }></DatePicker>\r\n            </FormItem>\r\n\r\n\r\n            <FormItem\r\n              name=\"destAirportName\"\r\n              label=\"Arrival Airport\"\r\n              rules={[{ required: true, message: 'Please Input Arrival Airport' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (value && getFieldValue('sourceAirportName') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('The arrival airport should not be the same as the departure airport!'));\r\n                },\r\n              }),]}\r\n            >\r\n              <Input placeholder=\"e.g. SZX\" />\r\n            </FormItem>\r\n\r\n\r\n            <FormItem\r\n              name=\"arrivalTime\"\r\n              label=\"Arrival Time\"\r\n              rules={[{ required: true, message: 'Please input Arrival Time' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (moment(value)>moment(getFieldValue(\"departureTime\"))) {\r\n                    return Promise.resolve();\r\n                  }\r\n    \r\n                  return Promise.reject(new Error('You cannot set the arrival time to be earlier than  the departure time!'));\r\n                },\r\n              }),]}\r\n              >\r\n              <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n               disabledDate={disabledDate}\r\n               showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}></DatePicker>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"price\"\r\n              label=\"price\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please indicate the price of this flight!\"\r\n              }]}>\r\n              <InputNumber min={1} max={999999999} precision={2} style={{width:130}}></InputNumber>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"status\"\r\n              label=\"status\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please select the status of this flight!\"\r\n              }]}>\r\n              <Select >{optionsData}</Select>\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              name=\"airplaneId\"\r\n              label=\"Airplane Id\"\r\n              rules={[{\r\n                  required: true,\r\n                  message: \"Please select the airplane id for this flight!\"\r\n              }]}>\r\n              <Input placeholder=\"e.g. A380\"></Input>\r\n            </FormItem>\r\n\r\n\r\n          </>\r\n        );\r\n      };\r\n\r\n      const renderFooter = () => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleCreateModalVisible(false)}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={() => handleNext()}>\r\n              Submit\r\n            </Button>\r\n          </>\r\n        );\r\n      };\r\n\r\n    return (\r\n        <Modal\r\n      destroyOnClose\r\n      title=\"Add Flight\"\r\n      visible={modalVisible}\r\n      onCancel={() => onCancel()}\r\n      footer={renderFooter()}\r\n      \r\n    >\r\n      {/* {props.children} */}\r\n\r\n      <Form\r\n          {...formLayout}\r\n          form={form}\r\n          name=\"flight\"\r\n          className=\"flight-form\"\r\n        >{renderContent()}\r\n        </Form>\r\n\r\n    </Modal>\r\n    )\r\n\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { ConsoleSqlOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst formLayout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 13 },\r\n  };\r\n\r\nexport default function UpdateForm(props){\r\n    const {onCancel,onSubmit,updateModalVisible,handleUpdateModalVisible,values,handleUpdate}=props;\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const disabledDate = (current) => {\r\n      // Can not select days before today and today\r\n      return current && current < moment().endOf('day');\r\n    }\r\n\r\n    const [formVals,setFormVals] = useState({\r\n        ...props.values,\r\n    });\r\n\r\n    const handleNext = async () => {\r\n        const fieldsValue = await form.validateFields();\r\n        setFormVals({ ...formVals, ...fieldsValue});\r\n        handleUpdate({ ...formVals, ...fieldsValue});\r\n      };\r\n\r\n      const renderContent = () => {\r\n        return (\r\n          <>\r\n            <FormItem\r\n              name=\"flightNum\"\r\n              label=\"Flight Number\"\r\n              rules={[{ required: true, message: 'Please input flight number!' }]}\r\n            >\r\n              <Input placeholder=\"请输入\" />\r\n            </FormItem>\r\n            <FormItem\r\n              name=\"airlineName\"\r\n              label=\"Airline Name\"\r\n              rules={[{ required: true, message: 'Please input airline name!' }]}\r\n            >\r\n              <Input placeholder=\"请输入\" />\r\n            </FormItem>\r\n    \r\n            {(<FormItem\r\n              name=\"sourceAirportName\"\r\n              label=\"Departure Airport\"\r\n              rules={[{ required: true, message: 'Please Input Departure Airport' }]}\r\n            >\r\n              <Input placeholder=\"请输入\" />\r\n            </FormItem>)}\r\n            {/* {(<FormItem\r\n            name=\"departureTime\"\r\n            label=\"Departure Time\"\r\n            rules={[{ required: true, message: 'Please input Departure Time' }]}\r\n            >\r\n            <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n              //  disabledDate={disabledDate}\r\n               showTime={{format:\"YYYY-MM-DD HH:mm:ss\"}}></DatePicker>\r\n            </FormItem>)} */}\r\n\r\n            <FormItem\r\n            name=\"destAirportName\"\r\n            label=\"Arrival Airport\"\r\n            rules={[{ required: true, message: 'Please input  Arrival Airport' }]}\r\n            >\r\n            <Input placeholder=\"请输入\" />\r\n            </FormItem>\r\n\r\n            {/* <FormItem\r\n            name=\"arrivalTime\"\r\n            label=\"Arrival Time\"\r\n            rules={[{ required: true, message: 'Please input Departure Time' }]}\r\n            >\r\n            <DatePicker \r\n               format=\"YYYY-MM-DD HH:mm:ss\"\r\n              //  disabledDate={disabledDate}\r\n               showTime={{format:\"YYYY-MM-DD HH:mm:ss\"}}></DatePicker>\r\n            </FormItem> */}\r\n\r\n            <FormItem\r\n            name=\"price\"\r\n            label=\"price\"\r\n            rules={[{ required: true, message: 'Please input the price' }]}\r\n            >\r\n            <Input placeholder=\"请输入\" />\r\n            </FormItem>\r\n            <FormItem\r\n            name=\"status\"\r\n            label=\"status\"\r\n            rules={[{ required: true, message: 'Please input the status' }]}\r\n            >\r\n            <Input placeholder=\"请输入\" />\r\n            </FormItem>\r\n          </>\r\n        );\r\n      };\r\n    \r\n      const renderFooter = () => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleUpdateModalVisible(false, values)}>取消</Button>\r\n            <Button type=\"primary\" onClick={() => handleNext()}>\r\n              提交\r\n            </Button>\r\n          </>\r\n        );\r\n      };\r\n  \r\n    return (\r\n    <Modal\r\n        width={640}\r\n        bodyStyle={{ padding: '32px 40px 48px' }}\r\n        destroyOnClose\r\n        title=\"Update Flight\"\r\n        visible={updateModalVisible}\r\n        footer={renderFooter()}\r\n        onCancel={() => handleUpdateModalVisible()}\r\n      >\r\n  \r\n        <Form\r\n          {...formLayout}\r\n          form={form}\r\n          initialValues={{\r\n            flightNum: formVals.flightNum,\r\n            airlineName: formVals.airlineName,\r\n            sourceAirportName: formVals.sourceAirportName,\r\n            // departureTime:formVals.dept_time,\r\n            destAirportName: formVals.destAirportName,\r\n            // arrivalTime:formVals.arri_time,\r\n            price:formVals.price,\r\n            status:formVals.status\r\n          }}\r\n        >\r\n          {renderContent()}\r\n        </Form>\r\n      </Modal>)\r\n}","import React, { useState } from 'react';\r\nimport { Table, Select,Form, Button, Input, Modal, DatePicker, InputNumber, message} from 'antd';\r\nimport { render } from '@testing-library/react';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport default function DetailsTable(props){\r\n    const {detailModalVisible,onCancel,handleDetailModalVisible,record} = props;\r\n\r\n    console.log(record);\r\n    const dataSource = [{\r\n        email:\"asda\",\r\n        name:\"Jack\",\r\n        building_num:\"No.10\",\r\n        street:\"Baker Street\",\r\n        city:\"NYC\",\r\n        state:\"USA\",\r\n        phone:\"1231231234\",\r\n        passportNumber:\"E1231414\",\r\n        passportExpiration:\"2029-10-21\",\r\n        passportCountry:\"China\",\r\n        birthday:\"1999-02-02\"\r\n    }]\r\n\r\n    const columns=[\r\n        {\r\n            title:\"Email\",\r\n            dataIndex:\"email\",\r\n            key:\"email\"\r\n        },{\r\n            title:\"Name\",\r\n            dataIndex:\"name\",\r\n            key:\"name\"\r\n        },\r\n        {\r\n            title:\"Building Number\",\r\n            dataIndex:\"building_num\",\r\n            key:\"building\"\r\n        },\r\n        {\r\n            title:\"Street\",\r\n            dataIndex:\"street\",\r\n            key:\"street\"\r\n        },\r\n        {\r\n            title:\"City\",\r\n            dataIndex:\"city\",\r\n            key:\"city\"\r\n        },{\r\n            title:\"State\",\r\n            dataIndex:\"state\",\r\n            key:\"state\"\r\n        },{\r\n            title:\"Phone No.\",\r\n            dataIndex:\"phone\",\r\n            key:\"phone\"\r\n        },{\r\n            title:\"Passport No.\",\r\n            dataIndex:\"passportNumber\",\r\n            key:\"passportnum\"\r\n        },{\r\n            title:\"Passport Exp.\",\r\n            dataIndex:\"passportExpiration\",\r\n            key:\"passportexp\"\r\n        },{\r\n            title:\"Passport Country\",\r\n            dataIndex:\"passportCountry\",\r\n            key:\"passportCountry\"\r\n        },{\r\n            title:\"Birthday\",\r\n            dataIndex:\"birthday\",\r\n            key:\"birthday\",\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    return (\r\n    <>\r\n    <Modal \r\n    destroyOnClose\r\n      title=\"Customer Details\"\r\n      visible={detailModalVisible}\r\n      onCancel={() => onCancel()}\r\n      width={1000}\r\n      footer={[]}\r\n      >\r\n    <Table columns={columns} dataSource={dataSource}>\r\n\r\n    </Table></Modal></>\r\n    )\r\n}","import React,{useEffect,useState,useRef} from \"react\";\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\nimport axios from \"axios\";\r\nimport {dateFormat} from \"../../lib/dateFormat\";\r\nimport \"antd/dist/antd.css\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport ProTable from '@ant-design/pro-table';\r\nimport { PageContainer, FooterToolbar } from '@ant-design/pro-layout';\r\nimport {PlusOutlined,DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport {Button, Space, Tag,Popconfirm, message} from \"antd\";\r\nimport { statusColor } from \"../../lib/statusTag\";\r\nimport CreateForm from \"./CRUDElements/CreateForm\";\r\nimport UpdateForm from \"./CRUDElements/UpdateForm\";\r\nimport DetailsTable from \"./CRUDElements/DetailsForm\";\r\n\r\nexport default function FlightCRUD(){\r\n\r\n    //控制添加Modal的可视\r\n    const [createModalVisible,handleCreateModalVisible] = useState(false);\r\n    //控制更新Modal的可视，由于需要数据回显，故和createModal分开写\r\n    const [updateModalVisible,handleUpdateModalVisible] = useState(false);\r\n    const [detailModalVisible,handleDetailModalVisible] = useState(false);\r\n    const [selectedRows,setSelectedRows] = useState([]);\r\n    //设置回显的数据\r\n    const [stepFormValues, setStepFormValues] = useState({});\r\n    //用于判断是否能够多选\r\n    const [radioValue, setRadioValue] = useState('read');\r\n    //从后台api获取的数据\r\n    const [apiData, setApiData] = useState([]);\r\n    //全局变量，在整个生命周期都有效\r\n    const actionRef = useRef();\r\n\r\n    //异步方法提交数据, 注意这里返回一个异步函数\r\n    const fetchFlightData = async (query)=>{\r\n        return axios({\r\n          url:\"http://localhost:8080/airlineStaff/findAllFlights\",\r\n          method:\"GET\"\r\n        }).then(function(response){\r\n          if(response.data){\r\n              console.log(\"有数据\");\r\n              return {\"data\":{...response.data},\"success\":true};\r\n          }else{\r\n             return {\"data\":{},\"success\":false};\r\n          }\r\n        }).catch(function(){\r\n          console.log(\"返回默认数据\")\r\n          return {\"data\":dataSource,\"success\":true};\r\n        })  \r\n       \r\n    }\r\n\r\n    const dataSource = {\r\n      \"records\":[\r\n        {\r\n          flightNum: \"MU12243234\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"upcoming\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        {\r\n          flightNum: \"MU1224\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"upcoming\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        {\r\n          flightNum: \"MU234\",\r\n          airlineName:\"Cathay Pacific\",\r\n          sourceAirportName:\"PVG\",\r\n          departureTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          destAirportName:\"SZX\",\r\n          arrivalTime:moment(\"2020-01-01\").format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          price:3030,\r\n          status:\"upcoming\",\r\n          airplaneId:\"MU888\"\r\n        },\r\n        \r\n      ],\"total\":12,\"success\":true};\r\n\r\n\r\n    const handleDelete= (flight_id,airline_name)=>{\r\n        console.log(\"delete\");\r\n    }\r\n\r\n    const handleUpdate = (flight_info)=>{\r\n        console.log(\"update\");\r\n    }\r\n\r\n    const handleUpdateMany =()=>{\r\n      \r\n    }\r\n\r\n    //用于提交数据之后\r\n    const handleCreate = (values)=>{\r\n        axios({\r\n          url:\"http://localhost:8080/airlineStaff/addNewFlight\",\r\n          method:\"post\",\r\n          data:{...values,\r\n            departureTime:new Date(moment(values.departureTime)),\r\n            arrivalTime:new Date(moment(values.arrivalTime))}\r\n        }).then(function(response){\r\n          if(response.data===\"success\"){\r\n            message.success({\r\n              content: 'Insertion Completed',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n            handleCreateModalVisible(false);\r\n          }else{\r\n            message.error({\r\n              content: 'You have already inserted this airplane information!',\r\n              className: 'custom-class',\r\n              style: {\r\n                marginTop: '40vh',\r\n              },\r\n            });\r\n          }\r\n        })\r\n        \r\n    }\r\n\r\n    const handleDetails =()=>{\r\n        console.log(\"show info\");\r\n    }\r\n\r\n    const confirm = (e)=>{\r\n        console.log(e);\r\n        message.success(\"Click on Yes\");\r\n    }\r\n\r\n    const cancel = (e)=>{\r\n        console.log(e);\r\n        message.error(\"Click on No\");\r\n\r\n    }\r\n\r\n\r\n    // 表格列配置项\r\n    const columns = [\r\n        {\r\n            title: \"Flight Number\",\r\n            dataIndex:\"flightNum\",\r\n            key:\"flight\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            fixed:\"left\",\r\n            \r\n        },\r\n        {\r\n            title: \"Airline Name\",\r\n            dataIndex:\"airlineName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key:\"airline\"\r\n        },\r\n        {\r\n            title: \"Dept. Airport\",\r\n            dataIndex: \"sourceAirportName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key: \"dept\"\r\n        },\r\n        {\r\n            title: \"Arri. Airport\",\r\n            dataIndex: \"destAirportName\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n            key: \"arri\"\r\n        },\r\n        {\r\n            title: \"Dept. Time\",\r\n            dataIndex: \"departureTime\",\r\n            valueType:\"dateTime\",\r\n            // textWrap:\"word-break\",\r\n            width:150,\r\n            ellipsis:true,\r\n            key: \"dept_time\"\r\n        },\r\n        {\r\n            title: \"Arri. Time\",\r\n            dataIndex: \"arrivalTime\",\r\n            valueType:\"dateTime\",\r\n            key: \"arri_time\",\r\n            width:150,\r\n            // textWrap:\"word-break\",\r\n       \r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            dataIndex: \"price\",\r\n            hideInSearch:true,\r\n            key: \"price\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Airplane ID\",\r\n            dataIndex: \"airplaneId\",\r\n            hideInSearch:true,\r\n            key: \"airplane_id\",\r\n            textWrap:\"word-break\",\r\n            width:100,\r\n            ellipsis:true,\r\n        },\r\n        {\r\n            title: \"Status\",\r\n            dataIndex: \"status\",\r\n            hideInSearch:true,\r\n            key: \"status\",\r\n            render: tags => (\r\n                <>\r\n                    {\r\n                        <Tag color={statusColor[tags]} key={tags}>\r\n                            {tags.toUpperCase()}\r\n                        </Tag>\r\n                    }\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            key: 'action',\r\n            hideInSearch:true,\r\n            fixed:\"right\",\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                <Button onClick={()=>{\r\n                  handleDetailModalVisible(true);\r\n                  setStepFormValues(record);\r\n                  console.log(\"view details\")\r\n                }}>Details</Button>\r\n                <Button onClick={()=>{\r\n                    handleUpdateModalVisible(true);\r\n                    setStepFormValues(record);\r\n                    console.log(\"edit\");\r\n\r\n                }} type={'primary'} size={'small'} >\r\n                  <EditOutlined style={{fontSize: '15px'}} />\r\n                </Button>\r\n                <Popconfirm\r\n                     title=\"Are you sure to delete this row?\"\r\n                    onConfirm={confirm}\r\n                    onCancel={cancel}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                >\r\n                <Button onClick={()=>{\r\n                    console.log(\"删除\");\r\n\r\n                }} type={'primary'} size={'small'} danger >\r\n                  <DeleteOutlined style={{fontSize: '15px'}} />\r\n                </Button></Popconfirm>\r\n              </Space>\r\n        \r\n            )\r\n        }\r\n    ]\r\n\r\n    // 获取数据 \r\n    const getData = async (params) => {\r\n        // 组装查询参数，比如这里用 pageIndex 代替了 current\r\n        console.log(\"调用getData\");\r\n        const query = {\r\n            ...params,\r\n            pageIndex: params.current\r\n        };\r\n        delete query.current;\r\n\r\n        // 发起请求\r\n        console.log(\"发起请求\")\r\n        const {data,success} = await fetchFlightData(query); //这里需要返回一个异步函数\r\n        \r\n        // 格式化返回数据\r\n        return {\r\n            data: data.records,\r\n            success,\r\n            total: data.total,\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <ProTable\r\n            columns={columns}\r\n            actionRef={actionRef}\r\n            request={getData}\r\n            rowKey={(record,index)=>index}\r\n            scroll={{\"y\":300,x:1300}}\r\n            form={{span:8}}\r\n            size={\"middle\"}\r\n            rowSelection={{\r\n                onchange:(_,selectedRows)=>setSelectedRows(selectedRows),\r\n            }}\r\n            toolBarRender={() => [\r\n            <Button key=\"3\" type=\"primary\" onClick={()=>{\r\n                handleCreateModalVisible(true);\r\n\r\n            }}>\r\n                <PlusOutlined />\r\n                Add Flight\r\n            </Button>,\r\n        ]}\r\n        />\r\n\r\n        {selectedRows?.length > 0 && (\r\n        <FooterToolbar\r\n          extra={\r\n            <div>\r\n              已选择 <a style={{ fontWeight: 600 }}>{selectedRows.length}</a> 项&nbsp;&nbsp;\r\n            </div>\r\n          }\r\n        >\r\n          { radioValue === 'read' && (<Button\r\n            danger\r\n            type=\"primary\"\r\n            onClick={async () => {\r\n              await handleDelete(selectedRows);\r\n              setSelectedRows([]);\r\n              // @ts-ignore\r\n              actionRef.current?.reloadAndRest();\r\n            }}\r\n          >\r\n            批量删除\r\n          </Button>)}\r\n          { radioValue === 'upload'&&(<Button\r\n            type=\"primary\"\r\n            onClick={async () => {\r\n              await handleUpdateMany(selectedRows);\r\n              setSelectedRows([]);\r\n            }}\r\n          >\r\n            批量新增\r\n          </Button>)}\r\n        </FooterToolbar>\r\n      )}\r\n        \r\n\r\n      <CreateForm onSubmit={async (value) => {\r\n            // 发送请求到后端\r\n            const success = await handleUpdate(value);\r\n            if (success) {\r\n              //请求成功推出Modal页面\r\n              handleUpdateModalVisible(false);\r\n              //重置表单数据\r\n              setStepFormValues({});\r\n              //重新刷新子页面\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          onCancel={() => handleCreateModalVisible(false)} \r\n          modalVisible={createModalVisible}\r\n          handleCreateModalVisible={handleCreateModalVisible}\r\n          handleCreate={handleCreate}\r\n          className={\"createForm\"}>\r\n        {/* <ProTable\r\n          onSubmit={async (value) => {\r\n            const success = await handleCreate(value);\r\n            if (success) {\r\n              handleCreateModalVisible(false);\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          rowKey={[\"flight_id\",\"airline\"]}\r\n          type=\"form\"\r\n          columns={columns}\r\n          rowSelection={{}}\r\n        /> */}\r\n      </CreateForm>\r\n         \r\n      {stepFormValues && Object.keys(stepFormValues).length ? (\r\n        <UpdateForm\r\n        className=\"updateForm\"\r\n          onSubmit={async (value) => {\r\n            // 发送请求到后端\r\n            const success = await handleUpdate(value);\r\n            if (success) {\r\n              //请求成功推出Modal页面\r\n              handleUpdateModalVisible(false);\r\n              //重置表单数据\r\n              setStepFormValues({});\r\n              //重新刷新子页面\r\n              if (actionRef.current) {\r\n                actionRef.current.reload();\r\n              }\r\n            }\r\n          }}\r\n          //取消update操作\r\n          onCancel={() => {\r\n              // 推出Modal\r\n            handleUpdateModalVisible(false);\r\n            //重置表单内容\r\n            setStepFormValues({});\r\n          }}\r\n          handleUpdateModalVisible={handleUpdateModalVisible}\r\n          updateModalVisible={updateModalVisible}\r\n          values={stepFormValues}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : null}\r\n\r\n      {stepFormValues && Object.keys(stepFormValues).length ? (\r\n        <DetailsTable className={\"DetailForm\"}\r\n          handleDetailModalVisible={handleDetailModalVisible}\r\n          detailModalVisible={detailModalVisible}\r\n          onCancel={() => {\r\n              // 推出Modal\r\n            handleDetailModalVisible(false);\r\n            //重置表单内容\r\n            setStepFormValues({});\r\n          }}\r\n          values={stepFormValues}\r\n        ></DetailsTable>):null}\r\n      \r\n    </div>\r\n        \r\n\r\n\r\n\r\n    );\r\n};\r\n","import {Card, Form, Input, Button,Table,InputNumber} from 'antd';\r\nimport {Bar} from \"@ant-design/charts\";\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nexport default function ViewAgents(){\r\n\r\n    // sales 和 commission\r\n    const [activeTab,setActiveTab] = useState(\"sales\");\r\n    const [topK,setTopK] = useState(5);\r\n    const [data,setData]=useState([]);\r\n\r\n    const topSalesData =[\r\n        {\r\n            type:\"22@23.com\",\r\n            sales:34\r\n        },\r\n        {\r\n            type:\"22@25.com\",\r\n            sales:38\r\n        },\r\n        {\r\n            type:\"aa@23.com\",\r\n            sales:30\r\n        },\r\n        {\r\n            type:\"s2a@43.com\",\r\n            sales:12\r\n        },\r\n        {\r\n            type:\"12@23.com\",\r\n            sales:56\r\n        }\r\n    ]\r\n\r\n    useEffect(()=>{\r\n        setData(topSalesData);\r\n    },[])\r\n\r\n    const topCommissionData=[\r\n        {\r\n            type:\"22@23.com\",\r\n            commission:340\r\n        },\r\n        {\r\n            type:\"22@25.com\",\r\n            commission:380\r\n        },\r\n        {\r\n            type:\"aa@23.com\",\r\n            commission:100\r\n        },\r\n        {\r\n            type:\"s2a@43.com\",\r\n            commission:120\r\n        },\r\n        {\r\n            type:\"12@23.com\",\r\n            commission:560\r\n        }\r\n    ];\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Ranking'},\r\n        {key: 'commission', tab: 'Commission Ranking'},\r\n    ]\r\n\r\n    const onTabChange = (key)=>{\r\n        console.log(\"tab change\");\r\n        setActiveTab(key);\r\n        if(key===\"sales\"){\r\n            setData(topSalesData);\r\n        }else{\r\n            console.log(key);\r\n            console.log(\"top commission\");\r\n            setData(topCommissionData);\r\n        }\r\n    }\r\n\r\n    const onNumberChange=(value)=>{\r\n        //更新图标\r\n        setTopK(value);\r\n    }\r\n\r\n\r\n    var config = {\r\n        data: data.slice(0,topK),\r\n        xField: activeTab===\"sales\"?'sales':\"commission\",\r\n        yField: 'type',\r\n        legend: { position: 'top-left' },\r\n        barBackground: { style: { fill: 'rgba(0,0,0,0.1)' } },\r\n        interactions: [\r\n          {\r\n            type: 'active-region',\r\n            enable: false,\r\n          },\r\n        ],\r\n      };\r\n     \r\n\r\n    return (\r\n    <Card tabList={tabList}\r\n        activeTab={activeTab}\r\n        onTabChange={onTabChange}\r\n        tabBarExtraContent={<><span style={{marginRight:5}}>Top</span><InputNumber addonBefore=\"+\" addonAfter=\"$\" min={1} onChange={onNumberChange} defaultValue={5}></InputNumber><span style={{marginLeft:5}}>Agents</span></>}\r\n        hoverable={true}>\r\n\r\n\r\n        \r\n        <Bar \r\n        {...config}\r\n        sort \r\n        onReady={(plot)=>{\r\n            console.log(\"xixi\");\r\n                plot.chart.on(\"element:click\",(evt)=>{\r\n                    console.log(evt)\r\n                });\r\n            }}\r\n        />;\r\n\r\n\r\n\r\n    </Card>)\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space} from 'antd';\r\nimport { Column } from '@ant-design/charts';\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nexport default function ViewReports(){\r\n    const [data,setData]=useState([]);\r\n    const [startDate,setStartDate]=useState(undefined);\r\n    const [endDate,setEndDate] = useState(undefined);\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{\r\n      console.log(\"haha\");\r\n      setData(sampleData);\r\n    },[]);\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Report'},\r\n    ]\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '家具家电',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '粮油副食',\r\n          sales: 52,\r\n        },\r\n        {\r\n          type: '生鲜水果',\r\n          sales: 61,\r\n        },\r\n        {\r\n          type: '美容洗护',\r\n          sales: 145,\r\n        },\r\n        {\r\n          type: '母婴用品',\r\n          sales: 48,\r\n        },\r\n        {\r\n          type: '进口食品',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '食品饮料',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '家庭清洁',\r\n          sales: 38,\r\n        },\r\n      ];\r\n      var config = {\r\n        data: data,\r\n        xField: 'type',\r\n        yField: 'sales',\r\n        label: {\r\n          position: 'middle',\r\n          style: {\r\n            fill: '#FFFFFF',\r\n            opacity: 0.6,\r\n          },\r\n        },\r\n        xAxis: {\r\n          label: {\r\n            autoHide: true,\r\n            autoRotate: false,\r\n          },\r\n        },\r\n        meta: {\r\n          type: { alias: '类别' },\r\n          sales: { alias: '销售额' },\r\n        },\r\n      };\r\n\r\n\r\n      const renderLastYear = ()=>{\r\n\r\n      }\r\n\r\n      const renderLastMonth = ()=>{\r\n\r\n\r\n      }\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button>\r\n            <RangePicker picker=\"month\"></RangePicker></Space>\r\n        )\r\n      }\r\n\r\n\r\n\r\n      return (\r\n      <Card title=\"Here is the brief report\"\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}\r\n      >\r\n      <Column {...config} /></Card>);\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space} from 'antd';\r\nimport { Column } from '@ant-design/charts';\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nexport default function TopDestinations(){\r\n    const [data,setData]=useState();\r\n    const [startDate,setStartDate]=useState(undefined);\r\n    const [endDate,setEndDate] = useState(undefined);\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{},[]);\r\n\r\n    const tabList = [\r\n        {key: 'sales', tab: 'Sales Report'},\r\n    ]\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '家具家电',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '粮油副食',\r\n          sales: 52,\r\n        },\r\n        {\r\n          type: '生鲜水果',\r\n          sales: 61,\r\n        },\r\n        {\r\n          type: '美容洗护',\r\n          sales: 145,\r\n        },\r\n        {\r\n          type: '母婴用品',\r\n          sales: 48,\r\n        },\r\n        {\r\n          type: '进口食品',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '食品饮料',\r\n          sales: 38,\r\n        },\r\n        {\r\n          type: '家庭清洁',\r\n          sales: 38,\r\n        },\r\n      ];\r\n      var config = {\r\n        data: sampleData,\r\n        xField: 'type',\r\n        yField: 'sales',\r\n        label: {\r\n          position: 'middle',\r\n          style: {\r\n            fill: '#FFFFFF',\r\n            opacity: 0.6,\r\n          },\r\n        },\r\n        xAxis: {\r\n          label: {\r\n            autoHide: true,\r\n            autoRotate: false,\r\n          },\r\n        },\r\n        meta: {\r\n          type: { alias: '类别' },\r\n          sales: { alias: '销售额' },\r\n        },\r\n      };\r\n\r\n\r\n      const renderLastYear = ()=>{\r\n\r\n      }\r\n\r\n      const renderLast3Month = ()=>{\r\n\r\n\r\n      }\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLast3Month} type={\"primary\"}>Last 3 Months</Button>\r\n            <RangePicker picker=\"day\"></RangePicker></Space>\r\n        )\r\n      }\r\n\r\n\r\n\r\n      return (\r\n      <Card title=\"Here is the brief report\"\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}\r\n      >\r\n      <Column {...config} /></Card>);\r\n}","import {Card, Form, Input, Button,Table,DatePicker,Space} from 'antd';\r\nimport { Pie } from '@ant-design/charts';\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nexport default function RevenueComparison(){\r\n\r\n    const [data,setData]=useState();\r\n    const [startDate,setStartDate]=useState(undefined);\r\n    const [endDate,setEndDate] = useState(undefined);\r\n\r\n    const {RangePicker} = DatePicker;\r\n    \r\n    useEffect(()=>{},[]);\r\n\r\n    const tabList = [\r\n        {key: 'revenue', tab: 'Revenue Comparison'},\r\n    ]\r\n\r\n    var sampleData = [\r\n        {\r\n          type: '分类一',\r\n          value: 27,\r\n        },\r\n        {\r\n          type: '分类二',\r\n          value: 25,\r\n        },\r\n        {\r\n          type: '分类三',\r\n          value: 18,\r\n        },\r\n        {\r\n          type: '分类四',\r\n          value: 15,\r\n        },\r\n        {\r\n          type: '分类五',\r\n          value: 10,\r\n        },\r\n        {\r\n          type: '其他',\r\n          value: 5,\r\n        },\r\n      ];\r\n      var config = {\r\n        appendPadding: 10,\r\n        data: sampleData,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        radius: 0.75,\r\n        label: {\r\n          type: 'spider',\r\n          labelHeight: 28,\r\n          content: '{name}\\n{percentage}',\r\n        },\r\n        interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\r\n      };\r\n\r\n      const renderLastYear = ()=>{\r\n\r\n    }\r\n\r\n        const renderLastMonth = ()=>{\r\n\r\n\r\n    }\r\n\r\n\r\n      const renderTabExtra = ()=>{\r\n\r\n\r\n        return (\r\n            <Space direction=\"horizontal\" size={12}>\r\n            <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n            <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button>\r\n            <RangePicker picker=\"day\"></RangePicker></Space>\r\n        )\r\n      }\r\n\r\n\r\n      return (\r\n      <Card title=\"Here is the brief report\"\r\n      tabList={tabList}\r\n      hoverable={true}\r\n      tabBarExtraContent={renderTabExtra()}>\r\n        <Pie {...config} />\r\n      </Card>);\r\n}","import {Card, Modal,Form, Input,Tooltip, Button,Table,DatePicker,InputNumber,Space} from 'antd';\r\nimport {Bar} from \"@ant-design/charts\";\r\nimport React, {useState,useEffect} from \"react\";\r\nimport {LockOutlined, UserOutlined,QuestionCircleOutlined} from \"@ant-design/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nconst {RangePicker} = DatePicker;\r\n\r\nexport default function ViewFrequent(){\r\n     // sales 和 commission\r\n     const [activeTab,setActiveTab] = useState(\"sales\");\r\n     const [topK,setTopK] = useState(5);\r\n     const [data,setData]=useState([]);\r\n     const [modalVisiblibity,setModalVisibility] = useState(false);\r\n     const [modalEmail,setModalEmail] = useState(\"\");\r\n     const [tableData,setTableData] = useState([]);\r\n\r\n \r\n     const topSalesData =[\r\n         {\r\n             customer:\"22@23.com\",\r\n             tickets:2\r\n         },\r\n         {\r\n            customer:\"22@25.com\",\r\n            tickets:8\r\n         },\r\n         {\r\n            customer:\"aa@23.com\",\r\n            tickets:3\r\n         },\r\n         {\r\n            customer:\"s2a@43.com\",\r\n            tickets:12\r\n         },\r\n         {\r\n            customer:\"12@23.com\",\r\n            tickets:5\r\n         }\r\n     ]\r\n\r\n\r\n     const tableSampleData = [\r\n         {\r\n             key:\"1\",\r\n             flight_id:\"MA1234\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090\r\n         },\r\n         {\r\n             key:\"2\",\r\n             flight_id:\"MH3455\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090\r\n         },\r\n         {\r\n             key:\"3\",\r\n             flight_id:\"MK5888\",\r\n             airline:\"Cathay Pacific\",\r\n             dept_time:\"2020-03-03\",\r\n             arri_time:\"2021-01-01\",\r\n             price:9090\r\n         },{\r\n            key:\"4\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"5\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"6\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"7\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"8\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"9\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"10\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"11\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        },{\r\n            key:\"12\",\r\n            flight_id:\"MK5888\",\r\n            airline:\"Cathay Pacific\",\r\n            dept_time:\"2020-03-03\",\r\n            arri_time:\"2021-01-01\",\r\n            price:9090\r\n        }\r\n     ]\r\n\r\n\r\n     const tableColumns = [\r\n        {\r\n            title:\"Flight Number\",\r\n            dataIndex: \"flight_id\",\r\n            key:\"flight_id\"\r\n        },\r\n        {   \r\n            title:\"Airline\",\r\n            dataIndex:\"airline\",\r\n            key:\"airline\"\r\n        },\r\n        {\r\n            title: \"Dept. Time\",\r\n            dataIndex: \"dept_time\",\r\n            key: \"dept_time\"\r\n        },\r\n        {\r\n            title: \"Arri. Time\",\r\n            dataIndex: \"arri_time\",\r\n            key: \"arri_time\"\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            dataIndex: \"price\",\r\n            key: \"price\"\r\n        }\r\n     ]\r\n \r\n     useEffect(()=>{\r\n         setData(topSalesData);\r\n     },[])\r\n \r\n     const tabList = [\r\n         {key: 'customer', tab: 'Most Frequent Customers'},\r\n     ]\r\n \r\n \r\n     const onNumberChange=(value)=>{\r\n         //更新图标\r\n         setTopK(value);\r\n     }\r\n\r\n\r\n     const renderLastYear = ()=>{\r\n\r\n    }\r\n\r\n    const renderLastMonth = ()=>{\r\n\r\n\r\n    }\r\n\r\n    const renderTabExtra = ()=>{\r\n\r\n\r\n      return (\r\n          <Space direction=\"horizontal\" size={10}>\r\n          <Button onClick={renderLastYear} type={\"primary\"}>Last Year</Button>\r\n          <Button onClick={renderLastMonth} type={\"primary\"}>Last Month</Button>\r\n          <RangePicker picker=\"month\"></RangePicker>\r\n          <>\r\n          <span style={{marginRight:2}}>Top</span>\r\n            <InputNumber min={1} onChange={onNumberChange} defaultValue={5}></InputNumber>\r\n          <span style={{marginLeft:2}}>Agents</span>\r\n          </>\r\n          <Tooltip placement=\"topLeft\" title=\"Click the bar to check the flights taken\"><QuestionCircleOutlined/></Tooltip>\r\n          </Space>\r\n      )\r\n    }\r\n \r\n \r\n     var config = {\r\n         data: data.slice(0,topK),\r\n         xField: \"tickets\",\r\n         yField: 'customer',\r\n         legend: { position: 'top-left' },\r\n         barBackground: { style: { fill: 'rgba(0,0,0,0.1)' } },\r\n         interactions: [\r\n           {\r\n             type: 'active-region',\r\n             enable: false,\r\n           },\r\n         ],\r\n        };\r\n       \r\n\r\n\r\n    // 编写图例点击事件\r\n    const handleClick =(event)=>{\r\n        setTableData(tableSampleData);\r\n        setModalEmail(event.data.data.customer);\r\n        setModalVisibility(true);\r\n        \r\n        // console.log(event);\r\n        // console.log(modalVisiblibity);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        // 推出Modal\r\n        setModalVisibility(false);\r\n    }\r\n\r\n\r\n    return (<Card tabList={tabList}\r\n        tabBarExtraContent={renderTabExtra()}\r\n        hoverable={true}>\r\n        \r\n        <Bar \r\n        {...config}\r\n        sort \r\n        onReady={(plot)=>{\r\n            plot.chart.on(\"element:click\",handleClick\r\n                );\r\n            }}\r\n        />\r\n        <Modal\r\n        destroyOnClose\r\n        title={\"Flight details with \"+ modalEmail}\r\n        visible={modalVisiblibity}\r\n        onCancel={handleCancel}>\r\n            <Card >\r\n                <Table columns={tableColumns} dataSource={tableData} size={\"middle\"}>\r\n\r\n                </Table>\r\n            </Card>\r\n\r\n        </Modal>\r\n        \r\n    </Card>)\r\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,Select} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\nconst {Search} = Input;\r\n\r\nconst {Option} = Select;\r\n\r\nexport default function AddAgents() {\r\n\r\n    const [email,setEmail] = useState(undefined);\r\n    const [searchResult,setSearchResult] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSearch=()=>{\r\n        axios({\r\n            url:\"\",\r\n            method:\"POST\",\r\n            data:{}\r\n        }).then(function(response){\r\n            if(response.data){\r\n                setSearchResult(response.data);\r\n            }else{\r\n                console.log(\"请求无结果\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleChange = (value)=>{\r\n        setEmail(value);\r\n        console.log(\"changed\");\r\n    }\r\n\r\n\r\n    const onFinish =()=>{\r\n\r\n    }\r\n\r\n    const options = searchResult.map((item,index)=>(<Option key={index}>{item}</Option>));\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 8,\r\n          },\r\n        },\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n          },\r\n        },\r\n      };\r\n\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n\r\n    return (\r\n        <Card title=\"Add Booking Agents\">\r\n            <Form\r\n            {...formItemLayout}\r\n                form={form}\r\n                name=\"Add Agents\"\r\n                onFinish={onFinish}\r\n                 scrollToFirstError>\r\n                <Form.Item name=\"email\" label=\"Agent Email\">\r\n                    <Select\r\n                        showSearch\r\n                        style={{width: 300, padding: 10}}\r\n                        placeholder={\"Email\"}\r\n                        value={email}\r\n                        defaultActiveFirstOption={false}\r\n                        showArrow={false}\r\n                        filterOption={false}\r\n                        onSearch={handleSearch}\r\n                        onChange={handleChange}\r\n                        notFoundContent={null}\r\n                        allowClear\r\n                    >\r\n                        {options}\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item {...tailFormItemLayout}> \r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Add\r\n                </Button>\r\n            </Form.Item>\r\n            </Form>\r\n\r\n        </Card>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {Input, Card, Button,Form,Select} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport moment from \"moment\";\r\nimport qs from \"qs\";\r\n\r\n\r\nconst {Search} = Input;\r\n\r\nconst {Option} = Select;\r\n\r\nexport default function GrantPermission(){\r\n\r\n    const [searchResult,setSearchResult] = useState([]);\r\n    const [email,setEmail] = useState();\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const options = [\"Admin\",\"Operator\"];\r\n    \r\n    const optionsMapped = options.map((item,index)=><Option key={index}>{item}</Option>)\r\n\r\n\r\n    const onFinish=(values)=>{\r\n        //提交请求\r\n        console.log(\"papa\");\r\n\r\n    }\r\n\r\n    const onFinishFailed = ()=>{\r\n        console.log(\"\");\r\n    }\r\n\r\n\r\n\r\n    const handleSearch = ()=>{\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleChange = ()=>{\r\n\r\n    }\r\n\r\n\r\n    const formItemLayout = {\r\n        labelCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 8,\r\n          },\r\n        },\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n          },\r\n        },\r\n      };\r\n\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n\r\n\r\n    return (<Card title=\"Grant Permission\">\r\n        <Form \r\n        {...formItemLayout}\r\n                form={form}\r\n                name=\"Add Agents\"\r\n                onFinish={onFinish}\r\n                 scrollToFirstError>\r\n        <Form.Item name=\"email\" label=\"Agent Email\">\r\n            <Select showSearch\r\n                style={{width: 300, padding: 10}}\r\n                placeholder={\"Email\"}\r\n                value={email}\r\n                defaultActiveFirstOption={false}\r\n                showArrow={false}\r\n                filterOption={false}\r\n                onSearch={handleSearch}\r\n                onChange={handleChange}\r\n                notFoundContent={null}\r\n                allowClear>\r\n            </Select>\r\n\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"permission\" label=\"Permission Type\">\r\n        <Select\r\n            showSearch\r\n                style={{width: 300, padding: 10}}\r\n                placeholder={\"Permission Type\"}\r\n                defaultActiveFirstOption={false}\r\n                showArrow={false}\r\n                filterOption={false}\r\n                allowClear>\r\n                {optionsMapped}\r\n            </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}> \r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Grant Permission\r\n                </Button>\r\n            </Form.Item>\r\n\r\n\r\n        </Form>\r\n\r\n\r\n\r\n\r\n    </Card>)\r\n}","import React, {useEffect, useState} from \"react\"\nimport {Layout, Menu, Breadcrumb} from \"antd\";\nimport {CarryOutOutlined, SendOutlined, SettingOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {useNavigate} from \"react-router-dom\";\nimport CustomerSidebar from \"../component/customer/CustomerSidebar\";\nimport ViewFlights from \"../component/flight/ViewFlights\";\nimport SearchFlights from \"../component/flight/SearchFlights\";\nimport PurchaseTicket from \"../component/customer/PurchaseTicket\";\nimport SpendingChart from \"../component/customer/SpendingChart\";\nimport AgentSidebar from \"../component/agent/AgentSidebar\";\nimport TopCustomerChart from \"../component/agent/TopCustomerChart\";\nimport CustomerOrders from \"../component/agent/CustomerOrders\";\nimport CommissionStatistics from \"../component/agent/CommissionStatistics\";\nimport StaffSidebar from \"../component/staff/StaffSidebar\";\nimport EditAirport from \"../component/staff/EditAirport\";\nimport EditAirplane from \"../component/staff/EditAirplane\";\nimport GlobalSidebar from \"../component/global/GlobalSidebar\";\nimport FlightCRUD from \"../component/staff/FlightCRUD\";\nimport ViewAgents from \"../component/staff/ViewAgents\"\nimport ViewReports from \"../component/staff/ViewReports\";\nimport TopDestinations from \"../component/staff/TopDestinations\";\nimport RevenueComparison from \"../component/staff/RevenueComparsion\";\nimport ViewFrequent from \"../component/staff/ViewFrequent\";\nimport AddAgents from \"../component/staff/AddAgents\";\nimport GrantPermission from \"../component/staff/GrantPermission\";\n\nconst {Header, Content, Sider, Footer} = Layout;\nconst {SubMenu} = Menu;\n\nexport default function UserPage({initializingTab,loginInfo}) {\n    let navigate = useNavigate();\n\n    const [navigateBar, setNavigateBar] = useState(\"customer\");\n    const [sidebar, setSidebar] = useState(\"\");\n    const [collapsed,setCollapsed] =useState(false);\n    const [flightsResult, setFlightResult] = useState(null);\n    const [actionType,setActionType] = useState(\"\");\n\n    const handleNavigateBar = (page) => {\n        setNavigateBar(page.key);\n        navigate(\"/\" + page.key, {replace: true});\n    }\n\n    const sidebarList = {\n        customer: <CustomerSidebar updateSelection={setSidebar} setActionType={setActionType} setFlightResult={setFlightResult} />,\n        agent: <AgentSidebar updateSelection={setSidebar} setActionType={setActionType}  setFlightResult={setFlightResult}/>,\n        staff: <StaffSidebar updateSelection={setSidebar} setActionType={setActionType}  setFlightResult={setFlightResult}/>,\n        global: <GlobalSidebar updateSelection={setSidebar} setActionType={setActionType}  setFlightResult={setFlightResult}/>,\n    }\n\n\n    const userContent = {\n        \"Flight CRUD\":<FlightCRUD/>,\n        \"My flights\": <SearchFlights userType={initializingTab} actionTab={\"view\"} \n                                    flightsResult={flightsResult} \n                                    setFlightResult={setFlightResult} \n                                    actionType={actionType}/>,\n        \"Search flights\": <SearchFlights userType={initializingTab} \n                                        loginInfo={loginInfo} \n                                        actionTab={\"search\"} \n                                        flightsResult={flightsResult} \n                                        setFlightResult={setFlightResult} \n                                        actionType={actionType}/>,\n        \"Purchase tickets\": <SearchFlights userType={initializingTab} \n                                           loginInfo={loginInfo} \n                                           actionTab={\"purchase\"} \n                                           flightsResult={flightsResult} \n                                           setFlightResult={setFlightResult} \n                                           actionType={actionType}/>,\n        \"Track spending\": <SpendingChart />,\n        \"Top customers\": <TopCustomerChart />,\n        \"Create order\": <SearchFlights userType={initializingTab}\n                                       loginInfo={loginInfo}  \n                                       actionTab={\"purchase\"} \n                                       flightsResult={flightsResult}\n                                       setFlightResult={setFlightResult}\n                                       actionType={actionType}/>,\n        \"My customer orders\": <SearchFlights userType={initializingTab} \n                                            loginInfo={loginInfo} \n                                            actionTab={\"search\"} \n                                            flightsResult={flightsResult} \n                                            setFlightResult={setFlightResult} \n                                            actionType={actionType}/>,\n        \"Commission statistics\": <CommissionStatistics />,\n        \"Add airport\": <EditAirport />,\n        \"Add airplane\": <EditAirplane/>,\n        \"Add booking agent\":<AddAgents/>,\n        \"View Agents\":<ViewAgents />,\n        \"View Reports\":<ViewReports/>,\n        \"Top destinations\":<TopDestinations/>,\n        \"Revenue Comparison\":<RevenueComparison/>,\n        \"Frequent customers\":<ViewFrequent/>,\n        \"Grant permission\":<GrantPermission/>\n    }\n\n    useEffect(() => {\n        setNavigateBar(initializingTab)\n    }, [])\n\n    return (\n        <Layout>\n            <Header className={\"header\"} style={{position: 'fixed', zIndex: 2, width: '100%'}}>\n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={[initializingTab]}\n                    selectedKeys={[navigateBar]}\n                    onClick={handleNavigateBar}\n                    style={{maginLeft:\"300px\"}}\n                >\n                    <Menu.Item key=\"customer\">Customer</Menu.Item>\n                    <Menu.Item key=\"agent\">Agent</Menu.Item>\n                    <Menu.Item key=\"staff\">Staff</Menu.Item>\n                    <Menu.Item key=\"global\">Global</Menu.Item>\n                </Menu>\n            </Header>\n            <Layout style={{minHeight: '100vh', marginTop: 64}}>\n                <Sider width={250} height={100} className=\"site-layout-background\" collapsible collapsed={collapsed} onCollapse={setCollapsed}>\n                    {sidebarList[navigateBar]}\n                </Sider>\n                <Layout style={{padding: '0 24px 24px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>{navigateBar.charAt(0).toUpperCase() + navigateBar.slice(1)}</Breadcrumb.Item>\n                        <Breadcrumb.Item>{sidebar}</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{padding: 24, margin: 0}}\n                    >\n                        {userContent[sidebar]}\n                    </Content>\n                </Layout>\n            </Layout>\n            <Layout style={{textAlign: 'center', marginBottom: 0}}>\n                <Footer>\n                    2021 Global Airline All rights reserved.\n                </Footer>\n            </Layout>\n\n        </Layout>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomePage from \"./homepage\";\nimport LoginPage from \"./page/LoginPage\";\nimport RegisterPage from \"./page/RegisterPage\";\nimport reportWebVitals from './reportWebVitals';\nimport \"antd/dist/antd.css\"\nimport {\n    BrowserRouter as Router,\n    Route,\n} from \"react-router-dom\";\nimport {Routes} from \"react-router-dom\";\nimport UserPage from \"./page/UserPage\";\n\n//Configure the Routers for Conditional Rendering\nfunction App() {\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<HomePage />} />\n                <Route path=\"/login\" element={<LoginPage />} />\n                <Route path=\"/registercustomer\" element={<RegisterPage initializeType='customer' />} />\n                <Route path=\"/registerstaff\" element={<RegisterPage initializeType='airlineStaff'/>}/>\n                <Route path=\"/registeragent\" element={<RegisterPage initializeType='bookingAgent'/>}/>\n                <Route path=\"/customer\" element={<UserPage initializingTab='customer' loginInfo={\"\"}/>} />\n                <Route path=\"/agent\" element={<UserPage initializingTab='agent'/> } loginInfo={\"\"} />\n                <Route path=\"/staff\" element={<UserPage initializingTab='staff'/> } loginInfo={\"\"}/>\n                <Route path=\"/global\" element={<UserPage initializingTab='global'/> } loginInfo={\"\"}/>\n            </Routes>\n        </Router>\n    )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}